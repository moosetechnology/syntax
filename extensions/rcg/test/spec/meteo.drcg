
sent(X)(In,Out)			--> analyse(X)(In,Out).


analyse(U "." V "." "wind" W "." "wea" X "." "temp" Y ".")(s(D,loc(L),wind(Wi),weather(We),temp(T)),Out)
				--> &StrLen(8,U) when(U)(D,OutDate)
		    	    	    where(V)(L,OutLoc)
		    	    	    wind(W)(Wi,OutWind)
		    	    	    weather(X)(We,OutWe)
		    	    	    temp(Y)(T,OutTemp)
		    	    	    &Cut(Y)
				    {concat([weather, forcast, for|OutLoc], [issued, at|OutDate], Out1),
				     concat(Out1,OutWind,Out2),
				     concat(Out2,[weather|OutWe],Out3),
				     concat(Out3,OutTemp,Out)}.

	
when(Time Zone Day YMD)(date(T,Zone,Day,Date),Out)
				-->  daytime(Time)(T,OutTime,OutDayTime)
		     	     	     &StrEq("%atom",Zone)
		     	     	     &StrLen(1,Day) day(Day)(Day,OutDay)
		     	     	     &StrLen(5,YMD) date(YMD)(Date,OutDate)
		     	     	     {concat(OutTime,[Zone,OutDay| OutDayTime],Out1),
				      concat(Out1,OutDate,Out)}.

daytime(T)(T,OutTime,OutDayTime)	--> time(T)(T,OutTime) single_daytime(T)(T,OutDayTime).

time(T)(T,O)				--> readtime(T)(T,H,M) single_time(T)(T,H,M,O) .

readtime(T)(T,H,M)			--> &StrEq("%int",T) {H is T/100,M is T mod 100}.

single_time(X)(T,12,0,[noon])		--> .
single_time(X)(T,24,0,[midnight])	--> .
single_time(X)(T,H,0,[H,o,clock])	--> {H<12}.
single_time(X)(T,[H-12,o,clock])	--> {H>12,H<24}.
single_time(X)(T,H,M,[H,M])		--> {H<12,M>0,M<60}.
single_time(X)(T,H,M,[H-12,M])		--> {H>12,H<24,M>0,M<60}.

single_daytime(X)(T,[early,morning])	--> {T<500}.
single_daytime(X)(T,[morning])		--> {T>=500,T<1200}.
single_daytime(X)(1200,[])		--> .
single_daytime(X)(T,[afternoon])	--> {T>1200,T<1745}.
single_daytime(X)(T,[evening])		--> {T>=1745,T<2230}.
single_daytime(X)(T,[night])		--> {T>=2230}.

day(D)(D,O)				--> &StrEq("%atom",D) single_day(D)(D,O) .

single_day(X)(mo,monday)	--> .
single_day(X)(tu,tuesday)	--> .
single_day(X)(we,wednesday)	--> .
single_day(X)(th,thursday)	--> .
single_day(X)(fr,friday)	--> .
single_day(X)(sa,saturday)	--> .
single_day(X)(su,sunday)	--> .

date(Y "/" M "/" D)([Y,M,D],[D,Th,OM,OY])
				--> &StrLen(1,Y)
		     		    &StrLen(1,M)
		     		    &StrLen(1,D) 
				    year(Y)(Y,OY)
		     		    month(M)(M,OM)
				    th(D)(D,Th).

year(Y)(Y,O)			--> &StrEq("%int",Y) single_year(Y)(Y,O).

% Pour passer l'an 2000...
single_year(X)(Y,1900+Y)	--> {Y>=50}.
single_year(X)(Y,2000+Y)	--> {Y<50}.

th(D)(D,O)			--> &StrEq("%int",D) single_th(D)(D,O).

single_th(X)(1,th)		--> .
single_th(X)(2,nd)		--> .
single_th(X)(3,rd)		--> .
single_th(X)(D,th)		--> {D>3}.

month(M)(M,O)			--> &StrEq("%int",M) single_month(M)(M,O).

single_month(X)(1,january)	--> .
single_month(X)(2,february)	--> .
single_month(X)(3,march)	--> .
single_month(X)(4,april)	--> .
single_month(X)(5,may)		--> .
single_month(X)(6,june)		--> .
single_month(X)(7,july)		--> .
single_month(X)(8,august)	--> .
single_month(X)(9,september)	--> .
single_month(X)(10,october)	--> .
single_month(X)(11,november)	--> .
single_month(X)(12,december)	--> .


% where is 1 or more locations, separated by comma, ending in period
where(L)([L],OL)			--> &StrLen(1,L) readloc(L)(L,OL).
where(L "," R)([L|Rest],OL)		--> &StrLen(1,L) readloc(L)(L,OL1) where(R)(Rest, OL2) {concat(OL1, OL2, OL)}.

readloc(L)(L,OL)			--> &StrEq("%atom",L) uloc(L)(L,OL) .

uloc(L)(frob,[frobisher, bay])		--> .
uloc(L)(beli,[belle, isle])		--> .
uloc(L)(harr,[harrington])		--> .
uloc(L)(wco,[west, coast])		--> .
uloc(L)(belib,[belle, isle, bank])	--> .

% wind is the word `wind' followed by a sequence of 1 or more pairs
% (speed,direction) or triples (speed,direction,time)
wind(W)(WindList2,Out)		--> windlist(W)(WindList,Wind,_,Out)
				    {concat(WindList,[Wind],WindList2)}.

windlist(SD T)([],[S,D,T],[G,B],[winds,S,mph|Out])
				--> &StrLen(2,SD)
				    ssaybearing(SD)(S,D,G,OutForce,B,OutBearing)
				    &StrLen(1,T)
				    ssaytime(T)(T,OutTime)
				    {concat(OutForce,[OutBearing|OutTime],Out)}.
windlist(SD)([],[S,D,nil],[G,B],[winds,S,mph|Out])
				--> &StrLen(2,SD)
				    ssaybearing(SD)(S,D,G,OutForce,B,OutBearing)
				    {concat(OutForce,[OutBearing],Out)}.
windlist(Wr SD T)(WindList2,[S2,D2,T2],[G2,B2],Out4)
				--> &StrLen(2,SD)
				    ssaybearing(SD)(S2,D2,G2,OutForce,B2,_)				
				    &StrLen(1,T)
				    ssaytime(T)(T2,OutTime)
				    windlist(Wr)(WindList,[S1,D1,T1],[G1,B1],OutWindList),
				    changespeed(SD)(S1,G1,S2,G2,OutChangeSpeed),
				    changedir(SD)(D1,B1,D2,B2,OutChangeDir)
				    {concat(WindList,[[S1,D1,T1]],WindList2),
				     concat(OutWindList,OutChangeSpeed,Out1),
				     concat(Out1,OutForce,Out2),
				     concat(Out2,OutChangeDir,Out3),
				     concat(Out3,OutTime,Out4)}.
windlist(Wr SD)(WindList2,[S2,D2,nil],[G2,B2],Out3)
				--> &StrLen(2,SD)
				    ssaybearing(SD)(S2,D2,G2,OutForce,B2,_)				
				    windlist(Wr)(WindList,[S1,D1,T1],[G1,B1],OutWindList),
				    changespeed(SD)(S1,G1,S2,G2,OutChangeSpeed),
				    changedir(SD)(D1,B1,D2,B2,OutChangeDir)
				    {concat(WindList,[[S1,D1,T1]],WindList2),
				     concat(OutWindList,OutChangeSpeed,Out1),
				     concat(Out1,OutForce,Out2),
				     concat(Out2,OutChangeDir,Out3)}.


ssaytime(T)(T,O)		--> &StrEq("%atom",T) saytime(T)(T,O).

ssaybearing(S D)(S,D,G,O1,B,O2)	--> &StrLen(1,S) ssayforce(S)(S,G,O1) &StrEq("%int",D) saybearing(D)(D,B,O2).

ssayforce(S)(S,G,O)		--> &StrEq("%int",S) sayforce(S)(S,G,O).


sayforce(X)(S,0,[calm])			--> {S<1}.
sayforce(X)(S,1,[slight])		--> {1=<S, S=<3}.
sayforce(X)(S,2,[light,breeze])		--> {4=<S, S=<7}.
sayforce(X)(S,3,[gentle, breeze])	--> {8=<S, S=<12}.
sayforce(X)(S,4,[moderate, breeze])	--> {13=<S, S=<18}.
sayforce(X)(S,5,[fresh, breeze])	--> {19=<S, S=<24}.
sayforce(X)(S,6,[strong, breeze])	--> {25=<S, S=<31}.
sayforce(X)(S,7,[near, gale, force])	--> {32=<S, S=<38}.
sayforce(X)(S,8,[gale, force, 8])	--> {39=<S, S=<46}.
sayforce(X)(S,9,[strong, gale])		--> {47=<S, S=<54}.
sayforce(X)(S,10,[storm])		--> {55=<S, S=<63}.
sayforce(X)(S,11,[violent, storm])	--> {64=<S, S=<72}.
sayforce(X)(S,12,[hurricane])		--> {73=<S}.


saybearing(X)(D,1,northerly)		--> {338=<D}.
saybearing(X)(D,1,northerly)		--> {D=<22}.
saybearing(X)(D,2,north_easterly)	--> {23=<D, D=<67}.
saybearing(X)(D,3,easterly)		--> {68=<D, D=<112}.
saybearing(X)(D,4,south_easterly)	--> {113=<D, D=<157}.
saybearing(X)(D,5,southerly)		--> {158=<D, D=<202}.
saybearing(X)(D,6,south_westerly)	--> {203=<D, D=<247}.
saybearing(X)(D,7,westerly)		--> {248=<D, D=<292}.
saybearing(X)(D,8,north_westerly)	--> {293=<D, D=<337}.


saytime(X)(Dayname,[OutDay])		--> single_day(X)(Dayname,OutDay).
saytime(X)(tom,[tomorrow])		--> .
saytime(X)(ltr,[later])			--> .
saytime(X)(ev,[in, the, evening])	--> .


changespeed(X)(S1,G1,S2,G1,[increasing, slightly])
				--> {S1<S2}.
changespeed(X)(S1,G1,S2,G1,[decreasing, slightly])
				--> {S1>S2}.
changespeed(X)(S1,G1,S2,G2,[strengthening, to])
				--> {S1<S2,G1<G2}.
changespeed(X)(S1,G1,S2,G2,[decreasing, to])
				--> {S1>S2,G1>G2}.


changedir(X)(D1,B1,D2,B1,[moving, slightly, NewBearing])
				--> %same compass_pt
		    		    clockwise(X)(D1,D2,CW),
				    saynewbearing(X)(CW,B1,NewBearing).
changedir(X)(D1,B1,D2,B2,[veering, to, NewBearing])
				--> notequal(X)(B1,B2),
				    clockwise(X)(D1,D2,cw),
		    		    saysamebearing(X)(B2,NewBearing).
changedir(X)(D1,B1,D2,B2,[backing, to, NewBearing])
				--> notequal(X)(B1,B2),
				    clockwise(X)(D1,D2,ccw),
				    saysamebearing(X)(B2,NewBearing).

notequal(X)(B1,B2)		--> {B1<B2}.
notequal(X)(B1,B2)		--> {B1>B2}.

saynewbearing(X)(cw,8,northward)	--> .
saynewbearing(X)(ccw,2,northward)	--> .
saynewbearing(X)(cw,1,north_eastward)	--> .
saynewbearing(X)(ccw,3,north_eastward)	--> .
saynewbearing(X)(cw,2,eastward)		--> .
saynewbearing(X)(ccw,4,eastward)	--> .
saynewbearing(X)(cw,3,south_eastward)	--> .
saynewbearing(X)(ccw,5,south_eastward)	--> .
saynewbearing(X)(cw,4,southward)	--> .
saynewbearing(X)(ccw,6,southward)	--> .
saynewbearing(X)(cw,5,south_westward)	--> .
saynewbearing(X)(ccw,7,south_westward)	--> .
saynewbearing(X)(cw,6,westward)		--> .
saynewbearing(X)(ccw,8,westward)	--> .
saynewbearing(X)(cw,7,north_westward)	--> .
saynewbearing(X)(ccw,1,north_westward)	--> .


clockwise(X)(D1,D2,cw)		--> {(D2+360-D1) mod 360 =< 180}. %clockwise
clockwise(X)(D1,D2,ccw)		--> {(D2+360-D1) mod 360 > 180}.  %counterclockwise

saysamebearing(X)(1,northerly)		--> .
saysamebearing(X)(2,north_easterly)	--> .
saysamebearing(X)(3,easterly)		--> .
saysamebearing(X)(4,south_easterly)	--> .
saysamebearing(X)(5,southerly)		--> .
saysamebearing(X)(6,south_westerly)	--> .
saysamebearing(X)(7,westerly)		--> .
saysamebearing(X)(8,north_westerly)	--> .




% weather is the word `wea' followed by a sequence of 1 or more
% conditions or pairs of conditions separated by `+' for AND or
% `-' for OR

weather(W)([W],OW)		--> wthr(W)(W,OW).
weather(W)([W],OW)		--> wthrlist(W)(W,OW).

wthrlist(Wh "," Wr)([W1,W2],OW3)		--> wthr(Wh)(W1,OW1),
				    	    	    pattern(Wr)(W2,OW2)
				    	    	    {concat(OW1,OW2,OW3)}.
wthrlist(Wh "," Wr)([W1,W2,W3|Wrest],OW3)	--> wthr(Wh)(W1,OW1),
				    		    wthrlist(Wr)([W2,W3|Wrest],OW2)
				    		    {concat(OW1,[then|OW2],OW3)}.

pattern(W)(W,[becoming|OW])	--> wthr(W)(W,OW), rand(W)(1).
pattern(W)(W,[turning, to|OW])	--> wthr(W)(W,OW), rand(W)(2).
pattern(W)(W,OW2)		--> wthr(W)(W,OW), rand(W)(3) {concat(OW,[later],OW2)}.

rand(W)(N)			--> {random(N,3)}.

wthr(W1 "-" W2)(or(W1,W2), [OW1,or,OW2])	--> &StrLen(1,W1) sw(W1)(W1,OW1), &StrLen(1,W2) sw(W2)(W2,OW2).
wthr(W1 "+" W2)(and(W1,W2), [OW1,and,OW2])	--> &StrLen(1,W1) sw(W1)(W1,OW1), &StrLen(1,W2) sw(W2)(W2,OW2).
wthr(W)(W,[OW])					--> &StrLen(1,W) sw(W)(W,OW).

sw(W)(W,O)			--> &StrEq("%atom",W) w(W)(W,O).

w(W)(r,rain)			--> .
w(W)(hvy,heavy)			--> .
w(W)(sl,sleet)			--> .
w(W)(s,snow)			--> .
w(W)(cl,cloudy)			--> .
w(W)(fg,foggy)			--> .
w(W)(clr,clear)			--> .


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% temperatures

temp(Lo Hi)([Lo,Hi],O)			--> &StrEq("%int",Lo) &StrEq("%int",Hi) saytemp(Lo Hi)(Lo, Hi, O).


saytemp(X)(T,T,[temperature, T, steady])		--> .
saytemp(X)(T1,T2,[temperatures, T1, to, T2])		--> {T1<T2}.
saytemp(X)(T1,T2,[temperatures, T1, falling, to, T2])	--> {T1>T2}.




