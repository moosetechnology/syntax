%
% L = {a_1^n ... a_k^n | n,k >= 0 et a_i \in T}
%
% Peut-on faire des couples (first, last) plutot que les dissocier ?
%
% Temps d'analyse quadratique (un for uniquement sur la 1ere clause)
%


% La chaine vide est un element de L
S()		--> .
% Clause qui sert uniquement a definir l'ensemble T des terminaux
S(X Y)		--> &StrLen (1, X) T(X) L (X Y) .

% la chaine source est decoupee en 2 parties
% X = a_1^n et Y = a_2^n ... a_k^n avec |X|>=1
% Le predicat A verifie que tous les terminaux de la chaine X sont identiques
% Le predicat B verifie que la taille de Y est un multiple de la taille de X
% Le predicat C verifie que chaque sous-chaine de Y de la taille de X est formee de terminaux identiques
L(X Y)		--> A(X) B(X, Y) C(X, Y) .

% la chaine Y ne contient-elle que des X ?
A(X Y)		--> &StrLen(1, X) A1(X, Y) .
% La chaine vide ne contient que des X
A1(X,)		--> .
% La chaine YZ ne contient que des X si X==Y et si Z ne contient que des X
A1(X, Y Z)	--> &StrEq(X, Y) A1(X, Z) .

% 0 est un multiple de |X|
B(X,)		--> .
% Si |X|==|Y| et si |Z| est un multiple de |X| alors |YZ| est un multiple de |X|
B(X, Y Z)	--> &StrEqLen(X, Y) B(X, Z) .


% La chaine vide est un suffixe correct
C(X, )		--> .
% Si Z est un suffixe correct et si |X|==|Y| et si Y est forme de terminaux identiques alors
% YZ est un suffixe correct.
C(X, Y Z)	--> &StrEqLen(X, Y) A(Y) C(X, Z) .

% Clauses qui servent a definir l'ensemble T des terminaux
T(\a)		--> .
T(\b)		--> .
T(\c)		--> .
T(\d)		--> .
T(\e)		--> .
T(\f)		--> .
