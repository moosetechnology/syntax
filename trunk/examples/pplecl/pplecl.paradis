<LECL_GRAMMAR>	= <CLASSES_LIST_OPTION>


                  <ABBREVIATIONS_LIST_OPTION>


                  <TOKENS_LIST_OPTION>


		  <SYNONYMS_LIST_OPTION>


		  <REPR_SPEC_LIST_OPTION>
		 						~ ~ ; "PROGRAM_ROOT_LECL"
*
*    C L A S S E S
*
<CLASSES_LIST_OPTION>
		= ~INH~						~ ~ ;
<CLASSES_LIST_OPTION>
		= CLASSES

		~TAB~	<CLASSES_LIST>  ";"			~ ~ ;

<CLASSES_LIST>	= <CLASSES_LIST>  ";"
		  <CLASS>					~ ~ ;
<CLASSES_LIST>	= <CLASS> 					~ ~ ; "CLASS_S"

<CLASS>		= <CLASS_NAME> ~
		  COL(24)~ ~SPACE~ "="  <CLASS_EXP>		~ ~ ; "CLASS"

<CLASS_NAME>	= %IDENTIFIER					~ ~ ; "CLASS_NAME"

<CLASS_EXP>	= <CLASS_EXP>  +  <CLASS_TERM>			~ ~ ; "PLUS"
<CLASS_EXP>	= <CLASS_EXP>  -  <CLASS_TERM>			~ ~ ; "MINUS"
<CLASS_EXP>	= <CLASS_TERM>					~ ~ ;

<CLASS_TERM>	= ( <CLASS_EXP> )				~ ~ ;
<CLASS_TERM>	= <CLASS_REF>					~ ~ ;

<CLASS_REF>	= <SIMPLE_REF>					~ ~ ;
<CLASS_REF>	= <SLICE>					~ ~ ;

<SLICE>		= <SIMPLE_REF> .. <SIMPLE_REF>			~ ~ ; "SLICE"

<SIMPLE_REF>	= %IDENTIFIER					~ ~ ; "ID"
<SIMPLE_REF>	= %STRING_LITERAL				~ ~ ; "STRING"
<SIMPLE_REF>	= %OCTAL_CODE					~ ~ ; "OCTAL_CODE"
*
*   A B B R E V I A T I O N S
*
<ABBREVIATIONS_LIST_OPTION>
		= ~INH~						~ ~ ;
<ABBREVIATIONS_LIST_OPTION>
		= ABBREVIATIONS

		~TAB~	<ABBREVIATIONS_LIST>  ";"		~ ~ ;

<ABBREVIATIONS_LIST>
		= <ABBREVIATIONS_LIST>  ";"
		  <ABBREVIATION>				~ ~ ;
<ABBREVIATIONS_LIST>
		= <ABBREVIATION>				~ ~ ; "ABBREVIATION_S"

<ABBREVIATION>	= <REGULAR_EXPRESSION_NAME> ~
		  COL(24)~ ~SPACE~ "="  <REGULAR_EXPRESSION>	~ ~ ; "ABBREVIATION"
<ABBREVIATION>	= <PREDICATE_NAME> ~
		  COL(24)~ ~SPACE~ "="  <&_EXPRESSION>		~ ~ ; "ABBREVIATION"

<REGULAR_EXPRESSION_NAME>
		= %IDENTIFIER					~ ~ ; "ABBREVIATION_RE_NAME"

<PREDICATE_NAME>= %PREDICATE_NAME				~ ~ ; "ABBREVIATION_PRDCT_NAME"

<&_EXPRESSION>	= <&_OR>					~ ~ ; "PRDCT_EXPRESSION"

<&_OR>		= <&_OR>  |  <&_ET>				~ ~ ; "PRDCT_OR"
<&_OR>		= <&_ET>					~ ~ ;

<&_ET>		= <&_ET>  <&_TERM>				~ ~ ; "PRDCT_ET"
<&_ET>		= <&_TERM>					~ ~ ;

<&_TERM>	= ( <&_OR> )					~ ~ ; "EXPRESSION"
<&_TERM>	= %PREDICATE_NAME				~ ~ ;
<&_TERM>	= <DYNAMIC_PREDICATE>				~ ~ ;
<&_TERM>	= ^ <DYNAMIC_PREDICATE>				~ ~ ; "PRDCT_NOT"
*
*   T O K E N S
*
<TOKENS_LIST_OPTION>
		= ~INH~					~ ~ ;
<TOKENS_LIST_OPTION>
		= TOKENS

		~TAB~	<TOKENS_LIST>				~ ~ ;

<TOKENS_LIST>	= <TOKENS_LIST>
		  <TOKEN>					~ ~ ;
<TOKENS_LIST>	= <TOKEN>					~ ~ ; "TOKEN_S"

<TOKEN>		= <TOKEN_DEF>  ";" <VOID>			~ ~ ; "TOKEN"
<TOKEN>		= <TOKEN_DEF>  ";"
		  ~COL(27)~ <ENVIRONMENT_LIST>			~ ~ ; "TOKEN"

<TOKEN_DEF>	= <LEXICAL_UNIT_NAME> ~
		  COL(24)~ ~SPACE~ "="  <TOKEN_BODY>		~ ~ ; "TOKEN_DEF"

<LEXICAL_UNIT_NAME>
		= %GENERIC_NAME					~ ~ ; "LEXICAL_UNIT_NAME"
<LEXICAL_UNIT_NAME>
		= %STRING_LITERAL				~ ~ ; "LEXICAL_UNIT_NAME"
<LEXICAL_UNIT_NAME>
		= %IDENTIFIER					~ ~ ; "LEXICAL_UNIT_NAME"
<LEXICAL_UNIT_NAME>
		= EOF						~ ~ ; "EOF"
<LEXICAL_UNIT_NAME>
		= COMMENTS					~ ~ ; "COMMENTS"
<LEXICAL_UNIT_NAME>
		= INCLUDE					~ ~ ; "INCLUDE"

<TOKEN_BODY>	= <REGULAR_EXPRESSION>				~ ~ ;
<TOKEN_BODY>	= 
            ~COL(14)~ <UNION>					~ ~ ;

<UNION>		= UNION
		     <COMPONENT_LIST>
		  END						~ ~ ;

<COMPONENT_LIST>= <COMPONENT_LIST>
		  <COMPONENT>					~ ~ ;
<COMPONENT_LIST>= <COMPONENT>					~ ~ ; "COMPONENTS_S"

<COMPONENT>	= <COMPONENT_DEF>  ";" <VOID>			~ ~ ; "COMPONENT"
<COMPONENT>	= <COMPONENT_DEF>  ";"
		  ~COL(27)~ <ENVIRONMENT_LIST>			~ ~ ; "COMPONENT"

<COMPONENT_DEF>	= <COMPONENT_NAME> ~
                      COL(24)~ ~SPACE~ :  <REGULAR_EXPRESSION>	~ ~ ; "COMPONENT_DEF"

<COMPONENT_NAME>= %IDENTIFIER					~ ~ ; "COMPONENT_NAME_DEF"

<ENVIRONMENT_LIST>
		= <ENVIRONMENT_LIST>
		  <ENVIRONMENT>  ";"				~ ~ ;
<ENVIRONMENT_LIST>
		= <ENVIRONMENT>  ";"				~ ~ ; "ENVIRONMENT_S"

<ENVIRONMENT>	=  <KEYWORDS_SPEC>				~ ~ ;
<ENVIRONMENT>	=  %ACTION_NO					~ ~ ; "POST_ACTION"
<ENVIRONMENT>	=  <PRIORITY>					~ ~ ;
<ENVIRONMENT>	=  <CONTEXT>					~ ~ ;

* NOT et KEYWORD ne sont pas des mot-cles de LECL pour des raisons de
* compatibilite ascendante.
<KEYWORDS_SPEC>	= %IDENTIFIER &1  %IDENTIFIER  <ALL>		~ ~ ; "KEYWORDS_SPEC"
* &1 retourne VRAI ssi l'identificateur est NOT et est suivi de KEYWORD
<KEYWORDS_SPEC>	= <VOID> %IDENTIFIER &2  <KEYWORDS>		~ ~ ; "KEYWORDS_SPEC"
* &2 retourne VRAI ssi l'identificateur est KEYWORD et n'est pas suivi de "="

<KEYWORDS>	= <ALL>						~ ~ ;
<KEYWORDS>	= <KEYWORDS_LIST>				~ ~ ;

<ALL>		= 						~ ~ ;
<ALL>		= ALL						~ ~ ;

<KEYWORDS_LIST>	= <KEYWORDS_LIST> ,  <KEYWORD>			~ ~ ;
<KEYWORDS_LIST>	= ALL  BUT  <KEYWORD>				~ ~ ; "NOT_KEYWORDS"
<KEYWORDS_LIST>	= <KEYWORD>					~ ~ ; "KEYWORDS"

<KEYWORD>	= %IDENTIFIER					~ ~ ; "KEYWORD_NAME"
<KEYWORD>	= %STRING_LITERAL				~ ~ ; "KEYWORD_NAME"

<PRIORITY>	= PRIORITY  <PRIORITY_KIND_LIST>		~ ~ ;

<PRIORITY_KIND_LIST>
		= <PRIORITY_KIND_LIST> ,  <PRIORITY_KIND>	~ ~ ;
<PRIORITY_KIND_LIST>
		= <PRIORITY_KIND>				~ ~ ; "PRIORITY_KIND_S"

<PRIORITY_KIND>	= REDUCE > REDUCE				~ ~ ; "REDUCE_REDUCE"
<PRIORITY_KIND>	= REDUCE > SHIFT				~ ~ ; "REDUCE_SHIFT"
<PRIORITY_KIND>	= SHIFT > REDUCE				~ ~ ; "SHIFT_REDUCE"

<VOID>		=						~ ~ ;

<CONTEXT>	= CONTEXT  <TOKEN_REF_LIST>			~ ~ ; "CONTEXT"
<CONTEXT>	= CONTEXT  ALL  BUT  <TOKEN_REF_LIST>		~ ~ ; "RESTRICTED_CONTEXT"
<CONTEXT>	= CONTEXT  ALL <VOID>	 			~ ~ ; "RESTRICTED_CONTEXT"
<CONTEXT>	= UNBOUNDED  CONTEXT  <TOKEN_REF_LIST>		~ ~ ; "UNBOUNDED_CONTEXT"
<CONTEXT>	= UNBOUNDED  CONTEXT  ALL  BUT  <TOKEN_REF_LIST>~ ~ ; "UNBOUNDED_RESTRICTED_CONTEXT"
<CONTEXT>	= UNBOUNDED  CONTEXT  ALL <VOID> 		~ ~ ; "UNBOUNDED_RESTRICTED_CONTEXT"

<TOKEN_REF_LIST>= <TOKEN_REF_LIST> ,  <TOKEN_REF>		~ ~ ;
<TOKEN_REF_LIST>= <TOKEN_REF>					~ ~ ; "TOKEN_REF_S"

<TOKEN_REF>	= <TOKEN_NAME> <VOID>				~ ~ ; "COMPONENT_REF"
<TOKEN_REF>	= <TOKEN_NAME> . <COMPONENT_NAME_REF>		~ ~ ; "COMPONENT_REF"

<TOKEN_NAME>	= COMMENTS					~ ~ ; "CONTEXT_COMMENTS"
<TOKEN_NAME>	= EOF						~ ~ ; "CONTEXT_EOF"
<TOKEN_NAME>	= INCLUDE					~ ~ ; "CONTEXT_INCLUDE"
<TOKEN_NAME>	= %IDENTIFIER					~ ~ ; "CONTEXT_NAME"
<TOKEN_NAME>	= %GENERIC_NAME					~ ~ ; "CONTEXT_NAME"
<TOKEN_NAME>	= %STRING_LITERAL				~ ~ ; "CONTEXT_NAME"

<COMPONENT_NAME_REF>= %IDENTIFIER				~ ~ ; "COMPONENT_NAME_REF"
*
*   R E G U L A R   E X P R E S S I O N S
*
<REGULAR_EXPRESSION>= <ALTERNATIVE>				~ ~ ; "REGULAR_EXPRESSION"

<ALTERNATIVE>	= <ALTERNATIVE>  |  <SEQUENCE>			~ ~ ; "ALTERNATIVE"
<ALTERNATIVE>	= <SEQUENCE>					~ ~ ;

<SEQUENCE>	= <SEQUENCE>  <TERM>				~ ~ ; "SEQUENCE"
<SEQUENCE>	= <TERM>					~ ~ ;

<TERM>		= - <ITEM>					~ ~ ; "ERASE"
<TERM>		= <ITEM>					~ ~ ;

<ITEM>		= ( <ALTERNATIVE> )				~ ~ ; "EXPRESSION"
<ITEM>		= [ <ALTERNATIVE> ]				~ ~ ; "OPTION"
<ITEM>		= { <ALTERNATIVE> }				~ ~ ; "REF_TRANS_CLOSURE"
<ITEM>		= { <ALTERNATIVE> } *				~ ~ ; "REF_TRANS_CLOSURE"
<ITEM>		= ( <ALTERNATIVE> ) *				~ ~ ; "REF_TRANS_CLOSURE"
<ITEM>		= { <ALTERNATIVE> } +				~ ~ ; "TRANS_CLOSURE"
<ITEM>		= ( <ALTERNATIVE> ) +				~ ~ ; "TRANS_CLOSURE"
<ITEM>		= <EXTENDED_CLASS_REF>				~ ~ ;
<ITEM>		= <ACTION>					~ ~ ;

<EXTENDED_CLASS_REF>
		= <NOT_CLASS_REF> <PREDICATE>			~ ~ ; "EXTENDED_CLASS_REF"
<EXTENDED_CLASS_REF>
		= <NOT_CLASS_REF>				~ ~ ;

<NOT_CLASS_REF>	= ^ <CLASS_REF>					~ ~ ; "NOT"
<NOT_CLASS_REF>	= <CLASS_REF>					~ ~ ;

<ACTION>	= %ACTION_NO					~ ~ ;
<ACTION>	= "@UPPER_CASE"					~ ~ ; "UPPER_CASE"
<ACTION>	= "@LOWER_CASE"					~ ~ ; "LOWER_CASE"
<ACTION>	= "@LOWER_TO_UPPER"				~ ~ ; "LOWER_TO_UPPER"
<ACTION>	= "@UPPER_TO_LOWER"				~ ~ ; "UPPER_TO_LOWER"
<ACTION>	= "@ERASE"					~ ~ ; "ACTION_ERASE"
<ACTION>	= "@SET"  ( %INTEGER_NUMBER )			~ ~ ; "SET"
<ACTION>	= "@RESET"  ( %INTEGER_NUMBER )			~ ~ ; "RESET"
<ACTION>	= "@INCR"  ( %INTEGER_NUMBER )			~ ~ ; "INCR"
<ACTION>	= "@DECR"  ( %INTEGER_NUMBER )			~ ~ ; "DECR"
<ACTION>	= "@PUT"  ( <SIMPLE_REF> )			~ ~ ; "PUT"
<ACTION>	= "@MARK"					~ ~ ; "MARK"
<ACTION>	= "@RELEASE"					~ ~ ; "RELEASE"

<PREDICATE>	= %PREDICATE_NAME				~ ~ ;
<PREDICATE>	= <STATIC_PREDICATE>				~ ~ ;
<PREDICATE>	= <DYNAMIC_PREDICATE>				~ ~ ;

<STATIC_PREDICATE>
		= "&TRUE"					~ ~ ; "IS_TRUE"
<STATIC_PREDICATE>
		= "&FALSE"					~ ~ ; "IS_FALSE"

<DYNAMIC_PREDICATE>
		= %PREDICATE_NO					~ ~ ;
<DYNAMIC_PREDICATE>
		= "&IS_FIRST_COL"				~ ~ ; "IS_FIRST_COL"
<DYNAMIC_PREDICATE>
		= "&IS_LAST_COL"				~ ~ ; "IS_LAST_COL"
<DYNAMIC_PREDICATE>
		= "&IS_SET"  ( %INTEGER_NUMBER )		~ ~ ; "IS_SET"
<DYNAMIC_PREDICATE>
		= "&IS_RESET"  ( %INTEGER_NUMBER )		~ ~ ; "IS_RESET"
*
*  S Y N O N Y M S
*
<SYNONYMS_LIST_OPTION>
		= ~INH~						~ ~ ;
<SYNONYMS_LIST_OPTION>
		= SYNONYMS

		  ~TAB~	<SYNONYMS_LIST>  ";"			~ ~ ;

<SYNONYMS_LIST>	= <SYNONYMS_LIST>  ";"
		  <DENOTATION_LIST>				~ ~ ;
<SYNONYMS_LIST>	= <DENOTATION_LIST>				~ ~ ; "SYNONYM_S"

<DENOTATION_LIST>
		= <DENOTATION_LIST> ,  <DENOTATION>		~ ~ ;
<DENOTATION_LIST>
		= <DENOTATION> ~
		  COL(24)~ ~SPACE~ "="  <DENOTATION>		~ ~ ; "DENOTATION_S"

<DENOTATION>	= %IDENTIFIER					~ ~ ; "ID_DENOTATION"
<DENOTATION>	= %STRING_LITERAL				~ ~ ; "STRING_DENOTATION"
*
*  R E P R E S E N T A T I O N   S P E C I F I C A T I O N
*
<REPR_SPEC_LIST_OPTION>
		= ~INH~						~ ~ ;
<REPR_SPEC_LIST_OPTION>
		= ~TAB~	<REPR_SPEC_LIST>  ";"			~ ~ ;

<REPR_SPEC_LIST>= <REPR_SPEC_LIST>  ";"
                  <REPR_SPEC>					~ ~ ;
<REPR_SPEC_LIST>= <REPR_SPEC>					~ ~ ; "REPR_SPEC_S"

<REPR_SPEC>	= <COLLATING_LIST_REPR>				~ ~ ;
<REPR_SPEC>	= <BYTE_LENGTH_REPR>				~ ~ ;
<REPR_SPEC>	= <WORD_LENGTH_REPR>				~ ~ ;

<COLLATING_LIST_REPR>
		= FOR  INTERNAL  CODE  USE
			<COLLATING_LIST>			~ ~ ;

<BYTE_LENGTH_REPR>
		= FOR  BYTE  USE  %INTEGER_NUMBER  BITS		~ ~ ; "BYTE_LENGTH"

<WORD_LENGTH_REPR>
		= FOR  WORD  USE  %INTEGER_NUMBER  BITS		~ ~ ; "WORD_LENGTH"

<COLLATING_LIST>= <COLLATING_LIST>
		,  <COMPOSANT>					~ ~ ;
<COLLATING_LIST>= <COMPOSANT>					~ ~ ; "COLLATING_S"

<COMPOSANT>	= <CLASS_REF>					~ ~ ;
<COMPOSANT>	= UNUSED					~ ~ ; "NO_SPECIFIED"
<COMPOSANT>	= %INTEGER_NUMBER  UNUSED			~ ~ ;
