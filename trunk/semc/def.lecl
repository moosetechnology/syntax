--*****************************************************************************
--*                                S Y N T A X
--*----------------------------------------------------------------------------
--*   Copyright (C) 1972-2023 INRIA (Institut National de Recherche en
--*   Informatique et Automatique)
--*----------------------------------------------------------------------------
--*   URL: http://sourcesup.renater.fr/projects/syntax
--*----------------------------------------------------------------------------
--*   The source code of SYNTAX is distributed with two different licenses,
--*   depending on the files:
--*   - The recursive content of src/ and incl/ and the non-recursive content
--*     of SYNTAX's root directory are distributed under the CeCILL-C license
--*   - The recursive content of all other repertories is distributed under
--*     the CeCILL license
--*   All code produced by SYNTAX must be considered as being under the
--*   CeCILL-C license. Information about the CeCILL and CeCILL-C licenses
--*   can be found at, e.g., http://www.cecill.info
--*****************************************************************************

-- Syntaxe d'entree pour les definitions de SEMC

Classes

	ANY		= #000..#377 ;
	PRINT		= ANY - #000..#040 - #177..#241 ;
	BLANC		= SP + HT ;
	T_HEADER	= PRINT - "<#;\"~&@" ;
	NT_BODY		= PRINT + SP - ">" ;
	OCTAL		= "0".."7" ;


Abbreviations

	BNF_COMMENT	= "*"&Is_First_Col {^EOL} EOL ;
	NTERM		= "<" {NT_BODY | @Mark @Put (">") @2 @Put (")") EOL @Release} ">" ;
	TERM1		= "%" LETTER {["_"] (LETTER | DIGIT)} ;
	TERM2		= {^"\"\n\\" |
			   -"\\" (-EOL |
				  -"b" @Put (BS) |
				  -"n" @Put (EOL) |
				  -"f" @Put (FF) |
				  -"r" @Put (CR) |
				  -"t" @Put (HT) |
				  -"v" @Put (VT) |
				  @Mark OCTAL&True [OCTAL&True [OCTAL&True]] @1 |
				  ^"bnfrtv\n"
				 ) |
			    @Mark @Put (QUOTE) @2 @Put (")") EOL @Release
			  }+ ;
	ATTR_END	= @Put ("?") -{BLANC} {"'"} -{BLANC} -")" ;
	STOP		= -"<"&Is_First_Col @0 ;
	ATTR		= LETTER
			  {["_"&True] (LETTER&True | DIGIT&True)}
			  @Put ("?")
			  -{BLANC&True}
			  [-"("&True -{BLANC}
				((NTERM | TERM1) ATTR_END |
				 -QUOTE TERM2 (-QUOTE ATTR_END | STOP)
				)
			  ] ;
	&NIFCIR0	= (^&Is_First_Col) &Is_Reset (0)  ;

Tokens

	Comments	= -(BLANC&Is_Set (0) {BLANC}) |
			  {-BNF_COMMENT |
			   QUOTE&Is_Reset (0) {^"\"\n\\" | "\\" ANY} (QUOTE | STOP) |
			   "'"&Is_Reset (0) {^"\'\n\\" | "\\" ANY} ("'" | STOP) |
			   "/"&Is_Reset (0) "*"&True {ANY} ("*" "/"&True | STOP) |
			   "/"&Is_Reset (0) |
			   ^"$<*\"\'/"&Is_Reset (0) {^"$<*\"\'/"&True} |
			   "*<"&NIFCIR0
			  }+ ;
			Priority Shift>Reduce;
		       	Context All But Comments ;

	"="		= -"="&Is_Set (0) ;
	","		= -","&Is_Set (0) ;

	%ATTR_DEF	= "$"&Is_First_Col ATTR @Set (0) ;
			   Priority Shift>Reduce ;
	%ATTR		= "$" ATTR ;
			   Priority Shift>Reduce ;
	%FIN		= -EOL&Is_Set (0) @Reset (0) ;
	%RULE		= -"<"&Is_First_Col @3 ;



--  @0  : Protest on "<"&Is_First_Col and Push It
--  @1  : Convert octal code \nnn to character
--  @2  : Error message : "\"%c\)" is forced before End Of Line.",token_string [top];
--  @3  : Skip Rule
