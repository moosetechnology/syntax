#! /bin/sh

ME=`realpath -s "$0" 2> /dev/null`
if [ $? != 0 ]
then
	# here, we are likely on macOS
	# the "realpath" command does not exist (macOS version < 13)
	# or, when it exists, does not support the "-s" option
	DIR=`dirname "$0"`
	BASE=`basename "$0"`
	ME=`( cd "$DIR" ; pwd -L )`/"$BASE"
fi

case "$ME" in
	*/examples/* )
		SX=`echo "$ME" | sed -e 's+/examples/.*++'`
		EXAMPLE=1
		;;
	*/extensions/bin/* )
		SX=`echo "$ME" | sed -e 's+/extensions/bin/.*+/trunk+'`
		EXAMPLE=0
		;;
	*/bin/* )
		SX=`echo "$ME" | sed -e 's+/bin/.*++'`
		EXAMPLE=0
		;;
	*/bin.*/* )
		SX=`echo "$ME" | sed -e 's+/bin[.].*/.*++'`
		EXAMPLE=0
		;;
	* )
		echo "$0: unexpected wrapper location"
		exit 1
esac
	
ARCH=`$SX/etc/bin/arch`

if [ "$MALLOC_DEBUG" = "1" -a "$ARCH" = "mac64" ]
then
	. $SX/etc/scribble/malloc_options
fi

# target architecture in case of cross compilation
TARGET_ARCH=`dirname "$ME" | sed -e 's+.*/bin++' | sed -e 's+^[.]++'`

if [ $EXAMPLE = 1 ]
then
	# ME is located in "*/examples/*/bin"
	ME=`echo "$ME.out" | sed -e "s+/bin/+/bin.$ARCH/+"`
elif [ "$TARGET_ARCH" = "$ARCH" ]
then
	# $ME is located in "*/bin.$ARCH": native compilation
	ME="$ME.out"
elif [ "$TARGET_ARCH" = "" ]
then
	# $ME is located in "*/bin": native compilation
	ME=`echo "$ME.out" | sed -e "s+/bin/+/bin.$ARCH/+"`
else
	# $ME is located in "*/bin.$TARGET_ARCH": cross compilation
	ME=`echo "$ME.out" | sed -e "s+/bin.$TARGET_ARCH/+/bin.$ARCH/+"`
fi 

exec ${VALGRIND:-} "$ME" "$@"

