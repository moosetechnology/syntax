
$A(<EcFile>) : int ;

decl =
$
open =
$
close =
$

<start>	= <EcFile>	;


<EcFile>	= 	; "EMPTY_ECFILE"
<EcFile>	= <Decl_LIST> <NodeDecl> 	; "ECFILE"

<Decl_LIST>	= 	; "DECL_LIST"
<Decl_LIST>	= <Decl_LIST> <OneDecl> 	;

<OneDecl>	= "type" <TypeId_LIST> "."	; "TYPE_DECL"
<OneDecl>	= "const" <VarDecl_LIST> "." 	; "CONST_DECL"
<OneDecl>	= "function" <FuncHeader> "." 	; 

<TypeId_LIST>	= %Ident 	;
<TypeId_LIST>	= <TypeId_LIST> "," %Ident 	;

<NodeDecl>	=
	 "node" <NodeHeader> <LocalDecls> <Equations> "." 	; "NODE_DECL"

<FuncHeader>	= %Ident "(" <Param_LIST> ")" "returns" "(" <Param_LIST> ")" 	;
	"FUNCDECL"

<Param_LIST>	= <Parameter> 	; "PARAMS"
<Param_LIST>	= <Param_LIST> ";" <Parameter> 	;

<Parameter>	= %Ident ":" <Type> 	; "PARAMETER"

<NodeHeader>	= 
	%Ident "(" <VarDecl_LIST> ")" "returns" "(" <VarDecl_LIST> ")" ";" 	;
	"HEADER"

<LocalDecls>	= 	; "EMPTY_LOCAL_DECLS"
<LocalDecls>	= "var" <VarDecl_LIST> ";" 	; "LOCAL_DECLS"

<VarDecl_LIST>	= <OneVarDecl> 	;
<VarDecl_LIST>	= <VarDecl_LIST> ";" <OneVarDecl> 	;

<OneVarDecl>	= "(" %Ident ":" <Type> ")" "when" <Clock> 	; "VAR_DECL"

<Clock>	= %Ident 	; "CLOCK"
<Clock>	= "true" 	; "BASIC_CLOCK"

<Type>	= "int" 	; "TYPE"
<Type>	= "real" 	; "TYPE"
<Type>	= "bool" 	; "TYPE"
<Type>	= %Ident 	; "TYPE"

<Constant>	= %Integer 	; "INT_CONST"
<Constant>	= %Real 	; "REAL_CONST"
<Constant>	= "true" 	; "TRUE_CONST"
<Constant>	= "false" 	; "FALSE_CONST"

<Equations>	= "let" <Equation_LIST> "tel" 	; "EQUATIONS"

<Equation_LIST>	= <Equation> 	;
<Equation_LIST>	= <Equation_LIST> <Equation> 	;

<Equation>	= <LeftPart> "=" <Expression> ";" 	; "EQUATION"
<Equation>	= "assert" <AssertExpression> ";" 	; "ASSERTION"

<LeftPart> = <LeftIdentifier> ; "LEFTPART"
<LeftPart> = "(" <LeftIdentifier_LIST> ")" ; "LEFTPART"

<LeftIdentifier_LIST>	= <LeftIdentifier> 	; "TUPLE_LEFT_PART"
<LeftIdentifier_LIST>	= <LeftIdentifier_LIST> "," <LeftIdentifier> 	;

<LeftIdentifier>	= %Ident 	;

<AssertExpression>	= <Expression> 	; "BOOL_ASSERTION"
<AssertExpression>	= "#" "(" <Expression_LIST> ")" 	; "EXCLUSION"

<Expression>	= "(" <Expression_LIST> ")"	;
<Expression>	= <RightIdentifier>	;
<Expression>	= <Constant> 	;
<Expression>	= <Expression> "->" <Expression> 	; "ARROW"
<Expression>	= "pre" <Expression> 	; "PRE"
<Expression>	= <Expression> "when" <Expression> 	; "WHEN"
<Expression>	= "current" <Expression> 	; "CURRENT"
<Expression>	= "if" <Expression> "then" <Expression> "else" <Expression> 	; "IF"
<Expression>	= %Ident "(" <Expression_LIST> ")" 	; "CALL"
<Expression>	= <Expression> "or" <Expression> 	; "OR"
<Expression>	= <Expression> "and" <Expression> 	;"AND"
<Expression>	= <Expression> "+" <Expression> 	; "PLUS"
<Expression>	= <Expression> "-" <Expression> 	; "MINUS"
<Expression>	= <Expression> "*" <Expression> 	; "TIMES"
<Expression>	= <Expression> "/" <Expression> 	; "SLASH"
<Expression>	= <Expression> "div" <Expression> 	; "DIV"
<Expression>	= <Expression> "mod" <Expression> 	; "MOD"
<Expression>	= <Expression> "=" <Expression> 	; "EQUAL"
<Expression>	= <Expression> "<>" <Expression> 	; "DIFF"
<Expression>	= <Expression> "<" <Expression> 	; "LT"
<Expression>	= <Expression> "<=" <Expression> 	; "LTE"
<Expression>	= <Expression> ">=" <Expression> 	; "GTE"
<Expression>	= <Expression> ">" <Expression> 	; "GT"
<Expression>	= "not" <Expression> 	; "NOT"
<Expression>	= "-" <Expression>	; "UMINUS"

<Expression_LIST>	= <Expression> 	; "TUPLE"
<Expression_LIST>	= <Expression_LIST> "," <Expression> 	;

<RightIdentifier>	= %Ident 	;
