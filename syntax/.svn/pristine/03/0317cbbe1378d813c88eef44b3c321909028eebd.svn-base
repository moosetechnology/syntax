---------------------------------------------------------------------------
-- radar_specification (derived from the works of Lina Marsso)
---------------------------------------------------------------------------

const not_visible = 2000;
const already_sent = 3000;

---------------------------------------------------------------------------

-- geographical map
-- ----------------
--
-- each line indicates: street index, street name, successor street indexes
--       1, Coronation_Street             ( 3,  4,  5)
--       2, Corporation_Street            ( 8,  9, 10)
--       3, Coronation_Street_bis,        ( 1,  2)
--       4, two_Coronation_Street,        ( 6,  7)
--       5, Sackville,                    (11, 12)
--       6, two_Coronation_Street_bis,    ( 3,  4,  5)
--       7, Spring_Gardens,               (13, 14, 15)
--       8, Corporation_Street_bis,       ( 1,  2)
--       9, Princess_Street,              (11, 12)
--      10, two_Corporation_Street,       (16, 17)
--      11, two_Princess_Street,          (13, 14, 15)
--      12, two_Sackville,                (18, 19, 20)
--      13, Spring_Gardens_bis,           ( 6,  7)
--      14, two_Princess_Street_bis,      (11, 12)
--      15, two_Spring_Gardens,           (21, 22)
--      16, two_Corporation_Street_bis,   ( 8,  9, 10)
--      17, New_Cathedral_Street,         (18, 19, 20)
--      18, two_Sackville_bis,            (11, 12)
--      19, New_Cathedral_Street_bis,     (16, 17)
--      20, two_New_Cathedral_Street,     (21, 22)
--      21, two_Spring_Gardens_bis,       (13, 14, 15)
--      22, two_New_Cathedral_Street_bis, (18, 19, 20)

-- returns true if the obstacle obst is perceivable by the CAR in the map
-- defined above ; the radar can perceive an obstacle only in a directly
-- succeeding street
function is_perceivable (CAR, obst: int) returns (x: bool);
let
  x = ((CAR = 1 or CAR = 6) and (obst = 3 or obst = 4 or obst = 5))
      or
      ((CAR = 2 or CAR = 16) and (obst = 8 or obst = 9 or obst = 10))
      or
      ((CAR = 3 or CAR = 8) and (obst = 1 or obst = 2))
      or
      ((CAR = 4 or CAR = 13) and (obst = 6 or obst = 7))
      or
      ((CAR = 5 or CAR = 9 or CAR = 14 or CAR = 18) and
       (obst = 11 or obst = 12))
      or
      ((CAR = 7 or CAR = 11 or CAR = 21) and
       (obst = 13 or obst = 14 or obst = 15))
      or
      ((CAR = 10 or CAR = 19) and (obst = 16 or obst = 17))
      or
      ((CAR = 12 or CAR = 17 or CAR = 22) and
       (obst = 18 or obst = 19 or obst = 20))
      or
      ((CAR = 15 or CAR = 20) and (obst = 21 or obst = 22));
tel;

---------------------------------------------------------------------------

-- updates the perception of LEO and/or LILLY by the CAR
function perceive (CAR, obstacle: int) returns (perception: int);
let perception = 
  if is_perceivable (CAR, obstacle) then 
    obstacle
  else
    not_visible;
tel;

---------------------------------------------------------------------------

-- updates the perception of LEO and/or LILLY by the CAR
node radar (CAR, LEO, LILLY: int)
returns (perception_leo, perception_lilly: int);
var no_change: bool;
let
  no_change = -- CAR perceives LEO and LILLY as before
    (perceive (CAR, LEO) = perceive (pre CAR, pre LEO)) and
    (perceive (CAR, LILLY) = perceive (pre CAR, pre LILLY));
  perception_leo = not_visible ->
    if no_change then
      already_sent
    else
      perceive (CAR, LEO);
  perception_lilly = not_visible ->
    if no_change then
      already_sent
    else
      perceive (CAR, LILLY);
tel;

---------------------------------------------------------------------------
-- alternative encoding of the map and is_perceivable() using constants
-- to name streets (rather than just indices as above)

-- (succeeding streets are indicating in a comment)

const Coronation_Street = 1;             --  3,  4,  5 
const Corporation_Street = 2;            --  8,  9, 10  
const Coronation_Street_bis = 3;         --  1,  2 
const Two_Coronation_Street = 4;         --  6,  7 
const Sackville = 5;                     -- 11, 12 
const two_Coronation_Street_bis = 6;     --  3,  4,  5 
const Spring_Gardens = 7;                -- 13, 14, 15 
const Corporation_Street_bis = 8;        --  1,  2 
const Princess_Street = 9;               -- 11, 12 
const two_Corporation_Street = 10;       -- 16, 17 
const two_Princess_Street = 11;          -- 13, 14, 15 
const two_Sackville = 12;                -- 18, 19, 20 
const Spring_Gardens_bis = 13;           --  6,  7 
const two_Princess_Street_bis = 14;      -- 11, 12  
const two_Spring_Gardens = 15;           -- 21, 22 
const two_Corporation_Street_bis = 16;   --  8,  9, 10
const New_Cathedral_Street = 17;         -- 18, 19, 20
const two_Sackville_bis = 18;            -- 11, 12
const New_Cathedral_Street_bis = 19;     -- 16, 17
const two_New_Cathedral_Street = 20;     -- 21, 22
const two_Spring_Gardens_bis = 21;       -- 13, 14, 15
const two_New_Cathedral_Street_bis = 22; -- 18, 19, 20

-- returns true if the obstacle obst is perceivable by the CAR in the map
-- defined above ; the radar can perceive an obstacle only in a directly
-- succeeding street
function is_perceivable_alt (CAR, obst: int) returns (x: bool);
let
  x = ((CAR = Coronation_Street or CAR = two_Coronation_Street_bis) and
       (obst = Coronation_Street_bis or obst = Two_Coronation_Street or
        obst = Sackville))
      or
      ((CAR = Corporation_Street or CAR = two_Corporation_Street_bis) and
       (obst = Corporation_Street_bis or obst = Princess_Street or
        obst = two_Corporation_Street))
      or
      ((CAR = Coronation_Street_bis or CAR = Corporation_Street_bis) and
       (obst = Coronation_Street or obst = Corporation_Street))
      or
      ((CAR = Two_Coronation_Street or CAR = Spring_Gardens_bis) and
       (obst = two_Coronation_Street_bis or obst = Spring_Gardens))
      or
      ((CAR = Sackville or CAR = Princess_Street or
        CAR = two_Princess_Street_bis or CAR = two_Sackville_bis) and
       (obst = two_Princess_Street or obst = two_Sackville))
      or
      ((CAR = Spring_Gardens or CAR = two_Princess_Street or
        CAR = two_Spring_Gardens_bis) and
       (obst = Spring_Gardens_bis or obst = two_Princess_Street_bis or
        obst = two_Spring_Gardens))
      or
      ((CAR = two_Corporation_Street or CAR = New_Cathedral_Street_bis) and
       (obst = two_Corporation_Street_bis or obst = New_Cathedral_Street))
      or
      ((CAR = two_Sackville or CAR = New_Cathedral_Street or
        CAR = two_New_Cathedral_Street_bis) and
       (obst = two_Sackville_bis or obst = New_Cathedral_Street_bis or
        obst = two_New_Cathedral_Street))
      or
      ((CAR = two_Spring_Gardens or CAR = two_New_Cathedral_Street) and
       (obst = two_Spring_Gardens_bis or obst = two_New_Cathedral_Street_bis));
tel;
