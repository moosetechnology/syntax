/* Beginning of sxtables for xbnf [Thu Mar  6 12:56:26 2008] */
#define SXP_MAX 32
#include "sxunix.h"
#include "sxba.h"
static struct SXP_reductions reductions[]={{0,0,0,0},
{6, 3, 0, -17},
{2, 2, 1, -17},
{2, 5, 1, -18},
{6, 6, 1, -18},
{1, 8, 1, -21},
{0, 0, 2, -20},
{1, 1, 1, -20},
{0, 4, 1, 28},
{5, 11, 0, -3},
{5, 14, 0, -22},
{5, 15, 0, -22},
{6, 7, 1, -18},
{1, 10, 1, -3},
{5, 9, 1, -3},
{1, 13, 1, -3},
{0, 12, 1, -3},
};
static struct SXP_bases t_bases[]={{0,0,0},
{-7, 23, 2},
{0, 29, 0},
{0, 23, 2},
{0, -6, 9},
{0, 12, 3},
{-16, 15, 6},
{0, 28, 0},
{-14, 13, 6},
{0, 19, 9},
};
static struct SXP_bases nt_bases[]={{0,0,0},
{-2, 31, 32},
{-22, -3, 5},
{-21, 31, 26},
};
static struct SXP_item vector[]={
{1, -20},
{2, -17},
{3, -1},
{1, 8},
{3, 4},
{4, 5},
{4, 9},
{5, 24},
{4, -18},
{7, 10},
{8, 11},
{6, -21},
};

static  SXBA_ELT SXPBA_kt1
#if SXBITS_PER_LONG==32
 [2] = {10, 0X0000020E, }
#else
 [2] = {10, 0X000000000000020E, }
#endif
/* End SXPBA_kt1 */;
static SXBA SXPBM_trans[]={NULL,
&SXPBA_kt1[0],
};
static SXINT P_lrgl[]={
5,0,-1,1,2,3,0,0,
5,0,-1,2,3,4,0,0,
4,0,2,3,4,0,0,0,
7,0,-1,-1,1,2,3,4,
5,-1,0,1,2,3,0,0,
5,-1,1,2,3,4,0,0,
4,1,2,3,4,0,0,0,
4,-1,2,3,4,0,0,0,
5,-1,-1,1,2,3,0,0,
};
static SXINT *P_lregle[]={NULL,
&P_lrgl[0],
&P_lrgl[8],
&P_lrgl[16],
&P_lrgl[24],
&P_lrgl[32],
&P_lrgl[40],
&P_lrgl[48],
&P_lrgl[56],
&P_lrgl[64],
};
static SXINT P_right_ctxt_head[]={0,
1,2,2,1,1,1,1,2,1,};
static SXINT P_param_ref[]={
-2,1,
1,-2,
1,
-2,-3,1,
-1,0,1,
0,1,-1,
0,1,
0,1,-1,
0,1,-1,-2,
-1,1,
};
static struct SXP_local_mess SXP_local_mess[]={{0,NULL,NULL},
{2,"%s\"%s\" is inserted before \"%s\".",&P_param_ref[0]},
{2,"%s\"%s\" is replaced by \"%s\".",&P_param_ref[2]},
{1,"%s\"%s\" is deleted.",&P_param_ref[4]},
{3,"%s\"%s %s\" is inserted before \"%s\".",&P_param_ref[5]},
{3,"%s\"%s\" is inserted before \"%s %s\".",&P_param_ref[8]},
{3,"%s\"%s\" before \"%s\" is replaced by \"%s\".",&P_param_ref[11]},
{2,"%s\"%s\" before \"%s\" is deleted.",&P_param_ref[14]},
{3,"%s\"%s %s\" is replaced by \"%s\".",&P_param_ref[16]},
{4,"%s\"%s\" before \"%s\" is replaced by \"%s %s\".",&P_param_ref[19]},
{2,"%s\"%s\" is forced before \"%s\".",&P_param_ref[23]},
};
static SXINT P_no_delete[]={
0};
static SXINT P_no_insert[]={
0};
static char *P_global_mess[]={
"%s\"%s\" is expected",
"%s\"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\", \"%s\", \"%s\" is expected",
"%sGlobal recovery.",
"%sParsing resumes on \"%s\"",
"End Of File",
"%sParsing stops on End Of File.",
};
static SXINT PER_tset[]={
1,1};

static char *err_titles[SXSEVERITIES]={
"\000",
"\001Warning:\t",
"\002Error:\t",
};
static char abstract []= "%d warnings and %d errors are reported.";
extern SXBOOLEAN sxprecovery (SXINT what_to_do, SXINT *at_state, SXINT latok_no);

static unsigned char S_char_to_simple_class[]={
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,3,3,3,3,3,3,3,3,3,4,5,4,4,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,6,7,8,9,7,10,11,7,7,7,12,7,7,7,7,
7,13,14,14,14,14,14,14,14,15,15,7,16,17,18,19,7,20,21,21,21,21,21,21,21,
21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,7,22,7,7,23,7,
21,24,21,21,21,25,21,21,21,21,21,21,21,26,21,21,21,27,21,28,21,29,21,21,21,
21,7,7,7,30,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,
7,7,7,7,7,7,7,7,7,};
static SXSTMI SXS_transition[]={0,
0x0,0x4009,0x0,0x2402,0x2403,0x2402,0x2c04,0x2405,0x2406,0x2c07,0x2c08,0x2c04,
0x2c04,0x2c04,0x2c04,0x9402,0x9005,0x9007,0x2c04,0x2c0a,0x2c04,0x2c04,0x2c04,0x2c04,
0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x240b,
0x0,0x4000,0x0,0x1402,0x2403,0x1402,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,
0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,
0x4000,0x4000,0x4000,0x4000,0x4000,0x240b,
0x0,0x4000,0x0,0x2402,0x1403,0x2402,0x4000,0x4000,0x4000,0x4000,0x4000,0x240c,
0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,
0x4000,0x4000,0x4000,0x4000,0x4000,0x240b,
0x0,0x0,0x0,0x4007,0x4007,0x4007,0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,
0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,
0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,0x1c04,
0x0,0x0,0x2c0d,0x2c0d,0x0,0x2c0d,0x2c0d,0x0,0x2c0d,0x2c0d,0x2c0d,0x2c0d,
0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x240e,0x2c0d,0x2c0d,
0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,
0x0,0x0,0x0,0x0,0x0,0x0,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,
0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,
0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,
0x0,0x0,0x0,0x4007,0x4007,0x4007,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,
0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c0f,0x2c04,0x2c04,0x2c0f,
0x2c0f,0x2c0f,0x2c0f,0x2c0f,0x2c0f,0x2c04,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x7010,0x2c11,0x2c11,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x1c09,0x1c09,0x1c09,0x1c09,0x1c09,0x1c09,0x1c09,
0x1c09,0x1c09,0x1c09,0x1c09,0x1c09,0x1c09,0x4c05,0x1c09,0x1c09,0x1c09,0x1c09,0x1c09,
0x1c09,0x1c09,0x1c09,0x1c09,0x1c09,0x1c09,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x7012,0x2c13,0x2c13,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x140b,0x140b,0x2414,0x140b,0x140b,0x140b,0x140b,0x140b,0x140b,0x140b,
0x140b,0x140b,0x140b,0x140b,0x140b,0x140b,0x140b,0x140b,0x140b,0x140b,0x140b,0x140b,
0x140b,0x140b,0x140b,0x140b,0x140b,0x2402,
0x0,0x0,0x140c,0x140c,0x2403,0x140c,0x140c,0x140c,0x140c,0x140c,0x140c,0x140c,
0x140c,0x140c,0x140c,0x140c,0x140c,0x140c,0x140c,0x140c,0x140c,0x140c,0x140c,0x140c,
0x140c,0x140c,0x140c,0x140c,0x140c,0x140c,
0x0,0x0,0x1c0d,0x1c0d,0x0,0x1c0d,0x1c0d,0x4407,0x1c0d,0x1c0d,0x1c0d,0x1c0d,
0x1c0d,0x1c0d,0x1c0d,0x1c0d,0x1c0d,0x1c0d,0x1c0d,0x1c0d,0x1c0d,0x2416,0x1c0d,0x1c0d,
0x1c0d,0x1c0d,0x1c0d,0x1c0d,0x1c0d,0x1c0d,
0x0,0x0,0x2c0d,0x2c0d,0x2417,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,
0x900b,0x900b,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x940c,
0x940d,0x940e,0x940f,0x9410,0x9411,0x2c0d,
0x0,0x0,0x0,0x4008,0x4008,0x4008,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,
0x1c0f,0x1c0f,0x1c0f,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x1c0f,0x2c04,0x2c18,0x1c0f,
0x1c0f,0x1c0f,0x1c0f,0x1c0f,0x1c0f,0x2c04,
0x1,0x0,0x0,0x9c01,0x9c01,0x9c01,0x0,0x0,0x0,0x0,0x0,0x0,
0x9009,0x9009,0x9009,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x9c01,
0x0,0x0,0x0,0x9001,0x9001,0x9001,0x0,0x0,0x0,0x0,0x0,0x0,
0x1c11,0x1c11,0x1c11,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x9001,
0x1,0x0,0x0,0x4c04,0x4c04,0x4c04,0x0,0x0,0x0,0x0,0x0,0x0,
0x900a,0x900a,0x900a,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x4c04,
0x0,0x0,0x0,0x4004,0x4004,0x4004,0x0,0x0,0x0,0x0,0x0,0x0,
0x1c13,0x1c13,0x1c13,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x4004,
0x0,0x0,0x240b,0x240b,0x1414,0x240b,0x240b,0x240b,0x240b,0x240b,0x240b,0x240b,
0x240b,0x240b,0x240b,0x240b,0x0,0x240b,0x240b,0x240b,0x240b,0x240b,0x240b,0x240b,
0x240b,0x240b,0x240b,0x240b,0x240b,0x2402,
0x0,0x0,0x0,0x0,0x0,0x1c15,0x1c15,0x1c15,0x1c15,0x1c15,0x1c15,0x1c15,
0x1c15,0x1c15,0x1c15,0x1c15,0x1c15,0x1c15,0x4c02,0x1c15,0x1c15,0x1c15,0x1c15,0x1c15,
0x1c15,0x1c15,0x1c15,0x1c15,0x1c15,0x1c15,
0x0,0x0,0x2c0d,0x2c0d,0x2419,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,
0x900b,0x900b,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x940c,
0x940d,0x940e,0x940f,0x9410,0x9411,0x2c0d,
0x0,0x0,0x2c0d,0x2c0d,0x0,0x2c0d,0x2c0d,0x0,0x2c0d,0x2c0d,0x2c0d,0x2c0d,
0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x0,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x240e,0x2c0d,0x2c0d,
0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,
0x0,0x0,0x0,0x4007,0x4007,0x4007,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,
0x2c0f,0x2c0f,0x2c0f,0x2c04,0x2c04,0x2c04,0x2c04,0x2c04,0x2c0f,0x2c04,0x2c04,0x2c0f,
0x2c0f,0x2c0f,0x2c0f,0x2c0f,0x2c0f,0x2c04,
0x0,0x0,0x2c0d,0x2c0d,0x0,0x2c0d,0x2c0d,0x4407,0x2c0d,0x2c0d,0x2c0d,0x2c0d,
0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x0,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2416,0x2c0d,0x2c0d,
0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1c1a,0x9012,0x9012,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x1c1b,0x9013,0x9013,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x9014,0x9014,0x0,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,
0x2c1d,0x2c1d,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,
0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,
0x0,0x0,0x9014,0x9014,0x0,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,
0x9c14,0x9c14,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,
0x9014,0x9014,0x9014,0x9014,0x9014,0x9014,
};
static SXSTMI *S_transition_matrix[]={NULL,
&SXS_transition[0],
&SXS_transition[30],
&SXS_transition[60],
&SXS_transition[90],
&SXS_transition[120],
&SXS_transition[150],
&SXS_transition[180],
&SXS_transition[210],
&SXS_transition[240],
&SXS_transition[270],
&SXS_transition[300],
&SXS_transition[330],
&SXS_transition[360],
&SXS_transition[390],
&SXS_transition[420],
&SXS_transition[450],
&SXS_transition[480],
&SXS_transition[510],
&SXS_transition[540],
&SXS_transition[570],
&SXS_transition[600],
&SXS_transition[630],
&SXS_transition[660],
&SXS_transition[690],
&SXS_transition[720],
&SXS_transition[750],
&SXS_transition[780],
&SXS_transition[810],
&SXS_transition[840],
};
static struct SXS_action_or_prdct_code SXS_action_or_prdct_code[]={{0,0,0,0,0},
{0x6006,3,0,0,0},
{0x4001,1,0,0,0},
{0x2015,3,0,1,0},
{0x4003,4,0,1,0},
{0x9c03,1,0,1,1},
{0x2c09,0,0,1,1},
{0x9404,2,0,1,1},
{0x2c04,0,0,1,1},
{0x2c1a,10,0,1,0},
{0x2c1b,10,0,1,0},
{0x2c1c,10,0,1,0},
{0x200d,9,8,1,0},
{0x200d,9,12,1,0},
{0x200d,9,10,1,0},
{0x200d,9,13,1,0},
{0x200d,9,9,1,0},
{0x200d,9,11,1,0},
{0x2c11,5,0,1,0},
{0x2c13,5,0,1,0},
{0x200d,2,0,0,0},
};
static char *S_adrp[]={0,
";",
"%LHS_NON_TERMINAL",
"=",
"%ACTION",
"%NON_TERMINAL",
"%PREDICATE",
"%TERMINAL",
"%GENERIC_TERMINAL",
"End Of File",
};
static SXINT S_is_a_keyword[]={
0};
static SXINT S_is_a_generic_terminal[]={
6,2,4,5,6,7,8};
static SXINT S_lrgl[]={
4,1,2,3,4,0,
5,-1,1,2,3,4,
5,-1,0,1,2,3,
};
static SXINT *S_lregle[]={NULL,
&S_lrgl[0],
&S_lrgl[6],
&S_lrgl[12],
};
static SXINT S_param_ref[]={
0,
0,-1,
-1,0,
};
static struct SXS_local_mess SXS_local_mess[]={{0,NULL,NULL},
{1,"%sThe invalid character \"%s\" is deleted.",&S_param_ref[0]},
{2,"%sThe invalid character \"%s\" is replaced by \"%s\".",&S_param_ref[1]},
{2,"%sThe character \"%s\" is inserted before \"%s\".",&S_param_ref[3]},
};
static SXINT S_no_delete[]={
0};
static SXINT S_no_insert[]={
0};
static char *S_global_mess[]={0,
"%s\"%s\" is deleted.",
"%sThis unknown keyword is erased.",
"End Of Line",
"End Of File",
"%sScanning stops on End Of File.",
};
extern SXINT SCANACT(SXINT what, SXINT act_no);
extern SXINT sxscan_it(void);
extern SXBOOLEAN sxsrecovery (SXINT sxsrecovery_what, SXINT state_no, unsigned char *class);
static struct SXT_node_info SXT_node_info[]={{0,0},
{3,1},{0,2},{8,4},{0,5},{0,6},{10,8},{10,9},{11,10},{6,12},{12,13},{2,15},{0,16},
{13,17},{9,19},{4,20},{0,21},};
static SXINT T_ter_to_node_name[]={
0,0,5,0,2,6,7,};
static char *T_node_name[]={NULL,
"ERROR",
"ACTION",
"BNF",
"GENERIC_TERMINAL",
"LHS_NON_TERMINAL",
"NON_TERMINAL",
"PREDICATE",
"RULE_S",
"TERMINAL",
"VOCABULARY_S",
"X_LHS",
"X_NON_TERMINAL",
"X_TERMINAL",
};
extern SXINT sempass(SXINT what, struct sxtables *sxtables_ptr);
static char T_stack_schema[]={0,
0,0,1,0,1,0,1,1,1,0,1,0,0,1,0,0,0,1,0,0,0,};

static struct SXT_tables SXT_tables=
{SXT_node_info, T_ter_to_node_name, T_stack_schema, sempass, T_node_name};
extern SXINT sxscanner(SXINT what_to_do, struct sxtables *arg);
extern SXINT sxparser(SXINT what_to_do, struct sxtables *arg);
extern SXINT sxatc(SXINT what, ...);

struct sxtables sxtables={
52113, /* magic */
{sxscanner,(PARSER_T) sxparser}, {255, 9, 1, 3, 4, 30, 1, 29, 1, 1, 0, 
S_is_a_keyword,S_is_a_generic_terminal,S_transition_matrix,
SXS_action_or_prdct_code,
S_adrp,
NULL,
SXS_local_mess,
S_char_to_simple_class+128,
S_no_delete,
S_no_insert,
S_global_mess,
S_lregle,
(SCANACT_T) SCANACT,
(RECOVERY_T) sxsrecovery,
NULL,
},
{3, 16, 16, 19, 19, 25, 27, 38, 9, 7, 15, 15, 9, 4, 0, 9, 4, 7, 2, 5, 11, 5, 4,
reductions,
t_bases,
nt_bases,
vector-27,
SXPBM_trans,
NULL,
NULL,
NULL,
P_lregle,
P_right_ctxt_head,
SXP_local_mess,
P_no_delete,
P_no_insert,
P_global_mess,PER_tset,sxscan_it,(RECOVERY_T) sxprecovery,
NULL,
NULL,
(SEMACT_T) sxatc},
err_titles,
abstract,
(sxsem_tables*)&SXT_tables,
NULL,
};
/* End of sxtables for xbnf [Thu Mar  6 12:56:26 2008] */
