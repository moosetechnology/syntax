% Le point d'entree principal de cette grammaire est le predicat Prmt(X,Y)
% qui verifie que le deuxieme argument est une permutattion du premier

% Les 2 args doivent avoir la meme taille

% On fabrique un RECONNAISSEUR, les clauses sont executees dans l'ordre ou elles apparaissent

% Reconnaissance en temps quadratique

Axiome(\a\b\c)		--> &false() . % Pour le test
Axiome(X Y)		--> &StrEqLen(X,Y) &Prmt(X, Y) .

&Prmt(X, Y)		--> &StrEqLen(X,Y) A(X, X, Y) .

A(T0 Z, X0 T0 X1, Y)	--> &StrLen(1, T0) TinX(T0, X0) .
A(T0 Z, X, Y)		--> &StrLen(1, T0) B(T0, X, Y) A(Z, X, Y) .
A(, X, Y)		--> .

B(T0, T1 X, Y)		--> &StrLen(1, T1) !&StrEq(T0, T1) B(T0, X, Y) .
B(T0, T1 X, Y)		--> &StrEq(T0, T1) C(T0, X, Y) .
B(T0, , Y)		--> D(T0, Y) .

C(T0, X, T1 Y)		--> &StrLen(1, T1) !&StrEq(T0, T1) C(T0, X, Y) .
C(T0, X, T1 Y)		--> &StrEq(T0, T1) B(T0, X, Y) .

D(T0, T1 Y)		--> &StrLen(1, T1) !&StrEq(T0, T1) D(T0, Y) .
D(T0, )			--> .

TinX(T0, T1 X1)		--> &StrLen(1, T1) !&StrEq(T0, T1) TinX(T0, X1) .
TinX(T0, T1 X1)		--> &StrEq(T0, T1) .
