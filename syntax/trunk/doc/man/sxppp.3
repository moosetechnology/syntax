.\" @(#)sxppp.3	- SYNTAX [unix] - 26 Avril 1988
.TH SXPPP 3 "SYNTAX\[rg]"
.SH NAME
sxppp
\- pretty-printer of programs
.SH SYNOPSIS
.nf
.ta \w'\s-2SXVOID\s0  'u +\w'\s-2SHORT\s0  'u
.B
#include "sxunix.h"
.PP
.B
struct sxppvariables  sxppvariables\|;
.PP
.B
\s-2SXVOID\s0 sxppp (what, sxtables)
.B
	int	 what\|;
.B
	struct sxtables  *sxtables\|;
.fi
.SH DESCRIPTION
.I sxppp
is the end module of the
.B SYNTAX
paragraphing system
.BR Paradis .
Once a program has been compiled into a tree, using
.BR sxatcpp (3),
this module traverses that tree and interprets the pseudo-code
produced by
.BR paradis (1)
in order to output the pretty version of the program on the file
.IR sxstdout .
.PP
.I what
may be:
.TP
.I \s-2SXOPEN\s0
to initialise the paragrapher, allocate internal structures and verify
options\|;
.TP
.I \s-2SXCLOSE\s0
to free the internal structures\|;
.TP
.I \s-2SXACTION\s0
to produce the pretty version of the source program which has just
been analysed and for which a tree has been built by
.BR sxatcpp (3).
.PP
Some of the pseudo-code directives make use of a set of options, which
are all embedded in a
.I sxppvariables
structure; this structure contains the following variables, which may
be modified by the user (the default value of each of these variables
is obtained by setting it to 0 or \s-2NULL\s0)\|:
.TP
.I kw_case
how should keywords be written (default: as in the grammar which has
been fed into
.BR paradis (1))\|;
.TP
.I terminal_case
same as
.IR kw_case ,
but for each type of terminal (default: use the text the scanner
returned)\|;
.TP
.I kw_dark
should keywords be artificially darkened, by overstriking using
backspaces (default: no!)\|;
.TP
.I terminal_dark
same as
.IR kw_dark ,
but for each type of terminal\|;
.TP
.I no_tabs
do not optimize spaces into tabs (default: any sequence of more than
one space leading to a tabulation position is turned into a HT
character (\s-2ASCII\s0\ 9))\|;
.TP
.I tabs_interval
number of columns between two tab positions (default: installation
dependent\|; the value used is that of \s-2SXTAB_INTERVAL\s0, usually
defined in
.BR sxunix (3))\|;
.TP
.I line_length
maximal length of output lines (default: 79)\|;
.TP
.I block_margin
do not preserve structure when deeply nested\|; for a discussion on
this option and the next one, see
.BR ppc (1)\|;
.TP
.I max_margin
do not indent lines further than that (default: two-thirds of the line
length)\|;
.LP
.I sxppp
is not usually called directly by the user, but instead through the
.I
\s-2SXSEMPASS\s0
entry of the
.BR sxatcpp (3)
module.
It is the user's responsibility to open and close the output file
.IR sxstdout ,
onto which goes all output.
.ne 8
.SH "FURTHER DESCRIPTION"
The
.I sxppvariables
structure is declared in the include file
.BR sxunix.h \|;
other than for variables private to the paragrapher, that declaration
is close to the following\|:

.nf
.if t .ta \w'\fBstru'u +\w'\s-2SXBOOLEAN\s0  'u +\w' *terminal_dark\|; 'u +\w'/* Same as kw_case, but for each type of terminal\| 'u
.if n .ta \w'\fBstru'u +\w'\fBshort int\fP  'u +\w' *terminal_dark\|; 'u +\w'/* Same as kw_case, but for each type of terminal\| 'u
.ne 3
\fBstruct\fP sxppvariables {
	\s-2SXCASE\s0	kw_case\|;	/* How should keywords be written	*/
	\s-2SXCASE\s0	*terminal_case\|;	/* Same as kw_case, but for each type of terminal	*/
.ne 2
	\s-2SXBOOLEAN\s0	kw_dark\|;	/* Should keywords be artificially darkened	*/
	\s-2SXBOOLEAN\s0	*terminal_dark\|;	/* Same as kw_dark, but for each type of terminal	*/
.ne 2
	\s-2SXBOOLEAN\s0	no_tabs\|;	/* Do not optimize spaces into tabs	*/
	\fBshort int\fP	tabs_interval\|;	/* Number of columns between two tab positions	*/
.ne 2
	\s-2SXBOOLEAN\s0	block_margin\|;	/* Do not preserve structure when deeply nested	*/
	\fBshort int\fP	max_margin\|;	/* Do not indent lines further than that	*/
.ne 3
	\fBshort int\fP	line_length\|;	/* What it says	*/
	\s-2SXBOOLEAN\s0	is_error\|;	/* SXTRUE if the pretty-printer detected an error	*/
	\fBlong int\fP	char_count\|;	/* Number of chars output by the pretty-printer	*/
} sxppvariables\|;
.fi

.LP
When not \s-2NULL\s0,
.I terminal_case
is a pointer to an array of
.IR \s-2SXCASE\s0 s,
indexed by the internal codes assigned to each token by SYNTAX (see
.BR tdef (1))\|;
each element of this array is either:
.TP
\s-2SXNO_SPECIAL_CASE\s0
(i.e.\ 0), which means to use the grammatical form of the terminal if
it is non-generic, else the text kept by the scanner\|;
.TP
\s-2SXUPPER_CASE\s0
as above, but alphabetical characters are upper-cased\|;
.TP
\s-2SXLOWER_CASE\s0
as above, but alphabetical characters are lower-cased\|;
.TP
\s-2SXCAPITALISED_INITIAL\s0
alphabetical characters are lower-cased when they occur after an
alphabetical or numerical character, upper-cased otherwise\|;
.LP
Note that a non-\s-2NULL\s0
.I terminal_case
overrides any definition of
.IR kw_case .
.PP
.I terminal_dark
and
.I kw_dark
are similar, only the information they hold are just boolean values
stating for each terminal if it should be output with embedded
overstrikes, to make it look darker on a line printer.
.SH "SEE ALSO"
paradis(1),
tdef(1),
ppada(1),
ppc(1),
sxunix(3),
sxatcpp(3),
sxscanner(3)
and the \fISYNTAX Reference Manual\fP.
.SH NOTES
The contents of the structure
.I sxppvariables
must be saved and restored by the user when switching between source
languages for which
.I \s-2SXOPEN\s0
has been done, but not
.IR \s-2SXCLOSE\s0 .
.PP
.I sxppp (\s-2SXACTION\s0, ...)
momentarily exchanges the contents of the \s-2FILE\s0 variables
.B *stdout
and
.BR *sxstdout ,
if they are not the same.  This is an (admittedly crude) attempt at
efficiency, as the paragrapher is very IO-bound.  The user is usually
not aware of this substitution, unless (s)he starts catching
signals...
.SH BUGS
If the global variable
.I sxverbosep
is not 0, an attempt is done at animating the user's screen.  This
results in much more IO and, in some situations, a messy screen.

