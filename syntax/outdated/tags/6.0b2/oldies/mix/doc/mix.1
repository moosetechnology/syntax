.\" @(#)mix.1	- SYNTAX [unix] - 2 Septembre 1987
.TH MIX 1 "SYNTAX\*R"
.SH NAME
mix \- update a new (synthetised and inherited) semantic pass when the
semantics is defined by abstract tree.
.SH SYNOPSIS
.B mix
\fIold_sem_pass\fP
\fInew_mix_frame\fP
.SH DESCRIPTION
.I mix
manages new versions of semantic passes included synthesised and inherited 
attribute evaluations.
.br
The new updated version, written on the standard output, is created from 
\fIold_sem_pass\fP
by
deleting/inserting attributes computation depending on information picked up
in \fInew_mix_frame\fP.
\fInew_mix_frame\fP 
being the output generated by a previous execution of semat(1).
.SH FILES
.ta \w'\fInew_mix_frame\fP  'u
\fIold_sem_pass\fP	the old semantic pass to be updated. (input)
.br
\fInew_mix_frame\fP	a new semantic pass frame (input)
.SH "SEE ALSO"
semat(1) and the
\fB"SYNTAX REFERENCE MANUAL"\fP.
.SH DIAGNOSTICS
When a node does not exist any more in the new specification, the
corresponding attributes computation are erased and output on standard error.
Exit status is 0 if everything is alright and 2
if error messages are issued.
.SH BUGS
Some comments generated by semat(1) \fBmust not\fP be erased, moved or even
modified when the user adds its attribute evaluations.
These comments act as "beacons" for mix(1).
They are:
.nf
The node name delimiters
/*
N O D E   N A M E S
*/

/*
E N D   N O D E   N A M E S
*/

The inherited pass delimiters
/*
I N H E R I T E D
*/

/*
Z Z Z Z
*/

The synthesised pass delimiters
/*
D E R I V E D
*/

/*
Z Z Z Z
*/

.fi
If the arity of a node has changed, the inherited pass on its children keeps
the old arity and the update must be done by hand.
.\" Local Variables:
.\" mode: nroff
.\" version-control: yes
.\" End:
