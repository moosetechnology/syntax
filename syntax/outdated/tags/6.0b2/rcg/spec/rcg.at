<range_concatenation_grammar>	= <clause_LIST>						;

<clause_LIST>			= <clause_LIST> <clause>				; 
<clause_LIST>			= <clause>						; "CLAUSE_S"

<clause>			= <lhs_predicate> --> <rhs_predicates> . <action_part>	; "CLAUSE"

<lhs_predicate>			= %internal_predicate ( <lhs_argument_LIST> )		; "PREDICATE"
<lhs_predicate>			= %external_predicate ( <lhs_argument_LIST> )		; "PREDICATE"

<lhs_argument_LIST>		= <lhs_argument_LIST> , <lhs_argument>			;
<lhs_argument_LIST>		= <lhs_argument>					; "ARGUMENT_S"

<lhs_argument>			= <string_LIST>						;

<string_LIST>			= <string_LIST> <string_elem>				;
<string_LIST>			=							; "STRING_S"

<string_elem>			= %variable						;
<string_elem>			= %terminal						;

<rhs_predicates>		=							; "PREDICATE_S"
<rhs_predicates>		= <rhs_predicate_LIST>					;

<rhs_predicate_LIST>		= <rhs_predicate_LIST> , <predicate_call>		;
<rhs_predicate_LIST>		= <rhs_predicate_LIST> <predicate_call>			;
<rhs_predicate_LIST>		= <predicate_call>					; "PREDICATE_S"

<predicate_call>		= <rhs_predicate>					;
<predicate_call>		= ! <rhs_predicate>					; "NOT"
* <predicate_call>		= %external_action ( <rhs_argument_LIST> )		; "PREDICATE"

<rhs_predicate>			= %internal_predicate ( <rhs_args> )			; "PREDICATE"
<rhs_predicate>			= %external_predicate ( <rhs_args> )			; "PREDICATE"
<rhs_predicate>			= <predef_predicate> ( <rhs_args> )			; "PREDICATE"

<predef_predicate>		= "streq"						; 
<predef_predicate>		= "streqlen"						; 
<predef_predicate>		= "strlen"						; 
<predef_predicate>		= "first"						; 
<predef_predicate>		= "last"						; 
<predef_predicate>		= "false"						;
<predef_predicate>		= "cut"							; 
<predef_predicate>		= "true"						; 
<predef_predicate>		= "lex"							; 

<rhs_args>			=							; "ARGUMENT_S"
<rhs_args>			= <rhs_argument_LIST>					;

<rhs_argument_LIST>		= <rhs_argument_LIST> , <rhs_argument>			;
<rhs_argument_LIST>		= <rhs_argument>					; "ARGUMENT_S"

<rhs_argument>			= <rhs_string_LIST>					;

<rhs_string_LIST>		= <rhs_string_elem>					; "STRING_S"
<rhs_string_LIST>		= <rhs_string_LIST> <rhs_string_elem>			;

<rhs_string_elem>		= <string_elem>						;
<rhs_string_elem>		= <etc>							;

<etc>				= ...							; "ETC"

<action_part>			=							;
<action_part>			= %external_action					;


* petite tentative pour pouvoir passer des pre'dicats en parametres

* Si un <lhs_argument> est constitue' d'une %variable, cette %variable peut designer un predicat
<lhs_argument>			= <prdct_name> "(" <prdct_args_LIST> ")"		; "PRDCT_ARGUMENT"

* %variable_predicate commence par un "$"
<prdct_name>			= %variable_predicate					; 
* %argument_predicate commence par un "#"
<prdct_name>			= %argument_predicate					;
<prdct_name>			= %external_predicate					;

<prdct_args_LIST>		= <prdct_args_LIST> "," <prdct_arg>			;
<prdct_args_LIST>		= <prdct_arg>						; "PRDCT_ARGUMENT_S"

<prdct_arg>			= <string_LIST>						;
* non instancie'
<prdct_arg>			= "*"							;

<rhs_predicate>			= %variable_predicate "(" <rhs_args> ")"		; "PREDICATE"

<rhs_argument>			= <prdct_name> "(" <prdct_args_LIST> ")"		; "PRDCT_ARGUMENT"
