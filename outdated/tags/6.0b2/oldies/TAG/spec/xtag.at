*
*	This grammar is used for the specification of TAGs
*
*	The specification language is (supposed to be) the one used in the
*	XTAG project (u. of Pennsylvania)
*

<TAG>		= <TREE_LIST>						; "TAG"
*
<TREE_LIST>	= <TREE_LIST>
		  <TREE> 						; 
<TREE_LIST>	= <TREE> 						; "TREE_S"
*
<TREE>		= feature ( <NODE_LIST> )				; "TREE"
*
<NODE_LIST>	= <NODE_LIST>  <NODE> 					;
<NODE_LIST>	= ( <ATTRIBUT_LIST> )		 			; "NODE_S"
*
<NODE>		= ( <NODE_LIST> )					;
<NODE>		= <ATTRIBUT_LIST>					;
*
<NODE_NAME>	= ( ( %string . %string ) )				; "NODE_NAME"
*
<ATTRIBUT_LIST>	= <ATTRIBUT_LIST> <ATTRIBUT>				;
<ATTRIBUT_LIST> = <NODE_NAME>						; "ATTRIBUT_S"
*
<ATTRIBUT>	= :footp <BOOL_VAL>					; "FOOTP" 
<ATTRIBUT>	= :headp <BOOL_VAL>					; "HEADP"
<ATTRIBUT>	= :substp <BOOL_VAL>					; "SUBSTP"
<ATTRIBUT>	= :display-feature? <BOOL_VAL>				; 
* Selective Adjoining Constraint
<ATTRIBUT>	= :constraints %string					; "SA"
<ATTRIBUT>	= :constraint-type					; 
* No Adjoining
<ATTRIBUT>	= :na							; "NA"
* Obligatory Adjoining
<ATTRIBUT>	= :oa							; "OA"
<ATTRIBUT>	= :none							;
<ATTRIBUT>	= :dummy						;
<ATTRIBUT>	= :connector						;
<ATTRIBUT>	= :line							;
<ATTRIBUT>	= :shape						;
*
<BOOL_VAL>	= t							; "TRUE"
<BOOL_VAL>	= nil							; "NIL"
