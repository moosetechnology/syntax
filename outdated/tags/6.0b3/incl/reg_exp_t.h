/* Beginning of sxtables for lecl [Fri Jun 11 10:54:41 2004] */
#define SXP_MAX 467
#include "sxunix.h"
#include "sxba.h"
static struct SXP_reductions reductions[]={{0,0,0,0},
{6, 5, 0, -223},
{6, 22, 0, -225},
{2, 4, 2, -223},
{6, 39, 0, -162},
{2, 21, 2, -225},
{1, 23, 2, 313},
{1, 24, 2, 313},
{2, 38, 1, -162},
{1, 1, 4, -222},
{6, 153, 0, -238},
{1, 8, 2, 307},
{1, 9, 2, 307},
{1, 15, 2, 309},
{1, 104, 1, 350},
{1, 117, 1, -164},
{1, 102, 1, 349},
{1, 115, 1, 351},
{1, 35, 1, 320},
{1, 30, 1, 319},
{1, 42, 2, -230},
{6, 77, 0, -246},
{6, 89, 0, 344},
{6, 53, 0, -169},
{2, 146, 2, 358},
{6, 147, 2, 358},
{2, 152, 2, -238},
{1, 84, 2, 334},
{1, 90, 1, 345},
{1, 64, 2, 334},
{1, 65, 2, 334},
{6, 72, 0, -254},
{2, 52, 1, -169},
{2, 76, 2, -246},
{2, 88, 2, 344},
{1, 91, 2, 345},
{1, 87, 3, 334},
{1, 56, 2, -250},
{6, 161, 0, -257},
{6, 71, 2, -254},
{2, 70, 2, -254},
{2, 160, 2, -257},
{1, 2, 0, -159},
{5, 7, 0, -224},
{0, 0, 2, -222},
{1, 19, 0, -160},
{5, 25, 0, -226},
{5, 26, 0, -227},
{1, 36, 0, -161},
{0, 3, 3, -159},
{5, 16, 0, 310},
{5, 17, 0, 310},
{5, 18, 0, 310},
{5, 45, 0, -231},
{5, 44, 0, -231},
{5, 43, 0, -231},
{1, 46, 0, -231},
{1, 47, 0, -231},
{1, 48, 0, -231},
{1, 142, 0, -163},
{1, 6, 3, 305},
{0, 13, 1, 309},
{0, 20, 3, -160},
{5, 119, 0, 351},
{1, 120, 0, 351},
{1, 121, 0, 351},
{1, 122, 0, 351},
{1, 123, 0, 351},
{1, 124, 0, 351},
{1, 130, 0, 351},
{1, 131, 0, 351},
{5, 33, 0, 320},
{5, 137, 0, 321},
{1, 138, 0, 321},
{1, 139, 0, 321},
{0, 37, 2, -161},
{5, 148, 0, 359},
{5, 149, 0, 359},
{1, 150, 0, -9},
{0, 11, 2, 308},
{1, 99, 1, 315},
{0, 101, 1, 348},
{5, 132, 0, -17},
{1, 135, 0, -17},
{1, 136, 0, -17},
{0, 116, 1, 351},
{1, 27, 1, -7},
{0, 29, 1, 318},
{1, 81, 0, 325},
{5, 61, 0, 334},
{6, 145, 1, -235},
{1, 107, 2, 351},
{1, 32, 2, 320},
{5, 95, 0, -168},
{5, 97, 0, -168},
{5, 96, 0, -168},
{1, 93, 0, -168},
{1, 92, 0, -168},
{1, 94, 0, -168},
{1, 40, 3, 323},
{1, 41, 3, 323},
{6, 59, 1, 326},
{5, 57, 0, -251},
{0, 143, 3, -163},
{0, 151, 2, -9},
{1, 112, 3, 351},
{1, 110, 3, 351},
{1, 106, 3, 351},
{1, 111, 3, 351},
{1, 109, 3, 351},
{1, 108, 3, 351},
{5, 125, 3, 351},
{5, 126, 3, 351},
{5, 127, 3, 351},
{5, 128, 3, 351},
{1, 129, 3, 351},
{1, 100, 3, 348},
{5, 140, 3, 321},
{5, 141, 3, 321},
{1, 28, 3, 318},
{0, 75, 2, 334},
{1, 82, 2, 334},
{1, 69, 0, 338},
{1, 68, 0, 338},
{5, 73, 0, 341},
{5, 74, 0, 341},
{2, 58, 2, 326},
{0, 51, 2, -20},
{2, 144, 3, -235},
{1, 78, 2, 343},
{1, 79, 2, 343},
{1, 80, 2, 343},
{5, 98, 0, -35},
{1, 85, 3, 334},
{1, 69, 1, 338},
{0, 67, 1, -30},
{1, 163, 0, 366},
{5, 158, 4, 361},
{5, 159, 4, 361},
{1, 83, 4, 334},
{1, 54, 3, 331},
{1, 55, 3, 331},
{5, 164, 1, 366},
{0, 157, 5, 361},
{1, 86, 5, 334},
};
static struct SXP_bases t_bases[]={{0,0,0},
{-45, 171, 12},
{-48, 174, 16},
{-59, 178, 60},
{-75, 384, 0},
{-78, 266, 61},
{-85, 425, 383},
{-81, 417, 378},
{-87, 425, 380},
{-100, 446, 371},
{-88, 194, 34},
{0, 407, 0},
{0, 43, 4},
{0, 385, 0},
{-49, 43, 4},
{0, 408, 372},
{0, 384, 0},
{-62, 385, 0},
{0, 417, 378},
{0, 425, 380},
{0, 395, 0},
{0, 408, 0},
{0, 417, 0},
{0, 425, 0},
{-88, 446, 373},
{0, 417, 379},
{0, 391, 0},
{0, 353, 389},
{0, 102, 4},
{-103, 395, 0},
{-104, 266, 61},
{-88, 193, 27},
{0, 353, 390},
{-123, 122, 25},
{-123, 376, 388},
{0, 353, 0},
{0, 132, 4},
{-88, 219, 27},
{-88, 446, 373},
{0, 408, 377},
{0, 376, 0},
{-42, 170, 1},
{-116, 417, 378},
{-119, 425, 380},
{-141, 446, 370},
{0, 408, 372},
{0, 408, 372},
{0, 408, 372},
{0, 417, 378},
{0, 408, 0},
{0, 417, 378},
{0, 417, 378},
{0, 425, 380},
{0, 408, 0},
{0, 417, 378},
{0, 425, 380},
{0, 395, 0},
{0, 395, 0},
{0, 391, 0},
{0, 353, 0},
{0, 417, 378},
{0, 353, 0},
{0, 376, 0},
{0, 408, 377},
{0, -44, 69},
{0, 172, 2},
{0, 173, 3},
{0, 175, 2},
{0, 176, 3},
{0, 177, 3},
{-60, 386, 0},
{-61, 179, 9},
{0, 182, 2},
{0, 183, 3},
{0, 386, 374},
{-80, 212, 14},
{-86, 213, 14},
{0, 187, 2},
{-90, 214, 26},
{0, 215, 3},
{0, 188, 2},
{0, 392, 375},
{0, 392, 381},
{0, 392, 387},
{0, 402, 0},
{-99, -147, 4},
{0, 101, 2},
{0, 115, 8},
{-120, 216, 26},
{-121, 217, 26},
{0, -152, 4},
{0, 126, 2},
{0, 196, 2},
{0, 218, 23},
{-128, 214, 26},
{-133, 217, 26},
{-135, 220, 26},
{-139, 217, 26},
{-140, -154, 4},
{-143, 221, 26},
{-144, 217, 26},
{0, 267, 7},
{0, 268, 7},
{0, 269, 7},
{0, 270, 7},
{0, 211, 7},
{0, 271, 7},
{0, 272, 7},
{0, 382, 0},
{0, 280, 46},
{0, 281, 46},
{0, 282, 46},
{0, 283, 46},
{0, 284, 46},
{0, 285, 46},
{0, 191, 4},
{0, 190, 32},
{0, 288, 63},
{0, 289, 64},
{0, 290, 64},
{-107, 403, 0},
{-110, 404, 0},
{0, 111, 8},
{0, 112, 8},
{0, 113, 8},
{0, 114, 8},
{0, 117, 8},
{0, 118, 8},
{0, 291, 30},
{0, 292, 30},
{0, 197, 64},
{0, 294, 46},
{0, 295, 46},
{0, 409, 0},
{0, 131, 29},
{-134, 198, 27},
{0, 137, 66},
{0, 138, 66},
{0, 142, 68},
{0, 199, 69},
};
static struct SXP_bases nt_bases[]={{0,0,0},
{-160, 0, 0},
{-161, 0, 0},
{-163, 0, 0},
{-8, 426, 330},
{-10, 363, 0},
{-17, 0, 0},
{-16, 438, 0},
{-19, 0, 0},
{-249, -248, 28},
{-28, 0, 0},
{-32, 400, 398},
{-224, 347, 0},
{-227, 339, 352},
{-3, -224, 9},
{-228, -229, 13},
{-231, 426, 340},
{-5, 339, 343},
{-165, 438, 421},
{-166, 467, 0},
{-237, 298, 0},
{-13, 0, 0},
{-164, 348, 394},
{-18, 0, 0},
{-244, 457, 0},
{-165, 438, 445},
{-21, -246, 45},
{-168, 423, 334},
{-251, 400, 397},
{-252, -237, 62},
{-26, 0, 0},
{-27, 0, 0},
{-253, 423, 341},
{-29, 0, 0},
{-30, 447, 0},
{-255, 423, 341},
{-35, 0, 0},
{-36, 0, 0},
{-202, 418, 0},
{-38, 348, 365},
{-39, 0, 0},
{-159, -222, 1},
{-16, 438, 0},
{-19, 0, 0},
{-249, -248, 28},
{-232, -229, 13},
{-11, -229, 13},
{-12, -229, 13},
{-165, 438, 325},
{-15, -229, 13},
{-165, 438, 327},
{-165, 438, 356},
{-166, -242, 21},
{-245, 0, 0},
{-200, 438, 0},
{-201, 0, 0},
{-24, 0, 0},
{-25, 0, 0},
{-33, 0, 0},
{-34, -168, 49},
{-165, 438, 346},
{-258, 423, 341},
{-40, 0, 0},
{-41, -229, 13},
};
static struct SXP_item vector[]={
{7, -223},
{8, -1},
{17, -226},
{4, 93},
{60, -235},
{61, -236},
{30, -231},
{13, -229},
{19, -227},
{10, 94},
{18, -37},
{25, -162},
{26, -4},
{15, -225},
{16, -2},
{6, -9},
{17, 95},
{18, 96},
{19, 97},
{20, 98},
{4, -156},
{4, -149},
{51, -239},
{4, -145},
{51, -240},
{7, 203},
{4, 124},
{47, -247},
{8, 79},
{8, 278},
{6, 180},
{6, 180},
{10, 125},
{7, 210},
{4, 53},
{4, 46},
{49, -168},
{5, 204},
{6, 205},
{13, 71},
{10, 54},
{15, 181},
{13, 82},
{51, -233},
{13, 47},
{4, 76},
{21, 186},
{17, 55},
{18, 56},
{19, 57},
{20, 58},
{10, 77},
{14, 212},
{51, -241},
{5, 105},
{5, 108},
{8, 92},
{4, 102},
{4, 50},
{25, 293},
{25, 189},
{25, 195},
{14, 213},
{36, 91},
{10, 51},
{11, 52},
{29, 286},
{4, 50},
{31, 287},
{46, 296},
{7, 206},
{38, 279},
{63, -238},
{10, 51},
{11, 52},
{22, 127},
{33, -169},
{34, -23},
{15, 207},
{68, -257},
{36, -251},
{35, -250},
{53, 83},
{54, 84},
{29, 129},
{18, -6},
{31, 130},
{24, 63},
{39, 106},
{39, 109},
{62, 275},
{68, 136},
{28, -256},
{65, 276},
{54, -14},
{67, 277},
{12, -164},
{13, -229},
{35, 208},
{27, -230},
{37, 209},
{37, -244},
{0, 0},
{40, 64},
{41, 65},
{42, 66},
{43, 67},
{44, 68},
{45, 259},
{18, -20},
{47, 260},
{48, 261},
{49, 262},
{50, 263},
{51, 69},
{52, 70},
{24, 89},
{48, -22},
{51, -233},
{0, 0},
{28, 184},
{0, 0},
{31, -20},
{0, 0},
{32, 185},
{33, 274},
{55, 72},
{56, 73},
{57, 74},
{58, 264},
{59, 265},
{28, -243},
{29, -167},
{20, -7},
{21, -234},
{0, 0},
{43, -254},
{44, -31},
{0, 0},
{0, 0},
{0, 0},
{57, -164},
{51, -233},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
};
static struct SXP_prdct prdcts[]={
{1, 273},
{-1, -88},
{2, 192},
{-1, -99},
{2, -88},
{1, 273},
{-1, -100},
{2, 192},
{-1, 0},
{2, 192},
{-1, -140},
{2, -88},
{1, 273},
{-1, -141},
};

static  SXBA_ELT SXPBA_kt2
#if SXBITS_PER_LONG==32
 [6] = {140, 0X13113A3E, 0X00001240, 0X1841230A, 0X00000000, 0X00000800, }
#else
 [4] = {140, 0X0000124013113A3E, 0X000000001841230A, 0X0000000000000800, }
#endif
/* End SXPBA_kt2 */;
static SXBA SXPBM_trans[]={NULL,
&SXPBA_kt2[0],
};
static SXINT P_lrgl[]={
3,0,-2,2,0,0,0,0,
2,-2,1,0,0,0,0,0,
5,0,-1,1,2,3,0,0,
5,0,-1,2,3,4,0,0,
4,0,2,3,4,0,0,0,
7,0,-1,-1,1,2,3,4,
5,-1,0,1,2,3,0,0,
5,-1,1,2,3,4,0,0,
4,1,2,3,4,0,0,0,
4,-1,2,3,4,0,0,0,
5,-1,-1,1,2,3,0,0,
};
static SXINT *P_lregle[]={NULL,
&P_lrgl[0],
&P_lrgl[8],
&P_lrgl[16],
&P_lrgl[24],
&P_lrgl[32],
&P_lrgl[40],
&P_lrgl[48],
&P_lrgl[56],
&P_lrgl[64],
&P_lrgl[72],
&P_lrgl[80],
};
static SXINT P_right_ctxt_head[]={0,
2,1,1,2,2,1,1,1,1,2,1,};
static SXINT P_param_ref[]={
1,-2,
0,1,-1,
-2,1,
1,-2,
1,
-2,-3,1,
-1,0,1,
0,1,-1,
0,1,
0,1,-1,
0,1,-1,-2,
-1,1,
};
static struct SXP_local_mess SXP_local_mess[]={{0,NULL,NULL},
{2,"%sMisspelling of \"%s\" which is replaced by the keyword \"%s\".",&P_param_ref[0]},
{3,"%sMisspelling of \"%s\" before \"%s\" which is replaced by the keyword \"%s\".",&P_param_ref[2]},
{2,"%s\"%s\" is inserted before \"%s\".",&P_param_ref[5]},
{2,"%s\"%s\" is replaced by \"%s\".",&P_param_ref[7]},
{1,"%s\"%s\" is deleted.",&P_param_ref[9]},
{3,"%s\"%s %s\" is inserted before \"%s\".",&P_param_ref[10]},
{3,"%s\"%s\" is inserted before \"%s %s\".",&P_param_ref[13]},
{3,"%s\"%s\" before \"%s\" is replaced by \"%s\".",&P_param_ref[16]},
{2,"%s\"%s\" before \"%s\" is deleted.",&P_param_ref[19]},
{3,"%s\"%s %s\" is replaced by \"%s\".",&P_param_ref[21]},
{4,"%s\"%s\" before \"%s\" is replaced by \"%s %s\".",&P_param_ref[24]},
{2,"%s\"%s\" is forced before \"%s\".",&P_param_ref[28]},
};
static SXINT P_no_delete[]={
0};
static SXINT P_no_insert[]={
0};
static char *P_global_mess[]={
"%s\"%s\" is expected",
"%s\"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\", \"%s\", \"%s\" is expected",
"%sGlobal recovery.",
"%sParsing resumes on \"%s\"",
"End Of File",
"%sParsing stops on End Of File.",
};
static SXINT PER_tset[]={
1,2};

static char *err_titles[SXSEVERITIES]={
"\000",
"\001Warning:\t",
"\002Error:\t",
};
static char abstract []= "%d warnings and %d errors are reported.";
extern SXINT PARSACT(SXINT what, SXINT action_no);
extern SXBOOLEAN sxprecovery (SXINT what_to_do, SXINT *at_state, SXINT latok_no);

static unsigned char S_char_to_simple_class[]={
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,4,5,6,5,5,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,5,3,7,8,3,9,10,3,11,12,13,14,15,16,17,
3,18,19,19,19,19,19,19,19,20,20,21,22,3,23,24,3,25,26,26,26,26,26,26,26,
26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,27,28,29,30,31,3,
26,32,26,26,26,33,26,26,26,26,26,26,26,34,26,26,26,35,26,36,26,37,26,26,26,
26,38,39,40,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,};
static SXSTMI SXS_transition[]={0,
0x0,0x4045,0x0,0x0,0x2402,0x2402,0x2c03,0x2c04,0x2c05,0x2c06,0x4407,0x4408,
0x4427,0x4405,0x441a,0x2407,0x2408,0x2c09,0x2c09,0x2c09,0x4417,0x4402,0x4403,0x441e,
0x2c0a,0x2c0b,0x4423,0x0,0x4424,0x440f,0x0,0x2c0b,0x2c0b,0x2c0b,0x2c0b,0x2c0b,
0x2c0b,0x4425,0x440e,0x4426,
0x0,0x4000,0x0,0x0,0x1402,0x1402,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,
0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,
0x4000,0x4000,0x4000,0x0,0x4000,0x4000,0x0,0x4000,0x4000,0x4000,0x4000,0x4000,
0x4000,0x4000,0x4000,0x4000,
0x0,0x0,0x2c0c,0x2c0c,0x2c0c,0x0,0x0,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,
0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,
0x2c0c,0x2c0c,0x2c0c,0x240d,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,
0x2c0c,0x2c0c,0x2c0c,0x2c0c,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x2c0e,0x2c0e,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x2c0f,0x0,0x0,0x0,0x0,0x0,0x2c0f,0x2c0f,0x2c0f,0x2c0f,0x2c0f,
0x2c0f,0x0,0x0,0x0,
0x0,0x0,0x0,0x2410,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x7011,0x2c12,0x2c12,0x0,0x0,0x0,0x0,
0x0,0x2c13,0x0,0x0,0x0,0x0,0x0,0x2c13,0x2c13,0x2c13,0x2c13,0x2c13,
0x2c13,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x4006,0x4006,0x4006,0x4006,0x0,0x0,0x4006,0x0,
0x0,0x0,0x0,0x2414,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x4006,0x4006,0x4006,0x0,0x0,0x4006,0x0,0x4006,0x4006,0x4006,0x4006,0x4006,
0x4006,0x4006,0x0,0x0,
0x0,0x0,0x0,0x0,0x4022,0x4022,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x4022,0x4409,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x4022,0x0,0x0,0x0,0x0,0x0,0x4022,0x4022,0x4022,0x4022,0x4022,
0x4022,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x402e,0x402e,0x0,0x0,0x0,0x0,0x0,0x402e,
0x0,0x0,0x0,0x402e,0x0,0x1c09,0x1c09,0x1c09,0x0,0x0,0x0,0x0,
0x0,0x402e,0x0,0x0,0x0,0x0,0x0,0x402e,0x402e,0x402e,0x402e,0x402e,
0x402e,0x0,0x0,0x0,
0x0,0x0,0x0,0x2415,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x7016,0x2c17,0x2c17,0x0,0x0,0x0,0x0,
0x0,0x2c18,0x0,0x0,0x0,0x0,0x0,0x2c18,0x2c18,0x2c18,0x2c18,0x2c18,
0x2c18,0x0,0x0,0x0,
0x0,0x0,0x0,0x9404,0x9003,0x9003,0x9003,0x9003,0x9003,0x9003,0x9003,0x9003,
0x0,0x9003,0x9003,0x9003,0x9003,0x2c19,0x2c19,0x2c19,0x9003,0x9003,0x9003,0x9003,
0x9003,0x2c19,0x9003,0x0,0x9003,0x9003,0x2c1a,0x2c19,0x2c19,0x2c19,0x2c19,0x2c19,
0x2c19,0x9003,0x9003,0x9003,
0x0,0x0,0x1c0c,0x1c0c,0x1c0c,0x0,0x4c0a,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,
0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,
0x1c0c,0x1c0c,0x1c0c,0x240d,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,0x1c0c,
0x1c0c,0x1c0c,0x1c0c,0x1c0c,
0x0,0x0,0x2c0c,0x2c0c,0x2c0c,0x240c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,
0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x9005,0x9005,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,
0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x2c0c,0x9406,0x9407,0x9408,0x9409,0x940a,
0x940b,0x2c0c,0x2c0c,0x2c0c,
0x0,0x0,0x0,0x0,0x400b,0x400b,0x400b,0x400b,0x0,0x400b,0x400b,0x400b,
0x0,0x400b,0x400b,0x400b,0x400b,0x1c0e,0x1c0e,0x0,0x0,0x400b,0x0,0x0,
0x400b,0x400b,0x400b,0x0,0x400b,0x400b,0x0,0x400b,0x400b,0x400b,0x400b,0x400b,
0x400b,0x400b,0x400b,0x400b,
0x0,0x0,0x0,0x0,0x900c,0x900c,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x900c,0x900c,0x900c,0x1c0f,0x1c0f,0x1c0f,0x0,0x900c,0x900c,0x0,
0x0,0x1c0f,0x0,0x0,0x0,0x0,0x2c1b,0x1c0f,0x1c0f,0x1c0f,0x1c0f,0x1c0f,
0x1c0f,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x241c,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x4c37,0x4c37,0x4c37,0x4c37,0x0,0x4c37,0x4c37,0x4c37,
0x0,0x0,0x0,0x4c37,0x0,0x9001,0x9001,0x9001,0x0,0x4c37,0x0,0x0,
0x4c37,0x4c37,0x4c37,0x0,0x4c37,0x4c37,0x0,0x4c37,0x4c37,0x4c37,0x4c37,0x4c37,
0x4c37,0x4c37,0x4c37,0x4c37,
0x0,0x0,0x0,0x0,0x4037,0x4037,0x4037,0x4037,0x0,0x4037,0x4037,0x4037,
0x0,0x0,0x0,0x4037,0x0,0x1c12,0x1c12,0x1c12,0x0,0x4037,0x0,0x0,
0x4037,0x4037,0x4037,0x0,0x4037,0x4037,0x0,0x4037,0x4037,0x4037,0x4037,0x4037,
0x4037,0x4037,0x4037,0x4037,
0x0,0x0,0x0,0x0,0x900d,0x900d,0x900d,0x900d,0x0,0x900d,0x900d,0x900d,
0x0,0x0,0x0,0x900d,0x0,0x1c13,0x1c13,0x1c13,0x0,0x900d,0x900d,0x0,
0x900d,0x1c13,0x900d,0x0,0x900d,0x900d,0x2c1d,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,
0x1c13,0x900d,0x900d,0x900d,
0x0,0x0,0x1414,0x1414,0x1414,0x4400,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,
0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,
0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,
0x1414,0x1414,0x1414,0x1414,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x241e,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,
0x1,0x0,0x0,0x0,0x4c18,0x4c18,0x4c18,0x4c18,0x0,0x0,0x4c18,0x4c18,
0x0,0x0,0x0,0x4c18,0x0,0x9002,0x9002,0x9002,0x0,0x4c18,0x0,0x0,
0x4c18,0x4c18,0x4c18,0x0,0x4c18,0x4c18,0x0,0x4c18,0x4c18,0x4c18,0x4c18,0x4c18,
0x4c18,0x4c18,0x4c18,0x4c18,
0x0,0x0,0x0,0x0,0x4018,0x4018,0x4018,0x4018,0x0,0x0,0x4018,0x4018,
0x0,0x0,0x0,0x4018,0x0,0x1c17,0x1c17,0x1c17,0x0,0x4018,0x0,0x0,
0x4018,0x4018,0x4018,0x0,0x4018,0x4018,0x0,0x4018,0x4018,0x4018,0x4018,0x4018,
0x4018,0x4018,0x4018,0x4018,
0x0,0x0,0x0,0x940f,0x900e,0x900e,0x900e,0x900e,0x0,0x0,0x900e,0x900e,
0x0,0x0,0x0,0x900e,0x0,0x0,0x0,0x0,0x0,0x900e,0x0,0x0,
0x900e,0x1c18,0x900e,0x0,0x900e,0x900e,0x2c1f,0x1c18,0x1c18,0x1c18,0x1c18,0x1c18,
0x1c18,0x900e,0x900e,0x900e,
0x0,0x0,0x0,0x0,0x9003,0x9003,0x9003,0x9003,0x9003,0x9003,0x9003,0x9003,
0x0,0x9003,0x9003,0x9003,0x9003,0x1c19,0x1c19,0x1c19,0x9003,0x9003,0x9003,0x9003,
0x9003,0x1c19,0x9003,0x0,0x9003,0x9003,0x2c1a,0x1c19,0x1c19,0x1c19,0x1c19,0x1c19,
0x1c19,0x9003,0x9003,0x9003,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x2c19,0x2c19,0x2c19,0x0,0x0,0x0,0x0,
0x0,0x2c19,0x0,0x0,0x0,0x0,0x0,0x2c19,0x2c19,0x2c19,0x2c19,0x2c19,
0x2c19,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x2c0f,0x2c0f,0x2c0f,0x0,0x0,0x0,0x0,
0x0,0x2c0f,0x0,0x0,0x0,0x0,0x0,0x2c0f,0x2c0f,0x2c0f,0x2c0f,0x2c0f,
0x2c0f,0x0,0x0,0x0,
0x0,0x0,0x0,0x2410,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x2c22,0x0,0x0,0x0,0x0,0x0,0x2c22,0x2c22,0x2c22,0x2c22,0x2c22,
0x2c22,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x2c13,0x2c13,0x2c13,0x0,0x0,0x0,0x0,
0x0,0x2c13,0x0,0x0,0x0,0x0,0x0,0x2c13,0x2c13,0x2c13,0x2c13,0x2c13,
0x2c13,0x0,0x0,0x0,
0x0,0x0,0x0,0x2415,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x2c18,0x0,0x0,0x0,0x0,0x0,0x2c18,0x2c18,0x2c18,0x2c18,0x2c18,
0x2c18,0x0,0x0,0x0,
0x0,0x0,0x0,0x2425,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x2c18,0x0,0x0,0x0,0x0,0x0,0x2c18,0x2c18,0x2c18,0x2c18,0x2c18,
0x2c18,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x2426,0x0,0x0,0x0,0x0,0x0,0x2426,0x2426,0x2426,0x2426,0x2426,
0x2426,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x1c21,0x9010,0x9010,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x9411,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x1c23,0x9012,0x9012,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x2418,0x0,0x0,0x0,0x0,0x0,0x2418,0x2418,0x2418,0x2418,0x2418,
0x2418,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x241f,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x9404,0x900e,0x900e,0x900e,0x900e,0x900e,0x900e,0x0,0x0,
0x0,0x0,0x900e,0x900e,0x900e,0x900e,0x900e,0x900e,0x0,0x900e,0x900e,0x900e,
0x0,0x2c28,0x0,0x0,0x0,0x0,0x0,0x2c28,0x2c28,0x2c28,0x2c28,0x2c28,
0x2c28,0x0,0x0,0x0,
0x0,0x0,0x9013,0x9013,0x9013,0x0,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,
0x9013,0x9013,0x9013,0x9013,0x9013,0x2c29,0x2c29,0x9013,0x9013,0x9013,0x9013,0x9013,
0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,
0x9013,0x9013,0x9013,0x9013,
0x0,0x0,0x0,0x9404,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,
0x0,0x0,0x9013,0x9013,0x9013,0x0,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,
0x9013,0x9013,0x9013,0x9013,0x9013,0x9c13,0x9c13,0x9013,0x9013,0x9013,0x9013,0x9013,
0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,0x9013,
0x9013,0x9013,0x9013,0x9013,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x242b,0x0,0x0,0x0,0x0,0x0,0x242b,0x242b,0x242b,0x242b,0x242b,
0x242b,0x0,0x0,0x0,
0x0,0x0,0x0,0x9411,0x900e,0x900e,0x900e,0x900e,0x0,0x900e,0x900e,0x900e,
0x0,0x0,0x0,0x900e,0x0,0x0,0x0,0x0,0x0,0x900e,0x0,0x0,
0x900e,0x2c22,0x900e,0x0,0x900e,0x900e,0x2c2c,0x2c22,0x2c22,0x2c22,0x2c22,0x2c22,
0x2c22,0x900e,0x900e,0x900e,
0x0,0x0,0x0,0x242d,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x242e,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x242d,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x2c22,0x0,0x0,0x0,0x0,0x0,0x2c22,0x2c22,0x2c22,0x2c22,0x2c22,
0x2c22,0x0,0x0,0x0,
};
static SXSTMI *S_transition_matrix[]={NULL,
&SXS_transition[0],
&SXS_transition[40],
&SXS_transition[80],
&SXS_transition[120],
&SXS_transition[160],
&SXS_transition[200],
&SXS_transition[240],
&SXS_transition[280],
&SXS_transition[320],
&SXS_transition[360],
&SXS_transition[400],
&SXS_transition[440],
&SXS_transition[480],
&SXS_transition[520],
&SXS_transition[560],
&SXS_transition[600],
&SXS_transition[640],
&SXS_transition[680],
&SXS_transition[720],
&SXS_transition[760],
&SXS_transition[800],
&SXS_transition[840],
&SXS_transition[880],
&SXS_transition[920],
&SXS_transition[960],
&SXS_transition[1000],
&SXS_transition[1040],
&SXS_transition[1080],
&SXS_transition[1120],
&SXS_transition[1160],
&SXS_transition[1200],
&SXS_transition[1240],
&SXS_transition[1280],
&SXS_transition[1320],
&SXS_transition[1360],
&SXS_transition[1400],
&SXS_transition[1440],
&SXS_transition[1480],
&SXS_transition[1520],
&SXS_transition[1560],
&SXS_transition[1600],
&SXS_transition[1640],
&SXS_transition[1680],
&SXS_transition[1720],
&SXS_transition[1760],
&SXS_transition[1800],
};
static struct SXS_action_or_prdct_code SXS_action_or_prdct_code[]={{0,0,0,0,0},
{0x2c21,10,0,1,0},
{0x2c23,10,0,1,0},
{0x3004,7,0,1,0},
{0x2020,1,0,0,0},
{0x2c27,10,0,1,0},
{0x200c,9,8,1,0},
{0x200c,9,12,1,0},
{0x200c,9,10,1,0},
{0x200c,9,13,1,0},
{0x200c,9,9,1,0},
{0x200c,9,11,1,0},
{0x4011,7,0,1,0},
{0x300d,7,0,1,0},
{0x3000,7,0,1,0},
{0x2024,1,0,0,0},
{0x2c12,5,0,1,0},
{0x202a,1,0,0,0},
{0x2c17,5,0,1,0},
{0x200c,2,0,0,0},
};
static char *S_adrp[]={0,
"CLASSES",
";",
"=",
"%IDENTIFIER",
"+",
"-",
"(",
")",
"..",
"%STRING_LITERAL",
"%OCTAL_CODE",
"ABBREVIATIONS",
"%PREDICATE_NAME",
"|",
"^",
"TOKENS",
"%GENERIC_NAME",
"EOF",
"COMMENTS",
"INCLUDE",
"UNION",
"END",
":",
"%ACTION_NO",
"ALL",
",",
"BUT",
"PRIORITY",
"REDUCE",
">",
"SHIFT",
"CONTEXT",
"UNBOUNDED",
".",
"[",
"]",
"{",
"}",
"*",
"@UPPER_CASE",
"@LOWER_CASE",
"@LOWER_TO_UPPER",
"@UPPER_TO_LOWER",
"@ERASE",
"@SET",
"%INTEGER_NUMBER",
"@RESET",
"@INCR",
"@DECR",
"@PUT",
"@MARK",
"@RELEASE",
"&TRUE",
"&FALSE",
"%PREDICATE_NO",
"&IS_FIRST_COL",
"&IS_LAST_COL",
"&IS_SET",
"&IS_RESET",
"SYNONYMS",
"FOR",
"INTERNAL",
"CODE",
"USE",
"BYTE",
"BITS",
"WORD",
"UNUSED",
"End Of File",
"END_OF_FILE",
};
static SXINT S_syno[]={0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,70,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,};
static SXINT S_is_a_keyword[]={
42,1,12,16,18,19,20,21,22,25,27,28,29,31,32,33,40,41,42,43,44,45,47,48,49,50,51,52,53,54,56,57,58,59,60,61,62,63,64,65,66,67,68};
static SXINT S_is_a_generic_terminal[]={
8,4,10,11,13,17,24,46,55};
static SXINT S_lrgl[]={
4,1,2,3,4,0,
5,-1,1,2,3,4,
5,-1,0,1,2,3,
};
static SXINT *S_lregle[]={NULL,
&S_lrgl[0],
&S_lrgl[6],
&S_lrgl[12],
};
static SXINT S_param_ref[]={
0,
0,-1,
-1,0,
};
static struct SXS_local_mess SXS_local_mess[]={{0,NULL,NULL},
{1,"%sThe invalid character \"%s\" is deleted.",&S_param_ref[0]},
{2,"%sThe invalid character \"%s\" is replaced by \"%s\".",&S_param_ref[1]},
{2,"%sThe character \"%s\" is inserted before \"%s\".",&S_param_ref[3]},
};
static SXINT S_no_delete[]={
0};
static SXINT S_no_insert[]={
0};
static char *S_global_mess[]={0,
"%s\"%s\" is deleted.",
"%sThis unknown keyword is erased.",
"End Of Line",
"End Of File",
"%sScanning stops on End Of File.",
};
extern SXINT SCANACT(SXINT what, SXINT act_no);
extern SXINT sxscan_it(void);
extern SXBOOLEAN sxsrecovery (SXINT sxsrecovery_what, SXINT state_no, unsigned char *class);
static SXINT check_keyword(char *init_string, SXINT init_length);
static struct SXT_node_info SXT_node_info[]={{0,0},
{67,1},{93,6},{0,6},{0,7},{12,9},{10,10},{11,12},{58,13},{52,15},{0,17},{0,18},{0,19},
{0,20},{0,21},{80,22},{33,24},{81,25},{56,26},{93,27},{0,27},{0,28},{5,30},{2,31},{2,33},
{4,35},{3,36},{61,37},{63,38},{0,40},{60,41},{0,43},{31,44},{64,45},{0,46},{62,47},{93,48},
{0,48},{0,49},{87,51},{84,52},{84,54},{85,56},{48,58},{48,59},{48,60},{29,61},{14,61},{36,61},
{0,61},{0,62},{0,63},{0,64},{16,66},{15,67},{15,69},{17,71},{18,73},{0,74},{28,76},{0,77},
{59,78},{0,79},{0,80},{46,81},{46,84},{0,87},{0,88},{93,89},{93,89},{0,89},{54,91},{45,92},
{47,93},{47,94},{0,95},{0,96},{66,98},{69,99},{70,99},{79,99},{93,99},{21,99},{76,100},{76,101},
{89,102},{90,103},{90,104},{0,105},{86,107},{20,108},{20,110},{22,112},{23,112},{24,112},{25,112},{25,113},
{25,114},{19,115},{72,116},{8,117},{0,119},{77,120},{0,122},{30,123},{0,124},{31,125},{57,126},{71,127},
{71,128},{71,129},{88,130},{88,131},{0,132},{0,133},{32,134},{0,136},{53,137},{0,138},{7,139},{91,140},
{49,140},{50,140},{92,140},{6,140},{78,140},{75,141},{37,142},{26,143},{68,144},{51,145},{73,145},{64,145},
{0,146},{0,147},{44,148},{39,148},{65,148},{40,149},{41,149},{43,149},{42,150},{93,151},{0,151},{0,152},
{83,154},{0,155},{27,157},{35,159},{82,160},{93,161},{0,161},{0,162},{74,164},{0,165},{0,166},{0,167},
{0,168},{9,169},{94,170},{0,171},{13,173},{0,174},{55,175},{38,175},{0,176},};
static SXINT T_ter_to_node_name[]={
0,0,0,0,34,};
static char *T_node_name[]={NULL,
"ERROR",
"ABBREVIATION",
"ABBREVIATION_PRDCT_NAME",
"ABBREVIATION_RE_NAME",
"ABBREVIATION_S",
"ACTION_ERASE",
"ACTION_NO",
"ALTERNATIVE",
"BYTE_LENGTH",
"CLASS",
"CLASS_NAME",
"CLASS_S",
"COLLATING_S",
"COMMENTS",
"COMPONENT",
"COMPONENTS_S",
"COMPONENT_DEF",
"COMPONENT_NAME_DEF",
"COMPONENT_NAME_REF",
"COMPONENT_REF",
"CONTEXT",
"CONTEXT_COMMENTS",
"CONTEXT_EOF",
"CONTEXT_INCLUDE",
"CONTEXT_NAME",
"DECR",
"DENOTATION_S",
"ENVIRONMENT_S",
"EOF",
"ERASE",
"EXPRESSION",
"EXTENDED_CLASS_REF",
"ID",
"IDENTIFIER",
"ID_DENOTATION",
"INCLUDE",
"INCR",
"INTEGER_NUMBER",
"IS_FALSE",
"IS_FIRST_COL",
"IS_LAST_COL",
"IS_RESET",
"IS_SET",
"IS_TRUE",
"KEYWORDS",
"KEYWORDS_SPEC",
"KEYWORD_NAME",
"LEXICAL_UNIT_NAME",
"LOWER_CASE",
"LOWER_TO_UPPER",
"MARK",
"MINUS",
"NOT",
"NOT_KEYWORDS",
"NO_SPECIFIED",
"OCTAL_CODE",
"OPTION",
"PLUS",
"POST_ACTION",
"PRDCT_ET",
"PRDCT_EXPRESSION",
"PRDCT_NOT",
"PRDCT_OR",
"PREDICATE_NAME",
"PREDICATE_NO",
"PRIORITY_KIND_S",
"PROGRAM_ROOT_LECL",
"PUT",
"REDUCE_REDUCE",
"REDUCE_SHIFT",
"REF_TRANS_CLOSURE",
"REGULAR_EXPRESSION",
"RELEASE",
"REPR_SPEC_S",
"RESET",
"RESTRICTED_CONTEXT",
"SEQUENCE",
"SET",
"SHIFT_REDUCE",
"SLICE",
"STRING",
"STRING_DENOTATION",
"SYNONYM_S",
"TOKEN",
"TOKEN_DEF",
"TOKEN_REF_S",
"TOKEN_S",
"TRANS_CLOSURE",
"UNBOUNDED_CONTEXT",
"UNBOUNDED_RESTRICTED_CONTEXT",
"UPPER_CASE",
"UPPER_TO_LOWER",
"VOID",
"WORD_LENGTH",
};
extern SXINT sempass(SXINT what, struct sxtables *sxtables_ptr);
static char T_stack_schema[]={0,
0,1,2,3,4,1,0,2,0,0,2,0,0,2,0,2,0,1,0,0,0,0,2,0,0,
0,1,0,2,0,0,2,0,2,0,0,0,0,2,0,0,1,0,1,0,0,0,0,0,1,
0,0,2,0,2,0,2,0,0,0,0,0,1,0,1,0,0,2,0,2,0,2,0,1,2,
1,0,0,0,0,0,1,2,0,1,2,0,0,0,2,0,0,0,0,0,0,2,0,0,0,
0,0,0,0,0,2,0,0,1,0,2,0,0,0,0,0,0,2,0,0,1,0,0,0,1,
1,1,2,2,2,2,0,0,0,1,0,0,0,0,1,1,1,1,1,0,0,0,0,1,1,
1,0,2,0,0,2,0,2,0,0,1,0,2,0,0,0,0,0,1,1,0,2,0,0,1,
0,};

static struct SXT_tables SXT_tables=
{SXT_node_info, T_ter_to_node_name, T_stack_schema, sempass, T_node_name};
extern SXINT sxscanner(SXINT what_to_do, struct sxtables *arg);
extern SXINT sxparser(SXINT what_to_do, struct sxtables *arg);
extern SXINT sxatc(SXINT sxatc_what, ...);

struct sxtables sxtables={
52113, /* magic */
{sxscanner,(PARSER_T) sxparser}, {255, 69, 1, 3, 4, 40, 0, 46, 1, 1, 0, 
S_is_a_keyword,S_is_a_generic_terminal,S_transition_matrix,
SXS_action_or_prdct_code,
S_adrp,
S_syno,
SXS_local_mess,
S_char_to_simple_class+128,
S_no_delete,
S_no_insert,
S_global_mess,
S_lregle,
(SCANACT_T) SCANACT,
(RECOVERY_T) sxsrecovery,
check_keyword,
},
{41, 144, 158, 199, 221, 297, 354, 517, 69, 69, 164, 164, 139, 64, 0, 11, 4, 7, 2, 5, 11, 2, 6,
reductions,
t_bases,
nt_bases,
vector-354,
SXPBM_trans,
prdcts-145,
NULL,
NULL,
P_lregle,
P_right_ctxt_head,
SXP_local_mess,
P_no_delete,
P_no_insert,
P_global_mess,PER_tset,sxscan_it,(RECOVERY_T) sxprecovery,
(PARSER_T) PARSACT,
NULL,
sxatc},
err_titles,
abstract,
(sxsem_tables*)&SXT_tables,
NULL,
};

#include	"sxdico.h"

#define KW_NB		43
#define INIT_BASE	1
#define INIT_SUFFIX	0
#define CLASS_MASK	31
#define STOP_MASK	32
#define BASE_SHIFT	7
#define SUFFIX_MASK	64

#define SYNO
#define EOF_CODE	69
static SXINT syno2t_code [1] = {
18, 
};

static SXINT kw_code2t_code [44] = {0,
68, 67, 66, 65, 64, 63, 62, 61, 60, 59, 58, 57, 56, 54, 53, 
52, 51, 50, 49, 48, 47, 45, 44, 43, 42, 41, 40, 33, 32, 31, 29, 
28, 27, 25, 22, 21, 20, 19, 18, 16, 12, 1, 70, 
};

static SXINT kw_code2lgth [44] = {0,
6, 4, 4, 4, 3, 4, 8, 3, 8, 9, 7, 12, 13, 6, 5, 
8, 5, 4, 5, 5, 6, 4, 6, 15, 15, 11, 11, 9, 7, 5, 6, 
8, 3, 3, 3, 5, 7, 8, 3, 6, 13, 7, 11, 
};

static SXUINT comb_vector [80] = {
0, 0, 4993, 1058, 963, 1698, 5765, 1572, 5159, 
4008, 2185, 932, 4811, 7045, 4141, 4302, 2575, 2960, 4779, 
3538, 2595, 5444, 2853, 310, 4388, 5704, 419, 2474, 2987, 
2220, 2349, 5326, 6917, 174, 3751, 3632, 5296, 4270, 811, 
5026, 561, 1826, 6851, 5514, 683, 7301, 1959, 4522, 5547, 
3112, 3240, 2727, 3499, 3371, 4661, 2091, 1445, 5124, 5412, 
1320, 1031, 6534, 1201, 390, 2453, 3892, 0, 0, 0, 
0, 0, 0, 0, 4915, 0, 0, 0, 0, 0, 
0, 
};

static unsigned char char2class [256] = {
'\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\001', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\t', '\017', '\020', '\022', '\n', '\013', '\002', 
'\000', '\024', '\003', '\000', '\000', '\004', '\f', '\025', 
'\023', '\r', '\000', '\b', '\005', '\007', '\016', '\000', 
'\026', '\000', '\021', '\000', '\000', '\000', '\000', '\000', 
'\006', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', 
};

#include	"sxcheck_keyword.h"

/* End of sxtables for lecl [Fri Jun 11 10:54:41 2004] */
