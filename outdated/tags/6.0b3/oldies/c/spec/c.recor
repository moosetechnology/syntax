Titles
	"",
	"Warning:\t",
	"Error:\t";

Scanner
	Local
		X 0 1 2 3 ; "A character \""%0"\" is inserted before \""$0"\".";
		1 2 3 4	; "The invalid character \""$0"\" is erased.";
		X 1 2 3 4 ; "The invalid character \""$0"\" is replaced by \""%0"\".";

		Dont_Delete = {};
		Dont_Insert = {#000..#037, "*", "/", "_"};

	Global
		Detection     : "\"%s\" is deleted.";
		-- parameter: character in error
		Keyword	      : "This unknown keyword is erased.";
		Eol	      : "\\n";
		Eof	      : "EOF";
		-- The "character"
		Halt	      : "Lexical analysis stops on EOF.";

Parser
	Local
		0 S 2	      ; "Misspelling of \"" $1
		     "\" which is replaced by the keyword \"" %1 "\".";
		S 1	      ; "Misspelling of \"" $0 "\" before \"" $1
		     "\" which is replaced by the keyword \"" %0 "\".";
		0 X 1 2 3     ; "\"" %1 "\" is inserted before \"" $1 "\".";
		0 X 2 3 4     ; "\"" $1 "\" is replaced by \"" %1 "\".";
		0 2 3 4	      ; "\"" $1 "\" is deleted.";
		0 X X 1 2 3 4 ; "\"" %1 " " %2 "\" is inserted before \"" $1
		     "\".";
		X 0 1 2 3     ; "\"" %0 "\" is inserted before \"" $0 " " $1
		     "\".";
		X 1 2 3 4     ; "\"" $0 "\" before \"" $1
		     "\" is replaced by \"" %0 "\".";
		1 2 3 4	      ; "\"" $0 "\" before \"" $1 "\" is deleted.";
		X 2 3 4	      ; "\"" $0 " " $1 "\" is replaced by \"" %0 "\".";
		X X 1 2 3     ; "\"" $0 "\" before \"" $1
		     "\" is replaced by \"" %0 " " %1 "\".";

		Dont_Delete = {"case", "default", "do", "else", "enum", "for", "if", "sizeof", "struct", "switch", "union", "while"};
		Dont_Insert = {"auto", "case", "char", "do", "double", "else", "enum", "extern", "float", "for", "goto", "if", "long", "register", "return", "short", "sizeof", "switch", "unsigned", "void", "while", "%integer_constant", "%floating_constant", "%character_constant", "%string_literal", "/", "%", "==", "!=", "--", "++", "<", "<=", ">", ">=", "<<", ">>", ".", "->", "!", "~", "-", "*", "&", "|", "^", "&&", "||", "?", "=", "(", "{", "[", "*"};

	Forced_Insertion
		"\"" %0 "\" is forced before \"" $1 "\"." ;

	Global
		Key_Terminals = {";", "{", "}", ",", "else"};
		Validation_Length = 2;
		Followers_Number <= 5
			      : "\"%s\"^(, \"%s\"^) is expected";
		-- parameters: array (1:Followers_Number) of valid followers at detection point
		Detection     : "Global recovery.";
		-- parameters: none
		Restarting    : "Parsing resumes on \"%s\"";
		-- parameters: array (1:Validation_Length) of valid followers at restarting point
		Eof	      : "EOF";
		-- The "token"
		Halt	      : "Parsing stops on EOF.";
		-- parameters: none

Abstract
	"%d errors and %d warnings are reported.";
	-- parameters: array (1:Titles_No) of number of messages
