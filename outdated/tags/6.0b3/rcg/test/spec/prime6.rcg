%
% Est-t-il possible de definir les nombres premiers uniquement a` l'aide d'une Positive RCG ?
% Si ce n'est pas possible, on a montre' que les (Negative) RCG sont + puissantes que les PRCG
% Que penser du theoreme :
% n est premier ssi (n-1)!+1 est egal a 0 modulo n.
%



%
% L = {w | |w| is a prime et w \in T^*}
%
% Temps d'analyse n log n (theorique et pratique)
% La verif que a^82003 est premier prend 1s sur ma SS10
% La verif que a^83371 n'est pas premier (263*317) prend aussi 1s
%

%
% Version avec &Cut de prime5
% On utilise les predicats utilisateur externes &Set_OK et Is_OK
% Doit etre compile avec l'option -increase_order
%

%
% L'utilisation en externe se fait par &Prime
%

S(\a\b\c)		--> &False() . % sert uniquement a definir l'ensemble T
S(X)			--> &Prime(X) .

&Prime(X)		--> !NotPrime(X) .

NotPrime(X Y)		--> Xgeq5(X) !times(X) check(X, X, X Y) &Cut(X) &Is_OK(X) .
NotPrime(X)		--> times(X) . % Multiples of 2, 3 ... are not primes

times(X Y Z)		--> !&StrLen(1,X) &StrEqLen (X, Y) &StrEqLen (X, Z) .
times(X Y)		--> !&StrLen(1,X) &StrEqLen (X, Y) .

Xgeq5(X1 X2)		--> &StrLen (5, X1) .

% Check(X,Y,Z) est vrai si |Z|-|X||Y| est un multiple de |X| (non premier)
% ou si |X||Y| > |Z| (On a depasse la racine carree)
check(X, Y1 Y2, Z1 Z2)	--> &StrLen(1, Y2) &StrEqLen(X, Z2) check(X, Y1, Z1) .
check(X1 X2, Y, Z)	--> &StrEqLen (X1, Z) !&StrLen(0,Y) !&StrLen(0, X2) .
check(X, , Z)		--> Mul(X, Z) .

Mul(X, Y1 Y2)		--> &StrEqLen (X, Y2) Mul(X, Y1) .
Mul(X,)			--> &Set_OK(X) .


