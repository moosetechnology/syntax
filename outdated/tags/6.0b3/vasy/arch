#! /bin/sh

# CADP (CONSTRUCTION AND ANALYSIS OF DISTRIBUTED PROCESSES)
# http://www.inrialpes.fr/vasy/cadp

# arch version 1.14 -- date 07/07/11 09:40:09 -- Hubert Garavel

PATH="/bin:$PATH" ; export PATH

# checking the correctness of $CADP_BITS

case "$CADP_BITS" in
	"" | 32 | 64 ) 
		# all these values are acceptable
		;;
	* )
		echo "Variable \`\`\$CADP_BITS'' should be set to 32 or 64"
		exit 1 ;;
esac

# determining the architecture (machine type and operating system)

case `uname -m`-`uname -s`-`uname -r` in
	sun3-SunOS-4.* )
		echo "sun3" ;;
	sun4*-SunOS-4.* )
		echo "sun4" ;;
	sun4*-SunOS-5.* )
		case "$CADP_BITS" in
			"" | 32 )
				echo "sun5" ;;
			64 )
				echo "sun64" ;;
		esac
		;;
	i[3456]86-Linux-* )
		# Processeur Intel ou AMD 32 bits / Linux
		if test "$1" = "-detailed"
		then
			echo "iX86"
		else
			echo "iX86"
		fi
		;;
	x86_64-Linux-* )
		# Processeur Intel EM64T ou AMD64 / Linux
		case "$CADP_BITS" in
			"" | 32 )
				if test "$1" = "-detailed"
				then
					echo "iX86-amd64"
				else
					echo "iX86"
				fi
				;;
			64 )
				echo "x64" ;;
		esac
		;;
	ia64-Linux-* )
		# Processeur Intel Itanium 64 bits / Linux
		echo "ia64"
		;;
	RISC-ULTRIX-* ) 
		echo "dec5000" ;;
	i[3456]86-CYGWIN*-* )
	  	# Solution BASH de Cygnus 
		if test "$1" = "-detailed"
		then
			echo "win32-cygnus"
		else
			echo "win32"
		fi
		;;
	[3456]86-Windows*-* )
	  	# Solution KSH de MKS Toolkit
		if test "$1" = "-detailed"
		then
			echo "win32-mks"
		else
			echo "win32"
		fi
		;;
	i[3456]86-UWIN*-* )
	 	# Solution KSH de UWin
		if test "$1" = "-detailed"
		then
			echo "win32-uwin"
		else
			echo "win32"
		fi
		;;
	*-Windows*-* )
	  	# Solution KSH ou CSH de INTERIX
		if test "$1" = "-detailed"
		then
			echo "win32-interix"
		else
			echo "win32"
		fi
		;;
	Power?Macintosh-Darwin-[56789].* )
		# MacOS X PowerPC (a partir de 10.1.5)
		echo "macOS"
		;;
	i[3456]86-Darwin-[789].* )
		# MacOS X Intel (a partir de 10.3)
		echo "mac86"
		
		# sur un Intel Core 2 Duo - Mac OS 10.4, le processeur et le
		# système d'exploitation gèrent le 64 bits (il est possible de
		# produire des binaires 64 bits), mais la commande 'uname -m'
		# renvoie 'i386'
		;;
	* )
		echo "UNKNOWN ARCHITECTURE"
		exit 1 ;;
esac
exit 0

