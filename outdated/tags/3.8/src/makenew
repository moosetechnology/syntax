
SX=c:\sx
SRC=$(SX)\src
LIB=$(SX)\lib
BIB=$(SX)\sx$(sxV).lib
INCL=$(SX)\incl

CC=msc /Zi /AL

$(LIB)\dbaction.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\dbaction.c
	$(CC) $(SRC)\dbaction,$@;
	lib $(BIB)-+$@;

$(LIB)\by_tree.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\by_tree.c
	$(CC) $(SRC)\by_tree,$@;
	lib $(BIB)-+$@;

$(LIB)\sxnumarg.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxnumarg.c
	$(CC) $(SRC)\sxnumarg,$@;
	lib $(BIB)-+$@;

$(LIB)\sxatc.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxatc.c
	$(CC) $(SRC)\sxatc,$@;
	lib $(BIB)-+$@;

$(LIB)\sxatcpp.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxatcpp.c
	$(CC) $(SRC)\sxatcpp,$@;
	lib $(BIB)-+$@;

$(LIB)\sxatedit.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxatedit.c
	$(CC) $(SRC)\sxatedit,$@;
	lib $(BIB)-+$@;

$(LIB)\at_mngr.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\at_mngr.c
	$(CC) $(SRC)\at_mngr,$@;
	lib $(BIB)-+$@;

$(LIB)\sxsmp.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxsmp.c
	$(CC) $(SRC)\sxsmp,$@;
	lib $(BIB)-+$@;

$(LIB)\01array.obj:	\
			$(INCL)\sxunix.h	\
			$(SRC)\sxba.h		\
			$(SX)\forcemak 	\
			$(SRC)\01array.c
	$(CC) $(SRC)\01array,$@;
	lib $(BIB)-+$@;

$(LIB)\ba_write.obj:	\
			$(INCL)\sxunix.h	\
			$(SRC)\sxba.h		\
			$(SX)\forcemak 	\
			$(SRC)\ba_write.c
	$(CC) $(SRC)\ba_write,$@;
	lib $(BIB)-+$@;

$(LIB)\ba_read.obj:	\
			$(INCL)\sxunix.h	\
			$(SRC)\sxba.h		\
			$(SX)\forcemak 	\
			$(SRC)\ba_read.c
	$(CC) $(SRC)\ba_read,$@;
	lib $(BIB)-+$@;

$(LIB)\sxba_ops.obj:	\
			$(INCL)\sxunix.h	\
			$(SRC)\sxba.h		\
			$(SX)\forcemak 	\
			$(SRC)\sxba_ops.c
	$(CC) $(SRC)\sxba_ops,$@;
	lib $(BIB)-+$@;

$(LIB)\ba_ops2.obj:	\
			$(INCL)\sxunix.h	\
			$(SRC)\sxba.h		\
			$(SX)\forcemak 	\
			$(SRC)\ba_ops2.c
	$(CC) $(SRC)\ba_ops2,$@;
	lib $(BIB)-+$@;

$(LIB)\01matrix.obj:	\
			$(INCL)\sxunix.h	\
			$(SRC)\sxba.h		\
			$(SX)\forcemak 	\
			$(SRC)\01matrix.c
	$(CC) $(SRC)\01matrix,$@;
	lib $(BIB)-+$@;

$(LIB)\c_to_str.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\c_to_str.c
	$(CC) $(SRC)\c_to_str,$@;
	lib $(BIB)-+$@;

$(LIB)\chkmagic.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\chkmagic.c
	$(CC) $(SRC)\chkmagic,$@;
	lib $(BIB)-+$@;

$(LIB)\sxexit.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxexit.c
	$(CC) $(SRC)\sxexit,$@;
	lib $(BIB)-+$@;

$(LIB)\err_mngr.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\err_mngr.c
	$(CC) $(SRC)\err_mngr,$@;
	lib $(BIB)-+$@;

$(LIB)\sxperror.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxperror.c
	$(CC) $(SRC)\sxperror,$@;
	lib $(BIB)-+$@;

$(LIB)\sxs_rcvr.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxs_rcvr.c
	$(CC) $(SRC)\sxs_rcvr,$@;
	lib $(BIB)-+$@;

$(LIB)\s_srcvr.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\s_srcvr.c
	$(CC) $(SRC)\s_srcvr,$@;
	lib $(BIB)-+$@;

$(LIB)\sxp_rcvr.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxp_rcvr.c
	$(CC) $(SRC)\sxp_rcvr,$@;
	lib $(BIB)-+$@;

$(LIB)\p_srcvr.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\p_srcvr.c
	$(CC) $(SRC)\p_srcvr,$@;
	lib $(BIB)-+$@;

$(LIB)\sxgetbit.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxgetbit.c
	$(CC) $(SRC)\sxgetbit,$@;
	lib $(BIB)-+$@;

$(LIB)\listout.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\listout.c
	$(CC) $(SRC)\listout,$@;
	lib $(BIB)-+$@;

$(LIB)\mem_mngr.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\mem_mngr.c
	$(CC) $(SRC)\mem_mngr,$@;
	lib $(BIB)-+$@;

$(LIB)\sxgc.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxgc.c
	$(CC) $(SRC)\sxgc,$@;
	lib $(BIB)-+$@;

$(LIB)\sxppp.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxppp.c
	$(CC) $(SRC)\sxppp,$@;
	lib $(BIB)-+$@;

$(LIB)\sxpptree.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxpptree.c
	$(CC) $(SRC)\sxpptree,$@;
	lib $(BIB)-+$@;

$(LIB)\sxparser.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxparser.c
	$(CC) $(SRC)\sxparser,$@;
	lib $(BIB)-+$@;

$(LIB)\sxpascal.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxpascal.c
	$(CC) $(SRC)\sxpascal,$@;
	lib $(BIB)-+$@;

$(LIB)\scanner.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\scanner.c
	$(CC) $(SRC)\scanner,$@;
	lib $(BIB)-+$@;

$(LIB)\src_mngr.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\src_mngr.c
	$(CC) $(SRC)\src_mngr,$@;
	lib $(BIB)-+$@;

$(LIB)\incmngr.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\incmngr.c
	$(CC) $(SRC)\incmngr,$@;
	lib $(BIB)-+$@;

$(LIB)\str_mngr.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\str_mngr.c
	$(CC) $(SRC)\str_mngr,$@;
	lib $(BIB)-+$@;

$(LIB)\str_rtrv.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\str_rtrv.c
	$(CC) $(SRC)\str_rtrv,$@;
	lib $(BIB)-+$@;

$(LIB)\opentty.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\opentty.c
	$(CC) $(SRC)\opentty,$@;
	lib $(BIB)-+$@;

$(LIB)\sxsyntax.obj:	\
			$(INCL)\sxunix.h	\
			$(SX)\forcemak 	\
			$(SRC)\sxsyntax.c
	$(CC) $(SRC)\sxsyntax,$@;
	lib $(BIB)-+$@;

