Classes

	Any		= #000..#377 ;
-- Lettres majuscules accentuées
	FUPPER		= UPPER + "ÀÂÉÈÊËÎÏÔÙÛÜÇ" ;
-- Lettres minuscules accentuées
	FLOWER		= LOWER + "àâéèêëîïôùûüç" ;
-- Lettres accentuées
	FLETTER		= FUPPER + FLOWER ;

Abbreviations

	comment_body	= "%"&True {^EOL} EOL |
			  "/" "*"&True {Any} "*" "/"&True ;

	string		= -QUOTE&True {^QUOTE | -"\\"&True Any}+ -QUOTE ;

-- Les parties prolog "{...}" sont considérées ici comme des commentaires
	prolog		= -( "{"&True
				{ "{" @Incr(1) |
				  "}" @Decr(1) |
			          comment_body |
				  string |
				  "\\"&True Any |
				  ^"{}"
				}
			   "}"&Is_Reset(1) ) ;

-- Les termes logiques éventuels "(...)" associés à un prédicat "prdct(,  ,)" suivent ce prédicat
-- et sont considérés ici comme des commentaires
	definite	= -( "("&Is_Set(0)
				{ "(" @Incr(1) |
				  ")" @Decr(1) |
			          comment_body |
				  string |
				  "\\"&True Any |
				  ^"()"
				}
			   ")"&Is_Reset(1) ) @Reset(0) ;

	predicate	= LETTER &Is_Reset(2) {"_"&True | LETTER&True | DIGIT&True} @Reset(0) ;

--	&Cond1		= &Is_Reset(0) &Is_Reset(2) &Is_Reset(3) ;
--	&Cond2		= &Is_Reset(0) &Is_Set(2) &Is_Reset(3) ;
--	&Cond3		= &Is_Reset(0) &Is_Set(2) &Is_Set(3) ;
	
Tokens

	Comments	= -{SP | HT | VT | FF | EOL | comment_body | prolog | definite}+ ;
			Priority Shift>Reduce ;
			Context All But Comments ;

	%internal_predicate
			= predicate ;
-- Les prédicats prédéfinis ne sont pas reconnus par cette expression régulière
-- Un prédicat interne peut s'appeler streq, il est sensible à la casse
			Not Keyword All ;

-- Les prédicats externes sont précédés par "&"
-- Les prédicats prédéfinis sont des prédicats externes
	%external_predicate
			= -"&"&Is_Reset(2) predicate ;
-- Les prédicats prédéfinis sont reconnus par cette expression régulière
			Keyword "streq", "streqlen", "strlen", "first", "last", "false", "cut" , "true", "lex";
			@1 ;
-- @1 : les prédicats prédéfinis sont insensibles à la casse.
--      Les autres, internes ou externes y sont sensibles


	"("		= -"("&Is_Reset(0) @Set(2) ;
	")"		= -")"&Is_Reset(0) @Set(0) @Reset(2) ;
	"-->"		= ("-" "-" ">" | "=") @Erase ;
	"."		= -".;" ;
	"!"		= "-!" @Erase ;

	%variable	= FUPPER &Is_Set(2) {"_"&True | FLETTER&True | DIGIT&True} ;

	%terminal	= -QUOTE {^QUOTE | -"\\"&True Any}* -QUOTE -- The empty string denotes eof in &First and &Last
			  | -"\\"&True Any
			  | FLOWER &Is_Set(2) {"_"&True | FLETTER&True | DIGIT&True}
			  | DIGIT &Is_Set(2) {DIGIT&True}
			  ;
-- Les prédicats prédéfinis ne sont pas reconnus par cette expression régulière
-- Un terminal peut s'appeler streq
			Not Keyword All ;

-- Les actions externes sont précédées par "@"
	%external_action
			= -"@"&Is_Reset(2) predicate ;


-- %variable_predicate ne doit pas dependre de (2)
--	%variable_predicate	= -"$" LETTER {"_"&True | LETTER&True | DIGIT&True} @Reset(0) ;

-- %argument_predicate ne peut se trouver qu'en position "argument"
--	%argument_predicate	= -"#"&Is_Set(2) LETTER {"_"&True | LETTER&True | DIGIT&True} ;

--	"("			= -"("&Cond1 @Set(2) 		-- "(" externe
--				| -"("&Cond2 @Set(3)		-- "(" 2eme
--				| -"("&Cond3 @Incr(3)		-- "(" 3eme, 4eme ...
--				;

--	")"			= -")"&Cond2 @Reset(2) @Set(0)	-- ")" externe
--				| -")"&Cond3 @Decr(3)		-- ")" interne
--				;

