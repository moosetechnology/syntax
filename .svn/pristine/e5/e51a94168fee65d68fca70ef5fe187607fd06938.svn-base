/* Beginning of sxtables for ysx [Thu Mar  6 12:56:27 2008] */
#define SXP_MAX 103
#include "sxunix.h"
#include "sxba.h"
static struct SXP_reductions reductions[]={{0,0,0,0},
{2, 5, 1, -41},
{6, 26, 0, -42},
{6, 16, 0, 82},
{1, 1, 3, -62},
{2, 27, 1, -42},
{2, 17, 1, 82},
{2, 18, 2, 82},
{6, 4, 0, -41},
{0, 0, 2, -62},
{5, 7, 0, -1},
{5, 8, 0, -1},
{5, 6, 1, -1},
{5, 2, 0, -4},
{1, 3, 0, -4},
{5, 21, 1, 85},
{5, 19, 1, 85},
{5, 22, 1, 85},
{5, 20, 1, 85},
{1, 9, 2, -1},
{1, 10, 2, -1},
{1, 11, 2, -1},
{1, 12, 2, -1},
{6, 23, 0, -63},
{6, 31, 0, 88},
{5, 15, 2, 83},
{1, 13, 3, -1},
{2, 24, 1, -63},
{1, 14, 3, -1},
{2, 32, 1, 88},
{2, 33, 1, 88},
{2, 34, 1, 88},
{1, 35, 0, 89},
{2, 25, 2, -63},
{0, 40, 1, 89},
{1, 28, 4, 86},
{1, 30, 3, -5},
{1, 38, 2, 89},
{5, 36, 2, 89},
{1, 39, 2, 89},
{5, 37, 2, 89},
};
static struct SXP_bases t_bases[]={{0,0,0},
{0, 77, 0},
{-14, 90, 0},
{-19, 85, 88},
{0, 23, 3},
{-32, 91, 0},
{0, 67, 16},
{0, 85, 0},
{0, 85, 87},
{0, 70, 11},
{-24, 0, 0},
{-8, 0, 0},
{-20, 85, 88},
{-21, 85, 88},
{-22, 85, 88},
{0, 85, 0},
{-26, 85, 88},
{-32, 91, 0},
{0, 85, 0},
{0, 85, 0},
{-24, 0, 0},
{0, 85, 0},
{0, -9, 22},
{-28, 89, 0},
{-35, 34, 21},
{-36, 34, 21},
{0, 12, 3},
{0, 50, 17},
{-16, 15, 15},
{-18, 17, 15},
{0, 71, 3},
{0, 25, 12},
{0, 33, 3},
{0, 86, 0},
{-38, 37, 19},
{-40, 39, 19},
{0, 51, 22},
};
static struct SXP_bases nt_bases[]={{0,0,0},
{-1, 0, 0},
{-5, -4, 4},
{-6, 0, 0},
{-63, 0, 0},
{-64, 0, 0},
{-2, -42, 3},
{-3, -43, 6},
{-55, 103, 0},
{-44, 0, 0},
{-45, 0, 0},
{-41, -62, 1},
{-6, 0, 0},
{-6, 0, 0},
{-6, 0, 0},
{-56, -3, 9},
{-6, 0, 0},
{-65, 0, 0},
{-52, -3, 9},
{-53, -3, 9},
{-57, 0, 0},
{-7, 0, 0},
};
static struct SXP_item vector[]={
{1, 46},
{2, 66},
{0, 0},
{4, 10},
{5, 11},
{6, 47},
{7, 58},
{8, 59},
{9, 48},
{10, 49},
{3, 68},
{3, 74},
{0, 0},
{1, 13},
{3, 27},
{0, 0},
{3, 29},
{0, 0},
{0, 0},
{0, 0},
{11, 70},
{14, 69},
{14, 75},
{13, 61},
{13, 72},
{0, 0},
{0, 0},
{14, 30},
{16, 67},
{0, 0},
{18, 60},
{6, -54},
{19, 31},
{20, 73},
{9, -3},
{0, 0},
};
static SXINT P_lrgl[]={
3,0,-2,2,0,0,0,0,
2,-2,1,0,0,0,0,0,
5,0,-1,1,2,3,0,0,
5,0,-1,2,3,4,0,0,
4,0,2,3,4,0,0,0,
7,0,-1,-1,1,2,3,4,
5,-1,0,1,2,3,0,0,
5,-1,1,2,3,4,0,0,
4,1,2,3,4,0,0,0,
4,-1,2,3,4,0,0,0,
5,-1,-1,1,2,3,0,0,
};
static SXINT *P_lregle[]={NULL,
&P_lrgl[0],
&P_lrgl[8],
&P_lrgl[16],
&P_lrgl[24],
&P_lrgl[32],
&P_lrgl[40],
&P_lrgl[48],
&P_lrgl[56],
&P_lrgl[64],
&P_lrgl[72],
&P_lrgl[80],
};
static SXINT P_right_ctxt_head[]={0,
2,1,1,2,2,1,1,1,1,2,1,};
static SXINT P_param_ref[]={
1,-2,
0,1,-1,
-2,1,
1,-2,
1,
-2,-3,1,
-1,0,1,
0,1,-1,
0,1,
0,1,-1,
0,1,-1,-2,
-1,1,
};
static struct SXP_local_mess SXP_local_mess[]={{0,NULL,NULL},
{2,"%sMisspelling of \"%s\" which is replaced by the keyword \"%s\".",&P_param_ref[0]},
{3,"%sMisspelling of \"%s\" before \"%s\" which is replaced by the keyword \"%s\".",&P_param_ref[2]},
{2,"%s\"%s\" is inserted before \"%s\".",&P_param_ref[5]},
{2,"%s\"%s\" is replaced by \"%s\".",&P_param_ref[7]},
{1,"%s\"%s\" is deleted.",&P_param_ref[9]},
{3,"%s\"%s %s\" is inserted before \"%s\".",&P_param_ref[10]},
{3,"%s\"%s\" is inserted before \"%s %s\".",&P_param_ref[13]},
{3,"%s\"%s\" before \"%s\" is replaced by \"%s\".",&P_param_ref[16]},
{2,"%s\"%s\" before \"%s\" is deleted.",&P_param_ref[19]},
{3,"%s\"%s %s\" is replaced by \"%s\".",&P_param_ref[21]},
{4,"%s\"%s\" before \"%s\" is replaced by \"%s %s\".",&P_param_ref[24]},
{2,"%s\"%s\" is forced before \"%s\".",&P_param_ref[28]},
};
static SXINT P_no_delete[]={
0};
static SXINT P_no_insert[]={
0};
static char *P_global_mess[]={
"%s\"%s\" is expected",
"%s\"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\", \"%s\", \"%s\" is expected",
"%sGlobal recovery.",
"%sParsing resumes on \"%s\"",
"End Of File",
"%sParsing stops on End Of File.",
};
static SXINT PER_tset[]={
0};

static char *err_titles[SXSEVERITIES]={
"\000",
"\001Warning:\t",
"\002Error:\t",
};
static char abstract []= "%d warnings and %d errors are reported.";
extern SXBOOLEAN sxprecovery (SXINT what_to_do, SXINT *at_state, SXINT latok_no);

static unsigned char S_char_to_simple_class[]={
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,4,5,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,4,3,6,3,3,7,3,8,3,3,9,3,10,3,11,
12,13,14,13,14,14,14,14,14,14,14,15,16,17,18,19,3,3,20,20,20,20,20,20,20,
20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,3,21,3,3,11,3,
20,22,20,20,20,22,20,20,23,20,20,20,20,24,25,20,20,22,20,22,26,20,20,20,20,
20,27,28,29,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,};
static SXSTMI SXS_transition[]={0,
0x0,0x4016,0x0,0x2402,0x2402,0x2c03,0x2c04,0x9402,0x0,0x440d,0x2c05,0x9403,
0x2406,0x2406,0x4411,0x4415,0x440b,0x2c07,0x440c,0x2c05,0x2c04,0x2c05,0x2c05,0x2c05,
0x2c05,0x2c05,0x9001,0x4412,0x0,
0x0,0x4000,0x0,0x1402,0x1402,0x4000,0x4000,0x4000,0x0,0x4000,0x4000,0x9403,
0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,0x4000,
0x4000,0x4000,0x4000,0x4000,0x0,
0x0,0x0,0x2c08,0x2c08,0x2c08,0x2c08,0x2c08,0x2c08,0x2c08,0x2c08,0x2c08,0x2c08,
0x2c08,0x2c08,0x2c08,0x2c08,0x2c08,0x2c08,0x2c08,0x2c08,0x2c09,0x2c08,0x2c08,0x2c08,
0x2c08,0x2c08,0x2c08,0x2c08,0x2c08,
0x0,0x0,0x0,0x0,0x0,0x0,0x9007,0x0,0x0,0x0,0x0,0x0,
0x3c00,0x0,0x0,0x0,0x3c00,0x3c00,0x3c00,0x2c0a,0x9007,0x2c0a,0x2c0a,0x2c0a,
0x2c0a,0x2c0b,0x9c05,0x0,0x0,
0x0,0x4003,0x0,0x700d,0x700d,0x4003,0x4003,0x4003,0x0,0x4003,0x1c05,0x700e,
0x1c05,0x1c05,0x4010,0x4003,0x0,0x4003,0x4003,0x1c05,0x4003,0x1c05,0x1c05,0x1c05,
0x1c05,0x1c05,0x4003,0x4003,0x0,
0x0,0x0,0x0,0x400f,0x400f,0x400f,0x400f,0x400f,0x0,0x400f,0x400f,0x400f,
0x1406,0x1406,0x0,0x0,0x0,0x0,0x0,0x400f,0x400f,0x400f,0x400f,0x400f,
0x400f,0x400f,0x0,0x0,0x0,
0x0,0x0,0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,
0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,0x9009,
0x9009,0x9009,0x9c0a,0x9009,0x0,
0x0,0x0,0x0,0x0,0x0,0x4c0e,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x2c08,0x0,0x0,0x0,0x0,0x0,0x0,
0x2c10,0x2c10,0x0,0x0,0x0,0x0,0x0,0x0,0x2c08,0x2c08,0x0,0x2c08,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x3000,0x3000,0x3000,0x0,0x3000,0x0,0x0,0x3000,0x3000,
0x0,0x0,0x0,0x0,0x3000,0x0,0x0,0x1c0a,0x0,0x1c0a,0x1c0a,0x1c0a,
0x1c0a,0x1c0a,0x0,0x0,0x0,
0x0,0x0,0x0,0x3000,0x3000,0x3000,0x0,0x3000,0x0,0x0,0x3000,0x3000,
0x0,0x0,0x0,0x0,0x3000,0x0,0x0,0x2c0a,0x0,0x2c0a,0x2c0a,0x2c11,
0x2c0a,0x2c0a,0x0,0x0,0x0,
0x0,0x0,0x2c14,0x2c14,0x2c14,0x900c,0x2c14,0x2c14,0x2c14,0x2c14,0x2c14,0x2c14,
0x2c14,0x2c14,0x2c14,0x2c14,0x2c14,0x2c14,0x2c14,0x2c14,0x900d,0x2c14,0x2c14,0x2c14,
0x2c14,0x2c14,0x2c14,0x2c14,0x2c14,
0x1,0x4003,0x0,0x800d,0x800d,0x4003,0x4003,0x4003,0x0,0x4003,0x4003,0x800e,
0x4003,0x4003,0x4010,0x4003,0x0,0x4003,0x4003,0x4003,0x4003,0x4003,0x4003,0x4003,
0x4003,0x4003,0x4003,0x4003,0x0,
0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x8015,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2c16,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x4c0e,0x0,0x0,0x0,0x0,0x0,0x0,
0x2c19,0x2c19,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x3000,0x3000,0x3000,0x0,0x3000,0x0,0x0,0x3000,0x3000,
0x0,0x0,0x0,0x0,0x3000,0x0,0x0,0x2c0a,0x0,0x2c0a,0x2c1a,0x2c0a,
0x2c0a,0x2c0a,0x0,0x0,0x0,
0x0,0x0,0x1c12,0x1c12,0x1c12,0x2c1b,0x1c12,0x2c1c,0x1c12,0x1c12,0x1c12,0x2c1d,
0x1c12,0x1c12,0x1c12,0x1c12,0x1c12,0x1c12,0x1c12,0x1c12,0x1c12,0x1c12,0x1c12,0x1c12,
0x1c12,0x1c12,0x9c0e,0x1c12,0x9010,
0x0,0x4001,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,
0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,
0x1c13,0x1c13,0x1c13,0x1c13,0x1c13,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x9412,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,
0x1,0x0,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x801e,0x8015,0x8015,0x8015,
0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,
0x8015,0x8015,0x8015,0x8015,0x8015,
0x0,0x0,0x1c16,0x1c16,0x1c16,0x1c16,0x1c16,0x1c16,0x9013,0x1c16,0x1c16,0x1c16,
0x1c16,0x1c16,0x1c16,0x1c16,0x1c16,0x1c16,0x1c16,0x1c16,0x1c16,0x1c16,0x1c16,0x1c16,
0x1c16,0x1c16,0x1c16,0x1c16,0x1c16,
0x0,0x0,0x2c1f,0x2c1f,0x2c1f,0x2c20,0x2c1f,0x2c21,0x2c1f,0x2c1f,0x2c1f,0x2c22,
0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,
0x2c1f,0x2c1f,0x0,0x2c1f,0x0,
0x0,0x0,0x1c18,0x1c18,0x1c18,0x2c23,0x1c18,0x2c24,0x1c18,0x1c18,0x1c18,0x2c25,
0x1c18,0x1c18,0x1c18,0x1c18,0x1c18,0x1c18,0x1c18,0x1c18,0x1c18,0x1c18,0x1c18,0x1c18,
0x1c18,0x1c18,0x9c14,0x1c18,0x9016,
0x0,0x0,0x0,0x0,0x0,0x4c0e,0x0,0x0,0x0,0x0,0x0,0x0,
0x2c08,0x2c08,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x3000,0x3000,0x3000,0x0,0x3000,0x0,0x0,0x3000,0x3000,
0x0,0x0,0x0,0x0,0x3000,0x0,0x0,0x2c0a,0x0,0x2c0a,0x2c0a,0x2c0a,
0x2c26,0x2c0a,0x0,0x0,0x0,
0x0,0x0,0x1c1b,0x1c1b,0x0,0x2c12,0x1c1b,0x1c1b,0x1c1b,0x1c1b,0x1c1b,0x1c1b,
0x1c1b,0x1c1b,0x1c1b,0x1c1b,0x1c1b,0x1c1b,0x1c1b,0x1c1b,0x2c27,0x1c1b,0x1c1b,0x1c1b,
0x1c1b,0x1c1b,0x1c1b,0x1c1b,0x1c1b,
0x0,0x0,0x1c1c,0x1c1c,0x0,0x1c1c,0x1c1c,0x2c12,0x1c1c,0x1c1c,0x1c1c,0x1c1c,
0x1c1c,0x1c1c,0x1c1c,0x1c1c,0x1c1c,0x1c1c,0x1c1c,0x1c1c,0x2c28,0x1c1c,0x1c1c,0x1c1c,
0x1c1c,0x1c1c,0x1c1c,0x1c1c,0x1c1c,
0x0,0x0,0x2c12,0x2c12,0x2c12,0x2c1b,0x2c12,0x2c1c,0x2c29,0x2c12,0x2c12,0x1c1d,
0x2c12,0x2c12,0x2c12,0x2c12,0x2c12,0x2c12,0x2c12,0x2c12,0x2c12,0x2c12,0x2c12,0x2c12,
0x2c12,0x2c12,0x9c0e,0x2c12,0x9010,
0x1,0x0,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x801e,0x8015,0x8015,0x800d,
0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,0x8015,
0x8015,0x8015,0x8015,0x8015,0x8015,
0x0,0x0,0x1c1f,0x1c1f,0x1c1f,0x2c20,0x1c1f,0x2c21,0x1c1f,0x1c1f,0x1c1f,0x2c22,
0x1c1f,0x1c1f,0x1c1f,0x9c18,0x1c1f,0x1c1f,0x1c1f,0x1c1f,0x1c1f,0x1c1f,0x1c1f,0x1c1f,
0x1c1f,0x1c1f,0x0,0x1c1f,0x0,
0x0,0x0,0x1c20,0x1c20,0x0,0x2c1f,0x1c20,0x1c20,0x1c20,0x1c20,0x1c20,0x1c20,
0x1c20,0x1c20,0x1c20,0x1c20,0x1c20,0x1c20,0x1c20,0x1c20,0x2c2b,0x1c20,0x1c20,0x1c20,
0x1c20,0x1c20,0x1c20,0x1c20,0x1c20,
0x0,0x0,0x1c21,0x1c21,0x0,0x1c21,0x1c21,0x2c1f,0x1c21,0x1c21,0x1c21,0x1c21,
0x1c21,0x1c21,0x1c21,0x1c21,0x1c21,0x1c21,0x1c21,0x1c21,0x2c2c,0x1c21,0x1c21,0x1c21,
0x1c21,0x1c21,0x1c21,0x1c21,0x1c21,
0x0,0x0,0x2c1f,0x2c1f,0x2c1f,0x2c20,0x2c1f,0x2c21,0x2c2d,0x2c1f,0x2c1f,0x1c22,
0x2c1f,0x2c1f,0x2c1f,0x9c18,0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,0x2c1f,
0x2c1f,0x2c1f,0x0,0x2c1f,0x0,
0x0,0x0,0x1c23,0x1c23,0x0,0x2c18,0x1c23,0x1c23,0x1c23,0x1c23,0x1c23,0x1c23,
0x1c23,0x1c23,0x1c23,0x1c23,0x1c23,0x1c23,0x1c23,0x1c23,0x2c2e,0x1c23,0x1c23,0x1c23,
0x1c23,0x1c23,0x1c23,0x1c23,0x1c23,
0x0,0x0,0x1c24,0x1c24,0x0,0x1c24,0x1c24,0x2c18,0x1c24,0x1c24,0x1c24,0x1c24,
0x1c24,0x1c24,0x1c24,0x1c24,0x1c24,0x1c24,0x1c24,0x1c24,0x2c2f,0x1c24,0x1c24,0x1c24,
0x1c24,0x1c24,0x1c24,0x1c24,0x1c24,
0x0,0x0,0x2c18,0x2c18,0x2c18,0x2c23,0x2c18,0x2c24,0x2c30,0x2c18,0x2c18,0x1c25,
0x2c18,0x2c18,0x2c18,0x2c18,0x2c18,0x2c18,0x2c18,0x2c18,0x2c18,0x2c18,0x2c18,0x2c18,
0x2c18,0x2c18,0x9c14,0x2c18,0x9016,
0x0,0x0,0x0,0x3000,0x3000,0x3000,0x0,0x3000,0x0,0x0,0x3000,0x3000,
0x0,0x0,0x0,0x0,0x3000,0x0,0x0,0x2c0a,0x0,0x2c0a,0x2c0a,0x9c19,
0x2c0a,0x2c0a,0x0,0x0,0x0,
0x0,0x0,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,
0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,
0x2c1b,0x2c1b,0x2c1b,0x2c1b,0x2c1b,
0x0,0x0,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,
0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,
0x2c1c,0x2c1c,0x2c1c,0x2c1c,0x2c1c,
0x0,0x0,0x1c29,0x1c29,0x1c29,0x1c29,0x1c29,0x1c29,0x2c31,0x1c29,0x1c29,0x1c29,
0x1c29,0x1c29,0x1c29,0x1c29,0x1c29,0x1c29,0x1c29,0x1c29,0x1c29,0x1c29,0x1c29,0x1c29,
0x1c29,0x1c29,0x1c29,0x1c29,0x1c29,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x901a,0x0,0x0,0x0,0x0,
0x2c32,0x2c32,0x0,0x0,0x0,0x0,0x0,0x0,0x2c14,0x2c14,0x0,0x2c14,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,
0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,
0x2c20,0x2c20,0x2c20,0x2c20,0x2c20,
0x0,0x0,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,
0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,
0x2c21,0x2c21,0x2c21,0x2c21,0x2c21,
0x0,0x0,0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x2c34,0x1c2d,0x1c2d,0x1c2d,
0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x1c2d,
0x1c2d,0x1c2d,0x1c2d,0x1c2d,0x1c2d,
0x0,0x0,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,
0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,
0x2c23,0x2c23,0x2c23,0x2c23,0x2c23,
0x0,0x0,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,
0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,
0x2c24,0x2c24,0x2c24,0x2c24,0x2c24,
0x0,0x0,0x1c30,0x1c30,0x1c30,0x1c30,0x1c30,0x1c30,0x2c35,0x1c30,0x1c30,0x1c30,
0x1c30,0x1c30,0x1c30,0x1c30,0x1c30,0x1c30,0x1c30,0x1c30,0x1c30,0x1c30,0x1c30,0x1c30,
0x1c30,0x1c30,0x1c30,0x1c30,0x1c30,
0x0,0x0,0x2c29,0x2c29,0x2c29,0x2c29,0x2c29,0x2c29,0x1c31,0x2c29,0x2c29,0x2c12,
0x2c29,0x2c29,0x2c29,0x2c29,0x2c29,0x2c29,0x2c29,0x2c29,0x2c29,0x2c29,0x2c29,0x2c29,
0x2c29,0x2c29,0x2c29,0x2c29,0x2c29,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x9412,0x0,0x0,0x0,0x0,
0x2c37,0x2c37,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x2c16,0x2c16,0x2c16,0x2c16,0x2c16,0x2c16,0x9013,0x2c16,0x2c16,0x901b,
0x2c16,0x2c16,0x2c16,0x2c16,0x2c16,0x2c16,0x2c16,0x2c16,0x2c16,0x2c16,0x2c16,0x2c16,
0x2c16,0x2c16,0x2c16,0x2c16,0x2c16,
0x0,0x0,0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x1c34,0x2c2d,0x2c2d,0x2c1f,
0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x2c2d,
0x2c2d,0x2c2d,0x2c2d,0x2c2d,0x2c2d,
0x0,0x0,0x2c30,0x2c30,0x2c30,0x2c30,0x2c30,0x2c30,0x1c35,0x2c30,0x2c30,0x2c18,
0x2c30,0x2c30,0x2c30,0x2c30,0x2c30,0x2c30,0x2c30,0x2c30,0x2c30,0x2c30,0x2c30,0x2c30,
0x2c30,0x2c30,0x2c30,0x2c30,0x2c30,
0x0,0x0,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,
0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,0x1c36,
0x1c36,0x1c36,0x9c1c,0x1c36,0x1c36,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x9412,0x0,0x0,0x0,0x0,
0x2c14,0x2c14,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x1c38,0x1c38,0x1c38,0x2c39,0x1c38,0x2c3a,0x1c38,0x1c38,0x1c38,0x2c3b,
0x1c38,0x1c38,0x1c38,0x1c38,0x1c38,0x1c38,0x1c38,0x1c38,0x1c38,0x1c38,0x1c38,0x1c38,
0x1c38,0x1c38,0x9c1e,0x1c38,0x9020,
0x0,0x0,0x1c39,0x1c39,0x0,0x2c38,0x1c39,0x1c39,0x1c39,0x1c39,0x1c39,0x1c39,
0x1c39,0x1c39,0x1c39,0x1c39,0x1c39,0x1c39,0x1c39,0x1c39,0x2c3c,0x1c39,0x1c39,0x1c39,
0x1c39,0x1c39,0x1c39,0x1c39,0x1c39,
0x0,0x0,0x1c3a,0x1c3a,0x0,0x1c3a,0x1c3a,0x2c38,0x1c3a,0x1c3a,0x1c3a,0x1c3a,
0x1c3a,0x1c3a,0x1c3a,0x1c3a,0x1c3a,0x1c3a,0x1c3a,0x1c3a,0x2c3d,0x1c3a,0x1c3a,0x1c3a,
0x1c3a,0x1c3a,0x1c3a,0x1c3a,0x1c3a,
0x0,0x0,0x2c38,0x2c38,0x2c38,0x2c39,0x2c38,0x2c3a,0x2c3e,0x2c38,0x2c38,0x1c3b,
0x2c38,0x2c38,0x2c38,0x2c38,0x2c38,0x2c38,0x2c38,0x2c38,0x2c38,0x2c38,0x2c38,0x2c38,
0x2c38,0x2c38,0x9c1e,0x2c38,0x9020,
0x0,0x0,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,
0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,
0x2c39,0x2c39,0x2c39,0x2c39,0x2c39,
0x0,0x0,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,
0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,
0x2c3a,0x2c3a,0x2c3a,0x2c3a,0x2c3a,
0x0,0x0,0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x2c3f,0x1c3e,0x1c3e,0x1c3e,
0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x1c3e,
0x1c3e,0x1c3e,0x1c3e,0x1c3e,0x1c3e,
0x0,0x0,0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x1c3f,0x2c3e,0x2c3e,0x2c38,
0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x2c3e,
0x2c3e,0x2c3e,0x2c3e,0x2c3e,0x2c3e,
};
static SXSTMI *S_transition_matrix[]={NULL,
&SXS_transition[0],
&SXS_transition[29],
&SXS_transition[58],
&SXS_transition[87],
&SXS_transition[116],
&SXS_transition[145],
&SXS_transition[174],
&SXS_transition[203],
&SXS_transition[232],
&SXS_transition[261],
&SXS_transition[290],
&SXS_transition[319],
&SXS_transition[348],
&SXS_transition[377],
&SXS_transition[406],
&SXS_transition[435],
&SXS_transition[464],
&SXS_transition[493],
&SXS_transition[522],
&SXS_transition[551],
&SXS_transition[580],
&SXS_transition[609],
&SXS_transition[638],
&SXS_transition[667],
&SXS_transition[696],
&SXS_transition[725],
&SXS_transition[754],
&SXS_transition[783],
&SXS_transition[812],
&SXS_transition[841],
&SXS_transition[870],
&SXS_transition[899],
&SXS_transition[928],
&SXS_transition[957],
&SXS_transition[986],
&SXS_transition[1015],
&SXS_transition[1044],
&SXS_transition[1073],
&SXS_transition[1102],
&SXS_transition[1131],
&SXS_transition[1160],
&SXS_transition[1189],
&SXS_transition[1218],
&SXS_transition[1247],
&SXS_transition[1276],
&SXS_transition[1305],
&SXS_transition[1334],
&SXS_transition[1363],
&SXS_transition[1392],
&SXS_transition[1421],
&SXS_transition[1450],
&SXS_transition[1479],
&SXS_transition[1508],
&SXS_transition[1537],
&SXS_transition[1566],
&SXS_transition[1595],
&SXS_transition[1624],
&SXS_transition[1653],
&SXS_transition[1682],
&SXS_transition[1711],
&SXS_transition[1740],
&SXS_transition[1769],
&SXS_transition[1798],
};
static struct SXS_action_or_prdct_code SXS_action_or_prdct_code[]={{0,0,0,0,0},
{0x9c0a,9,61,1,0},
{0x200c,9,34,1,0},
{0x200f,9,10,1,0},
{0x900b,3,1,1,0},
{0x2012,4,0,1,0},
{0x2013,5,0,1,0},
{0x9c06,2,1,1,1},
{0x9c04,0,0,1,1},
{0x2017,9,123,1,0},
{0x2018,4,0,1,0},
{0x4001,5,0,1,0},
{0x2c14,9,92,1,0},
{0x2c2a,10,0,1,0},
{0x2012,12,0,1,0},
{0x2012,13,0,1,0},
{0x9c0f,2,0,1,1},
{0x4c05,0,0,1,1},
{0x400e,9,34,1,0},
{0x2c33,10,0,1,0},
{0x2018,12,0,1,0},
{0x2018,13,0,1,0},
{0x9c15,2,0,1,1},
{0x4c13,0,0,1,1},
{0x4013,9,125,1,0},
{0x2036,5,0,1,0},
{0x2c14,5,0,1,0},
{0x941d,5,0,1,0},
{0x2038,4,0,1,0},
{0x2002,9,10,1,0},
{0x2038,12,0,1,0},
{0x2038,13,0,1,0},
{0x9c1f,2,0,1,1},
{0x4c04,0,0,1,1},
};
static char *S_adrp[]={0,
"%MARK",
"%start",
"%ID",
"%UNION",
"%LCURL",
"%left",
"%right",
"%nonassoc",
"%token",
"%type",
"<",
">",
",",
"%LIT",
"NUM",
"%C_ID",
":",
"|",
"%ACTION",
"%prec",
";",
"End Of File",
"\\left",
"%<",
"\\<",
"\\right",
"%>",
"\\>",
"\\nonassoc",
"%binary",
"\\binary",
"%2",
"\\2",
"\\token",
"%term",
"\\term",
"%0",
"\\0",
"\\prec",
"%=",
"\\=",
"\\type",
"\\start",
};
static SXINT S_syno[]={0,
0,43,0,0,0,25,28,33,38,42,0,0,0,0,0,0,0,0,0,41,0,0,0,23,24,
0,26,27,0,29,30,31,32,0,34,35,36,37,0,39,40,0,0,};
static SXINT S_is_a_keyword[]={
7,2,6,7,8,9,10,20};
static SXINT S_is_a_generic_terminal[]={
7,1,3,4,5,14,16,19};
static SXINT S_lrgl[]={
4,1,2,3,4,0,
5,-1,1,2,3,4,
5,-1,0,1,2,3,
};
static SXINT *S_lregle[]={NULL,
&S_lrgl[0],
&S_lrgl[6],
&S_lrgl[12],
};
static SXINT S_param_ref[]={
0,
0,-1,
-1,0,
};
static struct SXS_local_mess SXS_local_mess[]={{0,NULL,NULL},
{1,"%sThe invalid character \"%s\" is deleted.",&S_param_ref[0]},
{2,"%sThe invalid character \"%s\" is replaced by \"%s\".",&S_param_ref[1]},
{2,"%sThe character \"%s\" is inserted before \"%s\".",&S_param_ref[3]},
};
static SXINT S_no_delete[]={
0};
static SXINT S_no_insert[]={
0};
static char *S_global_mess[]={0,
"%s\"%s\" is deleted.",
"%sThis unknown keyword is erased.",
"End Of Line",
"End Of File",
"%sScanning stops on End Of File.",
};
extern SXINT sxscan_it(void);
extern SXBOOLEAN sxsrecovery (SXINT sxsrecovery_what, SXINT state_no, unsigned char *class);
static SXINT check_keyword(char *init_string, SXINT init_length);
static struct SXT_node_info SXT_node_info[]={{0,0},
{27,1},{14,5},{26,6},{4,6},{0,6},{20,8},{25,9},{9,10},{11,11},{18,12},{15,13},{21,14},
{24,15},{23,17},{6,19},{22,20},{0,21},{0,23},{6,25},{12,26},{8,27},{13,28},{7,29},{0,30},
{0,32},{19,34},{0,35},{10,37},{0,40},{5,41},{17,43},{0,43},{0,45},{0,47},{26,49},{6,49},
{12,50},{16,51},{16,53},{0,55},{0,56},};
static SXINT T_ter_to_node_name[]={
0,14,0,6,0,0,0,0,0,0,0,0,0,0,12,0,3,0,0,2,};
static char *T_node_name[]={NULL,
"ERROR",
"ACTION",
"C_ID",
"DEFS",
"FOLLOWING_RULE",
"ID",
"ID_LIST",
"ID_NUM",
"LCURL",
"LEADING_RULE",
"LEFT_PRIO",
"LIT",
"LIT_NUM",
"MARK",
"NONASSOC_PRIO",
"POST_ACTION",
"RIGHT_HAND_SIDE",
"RIGHT_PRIO",
"RULES",
"START",
"TOKENS",
"TOKEN_LIST",
"TYPE",
"TYPED_TOKENS",
"UNION",
"VOID",
"YACC_SPEC",
};
extern SXINT sempass(SXINT what, struct sxtables *sxtables_ptr);
static char T_stack_schema[]={0,
0,1,2,3,0,0,1,0,0,0,0,0,0,0,0,1,0,1,1,0,0,1,0,2,0,
0,1,1,0,0,1,0,2,0,0,1,0,1,3,0,0,1,0,1,0,1,0,1,0,0,
0,1,0,1,1,0,};

static struct SXT_tables SXT_tables=
{SXT_node_info, T_ter_to_node_name, T_stack_schema, sempass, T_node_name};
extern SXINT sxscanner(SXINT what_to_do, struct sxtables *arg);
extern SXINT sxparser(SXINT what_to_do, struct sxtables *arg);
extern SXINT sxatc(SXINT what, ...);

struct sxtables sxtables={
52113, /* magic */
{sxscanner,(PARSER_T) sxparser}, {255, 22, 1, 3, 4, 29, 2, 63, 0, 0, 0, 
S_is_a_keyword,S_is_a_generic_terminal,S_transition_matrix,
SXS_action_or_prdct_code,
S_adrp,
S_syno,
SXS_local_mess,
S_char_to_simple_class+128,
S_no_delete,
S_no_insert,
S_global_mess,
S_lregle,
NULL,
(RECOVERY_T) sxsrecovery,
check_keyword,
},
{7, 40, 40, 51, 61, 76, 78, 113, 22, 13, 40, 40, 36, 22, 0, 11, 4, 7, 2, 5, 11, 2, 6,
reductions,
t_bases,
nt_bases,
vector-78,
NULL,
NULL,
NULL,
NULL,
P_lregle,
P_right_ctxt_head,
SXP_local_mess,
P_no_delete,
P_no_insert,
P_global_mess,PER_tset,sxscan_it,(RECOVERY_T) sxprecovery,
NULL,
NULL,
(SEMACT_T) sxatc},
err_titles,
abstract,
(sxsem_tables*)&SXT_tables,
NULL,
};

#include	"sxdico.h"

#define KW_NB		28
#define INIT_BASE	1
#define INIT_SUFFIX	64
#define CLASS_MASK	31
#define STOP_MASK	32
#define BASE_SHIFT	7
#define SUFFIX_MASK	64

#define SYNO
#define EOF_CODE	22
static SXINT syno2t_code [21] = {
6, 6, 6, 7, 7, 7, 8, 8, 8, 8, 8, 9, 9, 9, 9, 
9, 20, 20, 20, 10, 2, 
};

static SXINT kw_code2t_code [29] = {0,
20, 10, 9, 8, 7, 6, 2, 23, 24, 25, 26, 27, 28, 29, 30, 
31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 
};

static SXINT kw_code2lgth [29] = {0,
5, 5, 6, 9, 6, 5, 6, 5, 2, 2, 6, 2, 2, 9, 7, 
7, 2, 2, 6, 5, 5, 2, 2, 5, 2, 2, 5, 6, 
};

static SXUINT comb_vector [64] = {
0, 0, 2817, 0, 0, 2564, 1669, 5894, 5639, 
5384, 4105, 0, 4619, 4364, 717, 1186, 1315, 0, 3089, 
3854, 3599, 3344, 2210, 2339, 2850, 2979, 1954, 2083, 930, 
3619, 674, 1443, 802, 1059, 418, 2467, 2594, 2723, 290, 
3491, 1833, 3114, 553, 170, 4226, 3971, 1570, 1699, 3234, 
3363, 0, 0, 0, 0, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 0, 
};

static unsigned char char2class [256] = {
'\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\002', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\001', '\000', '\004', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\005', '\006', '\007', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\003', '\000', '\000', 
'\000', '\000', '\000', '\000', '\b', '\000', '\013', '\016', 
'\000', '\017', '\000', '\000', '\000', '\000', '\f', '\t', 
'\000', '\n', '\000', '\020', '\000', '\r', '\000', '\000', 
'\000', '\000', '\021', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', 
};

#include	"sxcheck_keyword.h"

/* End of sxtables for ysx [Thu Mar  6 12:56:27 2008] */
