/* Beginning of sxtables for ppf77 [Tue Feb 13 12:13:06 2007] */
#define SXP_MAX 2174
#include "sxunix.h"
#include "sxba.h"
char WHAT_PPF77T[] = "@(#)SYNTAX - $Id$" WHAT_DEBUG;

static struct SXP_reductions reductions[]={{0,0,0,0},
{1, 3, 1, -706},
{1, 62, 1, -711},
{1, 65, 1, -713},
{1, 77, 1, -714},
{1, 85, 1, 1012},
{1, 213, 1, 1015},
{1, 214, 1, 1015},
{1, 216, 1, 1015},
{1, 217, 1, 1015},
{1, 287, 1, 1015},
{1, 295, 1, 1015},
{1, 297, 1, 1015},
{1, 374, 1, 1015},
{1, 8, 1, -417},
{1, 13, 1, -707},
{1, 18, 1, 1011},
{1, 19, 1, 1011},
{1, 87, 2, -715},
{1, 157, 1, -422},
{1, 110, 1, -423},
{1, 188, 2, 1015},
{1, 10, 2, -707},
{1, 306, 1, -17},
{1, 29, 2, -708},
{1, 31, 2, -709},
{1, 33, 2, -710},
{1, 64, 2, -713},
{1, 180, 2, 1015},
{1, 336, 1, -427},
{1, 312, 1, -756},
{1, 315, 1, -428},
{1, 322, 1, 1142},
{1, 127, 2, 1079},
{1, 129, 2, 1081},
{1, 156, 2, -422},
{1, 160, 2, -728},
{1, 90, 2, -730},
{1, 104, 2, -731},
{1, 123, 2, 1078},
{1, 71, 2, 1054},
{1, 132, 2, -735},
{1, 489, 2, 1056},
{1, 151, 2, -738},
{1, 181, 3, 1015},
{1, 445, 1, 1160},
{1, 430, 2, 1137},
{1, 12, 3, -707},
{1, 30, 3, -708},
{1, 32, 3, -709},
{1, 34, 3, -710},
{1, 334, 2, -427},
{1, 337, 2, -427},
{1, 338, 2, -427},
{1, 311, 2, -756},
{1, 317, 2, -428},
{1, 313, 2, -756},
{1, 316, 2, -428},
{1, 328, 1, -433},
{1, 329, 1, -433},
{1, 321, 2, 1142},
{1, 176, 2, 1101},
{1, 492, 1, 1100},
{1, 107, 2, -764},
{1, 69, 3, 1054},
{1, 146, 2, 1089},
{1, 144, 2, -768},
{1, 195, 4, 1012},
{1, 439, 2, 1160},
{1, 467, 2, 1177},
{1, 235, 2, 1125},
{1, 232, 2, 1125},
{1, 233, 2, 1125},
{1, 234, 2, 1125},
{1, 236, 2, 1125},
{1, 237, 2, 1125},
{1, 229, 2, -780},
{1, 230, 2, -780},
{1, 228, 2, -780},
{1, 248, 2, 1129},
{1, 249, 2, 1129},
{1, 256, 2, 1129},
{1, 254, 2, 1129},
{1, 245, 2, -784},
{1, 261, 2, 1132},
{1, 262, 2, 1132},
{1, 264, 2, 1132},
{1, 258, 2, -785},
{1, 269, 2, 1134},
{1, 270, 2, 1134},
{1, 272, 2, 1134},
{1, 278, 2, 1134},
{1, 281, 2, 1134},
{1, 284, 2, 1134},
{1, 286, 2, 1134},
{1, 273, 2, 1134},
{1, 274, 2, 1134},
{1, 275, 2, 1134},
{1, 276, 2, 1134},
{1, 277, 2, 1134},
{1, 279, 2, 1134},
{1, 280, 2, 1134},
{1, 282, 2, 1134},
{1, 283, 2, 1134},
{1, 285, 2, 1134},
{1, 266, 2, -786},
{1, 292, 2, 1136},
{1, 293, 2, 1136},
{1, 294, 2, 1136},
{1, 289, 2, 1135},
{1, 372, 1, 1158},
{1, 365, 4, 1012},
{1, 382, 2, -797},
{1, 332, 3, -427},
{1, 92, 2, 1065},
{1, 96, 2, 1065},
{1, 81, 2, -806},
{1, 507, 1, 1192},
{1, 506, 1, 1192},
{1, 173, 2, 1099},
{1, 172, 2, 1099},
{1, 171, 2, 1099},
{1, 170, 2, 1099},
{1, 166, 2, -809},
{1, 138, 2, 1085},
{1, 135, 2, -812},
{1, 459, 1, 1165},
{1, 513, 2, 1110},
{1, 190, 5, 1015},
{1, 238, 2, 1121},
{1, 239, 2, 1121},
{1, 369, 2, -830},
{1, 326, 3, -433},
{1, 348, 3, 1149},
{1, 349, 3, 1149},
{1, 436, 2, 1164},
{1, 453, 2, 1165},
{1, 468, 2, 1183},
{1, 189, 6, 1015},
{1, 196, 7, 1012},
{1, 351, 5, 1149},
{1, 353, 5, 1149},
{1, 194, 8, 1015},
{1, 209, 4, 1117},
{1, 198, 2, 1112},
{1, 199, 2, 1112},
{1, 15, 0, 1008},
{1, 72, 0, 1057},
{1, 73, 0, 1057},
{1, 75, 0, 1057},
{1, 76, 0, 1057},
{1, 488, 0, 1052},
{1, 211, 0, 1015},
{1, 487, 0, 1052},
{1, 512, 0, 1010},
{1, 70, 1, 1054},
{1, 74, 1, 1057},
{1, 149, 1, 1012},
{1, 515, 0, 1105},
{1, 499, 0, 1118},
{1, 511, 0, 1119},
{1, 212, 1, 1015},
{1, 215, 1, 1015},
{1, 305, 0, 1122},
{1, 301, 0, 1123},
{1, 517, 0, 1156},
{1, 516, 0, 1156},
{1, 501, 0, 1189},
{1, 502, 0, 1169},
{1, 373, 1, 1015},
{0, 0, 2, -706},
{1, 1, 1, -706},
{1, 4, 1, 1002},
{1, 5, 1, 1002},
{1, 6, 1, 1002},
{1, 7, 1, 1002},
{1, 14, 1, 1008},
{1, 17, 1, 1009},
{0, 182, 1, -719},
{0, 68, 1, 1054},
{0, 480, 1, 1072},
{0, 183, 1, -719},
{1, 307, 1, 1001},
{1, 347, 0, 1146},
{1, 345, 0, 1146},
{1, 346, 0, 1146},
{1, 355, 0, 1143},
{1, 141, 0, 1059},
{1, 500, 0, 1086},
{0, 126, 1, 1080},
{1, 120, 2, 1012},
{0, 130, 1, 1081},
{0, 78, 1, 1060},
{1, 86, 2, -715},
{0, 162, 1, 1097},
{0, 163, 1, 1097},
{1, 155, 2, 1012},
{1, 88, 2, 1012},
{1, 100, 2, 1012},
{1, 109, 2, 1012},
{0, 112, 1, -423},
{1, 131, 2, 1012},
{1, 147, 2, 1012},
{1, 148, 2, 1012},
{1, 150, 2, 1012},
{1, 509, 0, 1179},
{1, 510, 0, 1179},
{0, 379, 1, 1161},
{0, 303, 1, 1122},
{0, 380, 1, 1161},
{1, 223, 2, 1015},
{0, 434, 1, 1130},
{0, 304, 1, 1122},
{1, 225, 2, 1015},
{0, 402, 1, 1111},
{0, 400, 1, 1167},
{0, 399, 1, 1167},
{0, 391, 1, 1159},
{1, 366, 2, 1015},
{1, 16, 2, 1009},
{0, 518, 0, 1058},
{1, 117, 2, 1012},
{1, 406, 0, 1171},
{1, 208, 2, 1012},
{1, 2, 3, -706},
{1, 354, 0, 1143},
{1, 333, 1, -427},
{1, 360, 0, 1151},
{1, 341, 1, -427},
{1, 342, 1, -427},
{1, 340, 1, -427},
{1, 343, 1, -427},
{1, 344, 1, -427},
{1, 363, 1, -757},
{1, 359, 1, -758},
{1, 354, 1, 1143},
{1, 308, 2, 1001},
{0, 309, 1, 1138},
{0, 310, 1, 1138},
{0, 320, 1, 1141},
{1, 339, 1, -427},
{1, 364, 1, -757},
{1, 66, 2, 1055},
{1, 71, 3, 1054},
{1, 99, 0, 1069},
{1, 79, 2, 1060},
{1, 84, 0, 1062},
{1, 481, 2, 1072},
{0, 101, 1, 1071},
{0, 102, 1, 1071},
{1, 106, 2, 1074},
{1, 143, 3, 1012},
{1, 154, 2, 1092},
{1, 193, 3, 1015},
{0, 376, 1, 1104},
{0, 470, 1, 1186},
{0, 375, 1, 1104},
{0, 401, 1, 1111},
{0, 449, 1, 1175},
{0, 377, 1, 1104},
{0, 378, 1, 1104},
{0, 435, 1, 1130},
{0, 450, 1, 1175},
{1, 473, 0, 1187},
{1, 474, 0, 1187},
{1, 475, 0, 1187},
{1, 476, 0, 1187},
{1, 477, 0, 1187},
{1, 478, 0, 1187},
{0, 226, 1, 1120},
{0, 227, 1, 1120},
{1, 433, 2, 1137},
{1, 381, 2, 1161},
{1, 244, 3, 1015},
{1, 257, 3, 1015},
{1, 265, 3, 1015},
{0, 495, 1, 1169},
{0, 505, 1, 1192},
{1, 398, 2, 1168},
{0, 496, 1, 1169},
{0, 504, 1, 1192},
{1, 390, 2, 1159},
{1, 288, 3, 1015},
{1, 296, 3, 1015},
{1, 298, 3, 1015},
{1, 367, 3, 1015},
{1, 481, 3, 1072},
{0, 383, 1, -797},
{1, 479, 3, 1106},
{1, 357, 0, 1147},
{1, 327, 1, -433},
{1, 319, 2, 1141},
{1, 331, 2, -427},
{1, 67, 3, 1055},
{1, 139, 2, 1059},
{1, 142, 2, 1059},
{0, 420, 1, 1087},
{1, 121, 4, 1012},
{1, 89, 3, 1064},
{0, 98, 1, 1069},
{0, 95, 1, -804},
{1, 80, 3, 1060},
{1, 500, 1, 1086},
{1, 499, 1, 1118},
{0, 168, 1, 1099},
{1, 159, 3, 1094},
{1, 116, 3, 1077},
{0, 137, 1, 1085},
{1, 134, 3, 1083},
{1, 448, 2, 1177},
{0, 452, 1, -45},
{1, 219, 4, 1015},
{1, 221, 4, 1015},
{1, 222, 4, 1015},
{1, 224, 4, 1015},
{1, 507, 2, 1192},
{1, 506, 2, 1192},
{1, 394, 3, 1168},
{1, 395, 3, 1168},
{1, 393, 3, 1168},
{1, 392, 3, 1168},
{1, 396, 3, 1168},
{1, 368, 4, 1015},
{1, 485, 4, 1073},
{1, 69, 4, 1054},
{1, 324, 2, -433},
{1, 325, 2, -433},
{1, 428, 2, 1174},
{1, 419, 2, 1087},
{1, 122, 5, 1012},
{1, 177, 3, 1101},
{1, 115, 4, 1077},
{1, 114, 4, 1077},
{0, 384, 1, -65},
{0, 403, 1, 1170},
{0, 385, 1, -65},
{0, 472, 1, 1170},
{0, 386, 1, -65},
{0, 463, 1, 1181},
{0, 387, 1, -65},
{0, 418, 1, 1172},
{0, 464, 1, 1181},
{0, 404, 1, 1170},
{0, 417, 1, 1172},
{0, 409, 1, 1163},
{1, 192, 5, 1015},
{1, 488, 1, 1052},
{1, 440, 3, 1160},
{1, 441, 3, 1160},
{1, 442, 3, 1160},
{1, 207, 5, -421},
{0, 482, 1, 1126},
{1, 218, 5, 1015},
{1, 220, 5, 1015},
{1, 250, 3, 1129},
{1, 251, 3, 1129},
{1, 252, 3, 1129},
{1, 253, 3, 1129},
{1, 255, 3, 1129},
{1, 263, 3, 1132},
{1, 271, 3, 1134},
{1, 503, 4, 1169},
{1, 484, 5, 1073},
{1, 118, 5, 1012},
{1, 486, 5, 1073},
{1, 362, 0, -132},
{1, 361, 0, 1153},
{1, 423, 3, 1174},
{1, 424, 3, 1174},
{1, 422, 3, 1174},
{1, 421, 3, 1174},
{1, 425, 3, 1174},
{1, 94, 3, -804},
{1, 113, 5, 1077},
{1, 416, 2, 1173},
{1, 438, 2, 1164},
{1, 462, 2, 1183},
{1, 389, 2, 1166},
{0, 466, 1, -126},
{1, 408, 2, 1163},
{1, 191, 6, 1015},
{1, 206, 6, -421},
{1, 119, 6, 1012},
{1, 350, 4, 1149},
{1, 352, 4, 1149},
{1, 174, 6, 1098},
{1, 412, 3, 1173},
{1, 413, 3, 1173},
{1, 411, 3, 1173},
{1, 410, 3, 1173},
{1, 414, 3, 1173},
{1, 454, 3, 1165},
{1, 455, 3, 1165},
{1, 456, 3, 1165},
{1, 210, 3, 1117},
{1, 358, 0, 1154},
{1, 204, 1, 1113},
{1, 202, 1, -529},
{1, 175, 8, 1098},
{1, 205, 2, 1113},
{1, 203, 2, -529},
{1, 243, 8, 1127},
{1, 200, 6, -530},
{1, 242, 10, 1127},
{1, 201, 7, -530},
};
static struct SXP_bases t_bases[]={{0,0,0},
{-171, 1659, 1231},
{0, 1659, 1468},
{0, 1659, 1203},
{-179, 1236, 1182},
{0, 1659, 1444},
{-196, 1236, 1262},
{-199, 461, 27},
{0, 1236, 1183},
{0, 1639, 1351},
{0, 1659, 1228},
{-239, 1636, 0},
{-186, 1493, 1217},
{0, 1467, 1378},
{-243, 1236, 1188},
{0, 1635, 0},
{0, 1467, 0},
{-291, 1636, 0},
{0, 1639, 1215},
{0, 1534, 1442},
{0, 1537, 1290},
{-324, 1236, 1189},
{0, 1534, 0},
{0, 1639, 1315},
{0, 1537, 1389},
{0, 1659, 1464},
{0, 1659, 1206},
{0, 458, 9},
{0, 1236, 0},
{-155, 1236, 1184},
{0, 1236, 1185},
{0, 545, 9},
{0, 1236, 1520},
{0, 1163, 0},
{-157, 1236, 1524},
{0, 158, 115},
{-161, 1450, 1367},
{-162, 1450, 1367},
{0, 1473, 1282},
{0, 1537, 1219},
{-169, 1537, 1275},
{0, 1537, 1275},
{-186, 1493, 1251},
{0, 1454, 0},
{-193, 1236, 0},
{0, 1236, 1529},
{0, 1473, 1210},
{0, 1537, 1421},
{0, 1537, 1342},
{0, 1236, 1432},
{0, 1546, 1289},
{0, 1537, 1424},
{0, 1465, 1308},
{0, 1537, 1235},
{0, 1537, 1376},
{-220, 0, 0},
{-222, 1537, 1275},
{-226, 1622, 0},
{0, 1561, 0},
{0, 1236, 1186},
{0, 1528, 1431},
{0, 1528, 1443},
{0, 1236, 1477},
{0, 1528, 1298},
{0, 1236, 1524},
{0, 1537, 1388},
{0, 1537, 1346},
{0, 1537, 1353},
{0, 1537, 1379},
{0, 227, 98},
{-186, 1493, 0},
{0, 289, 98},
{-290, 289, 98},
{-292, 1622, 0},
{0, 1528, 1390},
{0, 1534, 1513},
{0, 1537, 1382},
{0, 1473, 1267},
{-311, 1537, 1346},
{0, 1473, 1281},
{0, 1521, 0},
{-312, 1537, 1346},
{0, 1546, 0},
{0, 1658, 0},
{0, 1465, 0},
{0, 1272, 0},
{0, 1236, 1492},
{0, 1537, 1430},
{0, 1537, 1435},
{0, 1537, 1238},
{0, 1537, 1327},
{0, 365, 98},
{0, 366, 98},
{0, 1537, 1220},
{0, 1450, 1299},
{0, 395, 98},
{0, 1659, 1247},
{0, 1236, 1178},
{0, 1659, 1399},
{0, 1639, 1351},
{0, 1659, 1468},
{0, 1659, 1468},
{0, 1659, 1468},
{0, 1659, 1468},
{0, 1454, 0},
{0, 1454, 0},
{0, 1236, 1188},
{0, 1454, 0},
{0, 1467, 0},
{0, 1635, 0},
{0, 1236, 1189},
{0, 1639, 1315},
{0, 1659, 1194},
{0, 1659, 1444},
{0, 1659, 1444},
{0, 1659, 1464},
{0, 1659, 1202},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 158, 115},
{0, 1473, 1282},
{0, 1537, 1219},
{0, 1537, 1219},
{0, 1236, 0},
{0, 1236, 1185},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1537, 1342},
{0, 1537, 1275},
{0, 1537, 1235},
{0, 1537, 1235},
{0, 1659, 1468},
{0, 1236, 1179},
{0, 458, 9},
{0, 1659, 1468},
{0, 1659, 1468},
{0, 1659, 1468},
{0, 1236, 0},
{0, 1537, 1421},
{0, 1236, 0},
{0, 1454, 0},
{0, 1537, 1330},
{0, 1236, 1185},
{0, 1236, 1185},
{0, 1236, 0},
{0, 545, 9},
{0, 1236, 0},
{0, 1236, 0},
{0, 1454, 0},
{0, 1236, 0},
{-220, 0, 0},
{0, 1163, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 158, 115},
{0, 1537, 1421},
{0, 1236, 0},
{0, 1236, 1432},
{0, 1537, 1346},
{0, 1639, 1351},
{0, 1639, 1351},
{0, 1639, 1351},
{0, 1639, 1351},
{0, 1639, 1351},
{0, 1454, 0},
{-220, 0, 0},
{-222, 1537, 1275},
{0, 227, 98},
{-186, 1493, 0},
{-186, 1493, 0},
{0, 289, 98},
{0, 289, 98},
{0, 289, 98},
{0, 289, 98},
{0, 289, 98},
{0, 1236, 0},
{0, 1528, 1390},
{0, 1236, 1185},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 158, 115},
{0, 1537, 1421},
{0, 1537, 1421},
{0, 1537, 1421},
{0, 1537, 1421},
{0, 1537, 1275},
{0, 158, 115},
{0, 1473, 1282},
{0, 1537, 1219},
{0, 1537, 1275},
{0, 158, 115},
{0, 1236, 0},
{0, 1537, 1346},
{0, 1537, 1219},
{0, 158, 115},
{0, 1236, 0},
{0, 1236, 1432},
{0, 1236, 1432},
{0, 1236, 1432},
{0, 1236, 1432},
{0, 1537, 1275},
{0, 1236, 1432},
{0, 1537, 1219},
{0, 158, 115},
{0, 1236, 0},
{0, 1236, 1432},
{0, 1537, 1219},
{0, 158, 115},
{0, 1236, 0},
{0, 1236, 1432},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1534, 1513},
{0, 1537, 1219},
{0, 158, 115},
{0, 1236, 0},
{0, 158, 115},
{0, 1537, 1421},
{-222, 1537, 1275},
{0, 1537, 1421},
{-222, 1537, 1275},
{0, 1639, 1215},
{0, 1639, 1215},
{0, 1639, 1215},
{0, 1639, 1215},
{0, 1639, 1215},
{0, 1528, 1443},
{0, 1528, 1443},
{0, 1537, 1430},
{0, 1528, 1298},
{-331, 1236, 0},
{0, 1236, 0},
{0, 1236, 0},
{0, 1537, 1382},
{0, 158, 115},
{0, 158, 115},
{0, 1537, 1290},
{0, 1537, 1275},
{0, 1537, 1346},
{0, 1236, 0},
{0, 366, 98},
{0, 366, 98},
{0, 366, 98},
{0, 1528, 1390},
{-373, 1236, 0},
{0, 1639, 1315},
{0, 1639, 1315},
{0, 1639, 1315},
{0, 1639, 1315},
{0, 1639, 1315},
{0, 1537, 1382},
{0, 1537, 1382},
{0, 1537, 1382},
{0, 1537, 1382},
{0, 1537, 1275},
{0, 1537, 1421},
{0, 1659, 1444},
{0, 158, 115},
{0, 1537, 1275},
{0, 1537, 1346},
{0, 1450, 1299},
{0, 1537, 1389},
{0, 395, 98},
{0, 1528, 1390},
{0, 158, 115},
{0, 158, 115},
{0, 1537, 1275},
{0, 1537, 1275},
{0, 1537, 1421},
{0, 1537, 1275},
{0, 1537, 1421},
{0, 1537, 1275},
{0, -170, 122},
{0, 172, 5},
{0, 173, 5},
{0, 174, 5},
{0, 175, 5},
{0, 552, 5},
{0, 177, 5},
{0, 555, 5},
{0, 556, 5},
{0, 557, 5},
{-178, 470, 9},
{0, 558, 8},
{0, 472, 9},
{0, 559, 2},
{-181, -180, 9},
{0, 475, 9},
{-189, 477, 9},
{-191, 561, 11},
{-190, 560, 3},
{-192, 478, 9},
{-194, 562, 9},
{-195, 472, 9},
{0, 1619, 0},
{0, 477, 9},
{-197, 565, 3},
{-198, 566, 3},
{-200, 568, 3},
{0, 570, 9},
{-179, 571, 11},
{-201, 572, 3},
{-202, 573, 3},
{-203, 573, 3},
{-204, 480, 3},
{0, 574, 36},
{-208, 1204, 1400},
{-209, 472, 9},
{-212, -211, 93},
{-210, 482, 3},
{0, 578, 93},
{-213, 579, 3},
{-207, 562, 9},
{-217, 1712, 0},
{-215, 1164, 0},
{0, 1672, 1516},
{-218, 483, 9},
{-207, 484, 9},
{0, 219, 5},
{-221, 568, 3},
{0, 224, 3},
{0, 236, 10},
{-237, 486, 3},
{0, 489, 85},
{0, 240, 88},
{0, 241, 98},
{0, 484, 9},
{0, 598, 3},
{0, 597, 2},
{-248, 562, 9},
{0, 1608, 0},
{-249, 472, 9},
{0, 600, 27},
{0, 492, 2},
{0, 1270, 0},
{0, 252, 27},
{-253, 1616, 0},
{-255, 1201, 1221},
{0, 493, 10},
{-257, 1196, 1212},
{-259, 1278, 0},
{-214, 1268, 1257},
{0, 1552, 1386},
{0, 607, 2},
{-269, 495, 3},
{0, 494, 10},
{-270, 496, 3},
{0, 497, 10},
{-211, 271, 10},
{-261, 272, 10},
{0, 1617, 0},
{0, 1618, 0},
{0, 1620, 0},
{-215, 272, 10},
{-276, -405, 3},
{0, 278, 10},
{-279, -407, 3},
{0, 646, 3},
{-281, 1672, 1516},
{0, 1180, 1355},
{0, 1180, 1398},
{0, 1180, 1416},
{-287, 652, 24},
{0, 1621, 0},
{0, 654, 24},
{0, 1195, 0},
{-296, 1458, 1514},
{0, 295, 10},
{-297, 560, 3},
{0, 298, 10},
{0, 660, 3},
{-300, 1197, 0},
{0, 1232, 0},
{-304, 503, 11},
{0, 662, 11},
{0, 1269, 0},
{-306, 664, 3},
{-307, 665, 29},
{0, 1254, 0},
{0, 1181, 1419},
{-255, 1582, 0},
{-257, 278, 10},
{-258, 309, 10},
{-214, 1268, 1259},
{-255, -211, 93},
{-214, 1569, 1253},
{0, 671, 2},
{-313, -409, 3},
{-314, -409, 3},
{-276, -411, 3},
{-279, -413, 3},
{-317, 584, 102},
{-318, 584, 102},
{-319, 1672, 0},
{-320, 1672, 0},
{-321, 584, 102},
{0, 1623, 0},
{0, 323, 10},
{0, 325, 10},
{-326, 507, 82},
{0, 508, 82},
{0, 674, 82},
{0, 675, 82},
{0, 676, 82},
{0, 327, 10},
{-328, 1458, 1514},
{-329, 560, 3},
{0, 677, 3},
{-330, 484, 9},
{-332, 678, 3},
{-342, 1274, 1200},
{-344, 1699, 0},
{-336, 1497, 1418},
{-334, 1417, 0},
{-338, 1629, 0},
{0, 1653, 1515},
{0, 1554, 1405},
{0, 1181, 1445},
{-178, 562, 9},
{0, 691, 3},
{-214, 1268, 1433},
{-347, 603, 103},
{-348, 1552, 0},
{-349, 1552, 0},
{-214, 1569, 0},
{0, 692, 3},
{0, 350, 5},
{-351, 484, 9},
{-352, -409, 3},
{-353, -409, 3},
{-255, 1201, 1177},
{0, -415, 3},
{-257, 1196, 1187},
{-258, 1631, 0},
{-214, 1268, 1222},
{-354, 578, 93},
{-355, 578, 93},
{-356, 578, 93},
{-357, 578, 93},
{-358, 578, 93},
{-359, 578, 93},
{-360, 578, 93},
{0, 361, 10},
{0, 362, 10},
{-363, 568, 3},
{0, 364, 10},
{-367, 659, 102},
{-368, 659, 102},
{-369, 1458, 0},
{-370, 1458, 0},
{-371, 659, 102},
{-372, -299, 10},
{-342, 1274, 1223},
{-336, 1497, 1192},
{-334, 374, 10},
{-338, 376, 10},
{-342, 1566, 1409},
{-336, 510, 93},
{-379, 1653, 1515},
{0, 1181, 1448},
{-215, 1397, 0},
{0, 381, 5},
{-382, 568, 3},
{-383, 511, 96},
{-384, 696, 96},
{0, 1633, 0},
{-340, 377, 10},
{0, 374, 10},
{-386, 683, 102},
{-387, 683, 102},
{-388, 1653, 0},
{-389, 1653, 0},
{-390, 683, 102},
{-342, 1274, 1213},
{-391, 684, 103},
{-392, 1554, 0},
{-393, 1554, 0},
{-342, 1566, 0},
{0, 698, 10},
{0, 699, 3},
{-394, 700, 3},
{-207, 1204, 1199},
{0, 1497, 1192},
{0, 398, 10},
{0, 703, 3},
{0, 993, 10},
{0, 1634, 0},
{0, 995, 10},
{0, 403, 10},
{0, 457, 2},
{0, 156, 16},
{0, 460, 22},
{0, 546, 9},
{0, 462, 36},
{0, 463, 9},
{0, 464, 9},
{0, 548, 9},
{0, 466, 9},
{0, 467, 9},
{0, 468, 9},
{0, 469, 9},
{0, 550, 9},
{0, 551, 9},
{-155, 569, 11},
{-230, 1523, 0},
{0, 1518, 0},
{-235, 1496, 0},
{0, 608, 2},
{0, 609, 2},
{0, 610, 2},
{0, 611, 2},
{0, 612, 2},
{0, 613, 2},
{0, 615, 2},
{0, 616, 2},
{0, 617, 2},
{0, 618, 2},
{0, 619, 2},
{0, 620, 2},
{0, 621, 2},
{0, 622, 2},
{0, 623, 2},
{0, 624, 2},
{0, 625, 2},
{0, 626, 2},
{0, 627, 2},
{0, 628, 2},
{0, 629, 2},
{0, 630, 2},
{0, 631, 2},
{0, 632, 2},
{0, 633, 2},
{0, 634, 2},
{0, 635, 2},
{0, 636, 2},
{0, 637, 2},
{0, 638, 2},
{0, 639, 2},
{0, 640, 2},
{0, 641, 2},
{0, 642, 2},
{0, 643, 2},
{0, 644, 2},
{0, 645, 2},
{0, 647, 2},
{0, 648, 2},
{0, 649, 2},
{-286, 651, 2},
{0, 294, 10},
{-303, -302, 11},
{0, 669, 9},
{0, 689, 9},
{-346, 690, 5},
{0, 396, 38},
{0, 1271, 0},
{0, 702, 9},
{0, 399, 38},
{0, 1563, 0},
{0, 704, 9},
{0, 994, 39},
{0, 402, 5},
{0, 996, 39},
{0, 404, 5},
{0, 512, 122},
};
static struct SXP_bases nt_bases[]={{0,0,0},
{-712, 2174, 1150},
{-752, 1715, 1103},
{-16, 1715, 1650},
{-753, -722, 55},
{-712, 1715, 1134},
{-728, 1974, 1053},
{-20, 0, 0},
{-777, 0, 0},
{-792, -751, 55},
{-752, 1715, 1648},
{-32, 0, 0},
{-31, 1934, 1012},
{-433, 0, 0},
{-802, 1109, 1048},
{-436, 0, 0},
{-51, 0, 0},
{-60, 0, 0},
{-839, 0, 0},
{-62, 0, 0},
{-747, 1790, 1769},
{-878, -722, 55},
{-118, -117, 121},
{-892, 0, 0},
{-845, 1610, 0},
{-752, 1715, 1820},
{-752, 1715, 1802},
{-1, 0, 0},
{-2, 0, 0},
{-724, 1109, 1048},
{-728, 1974, 1038},
{-731, 0, 0},
{-732, 1109, 1043},
{-735, 1828, 0},
{-738, 0, 0},
{-739, 0, 0},
{-7, -6, 121},
{-9, -8, 121},
{-742, 1970, 1796},
{-747, 1960, 1770},
{-747, 1965, 999},
{-747, 1965, 1870},
{-428, 1934, 1024},
{-430, 0, 0},
{-18, 0, 0},
{-766, 0, 0},
{-21, -770, 55},
{-747, 1990, 1072},
{-778, 1969, 1836},
{-782, 1960, 1656},
{-784, 1969, 0},
{-785, 1969, 0},
{-786, 1969, 0},
{-793, 1969, 0},
{-747, 1990, 1675},
{-520, 0, 0},
{-747, 1965, 1803},
{-432, 0, 0},
{-29, 0, 0},
{-799, 0, 0},
{-800, 1568, 1059},
{-800, 1952, 1057},
{-806, 0, 0},
{-809, 1572, 1580},
{-43, 0, 0},
{-747, 1790, 1762},
{-747, 1990, 1701},
{-747, 1990, 1711},
{-747, 1990, 1848},
{-52, 0, 0},
{-55, 1934, 1013},
{-833, 0, 0},
{-58, 0, 0},
{-524, 0, 0},
{-800, 1568, 1061},
{-791, -438, 159},
{-845, 1868, 1670},
{-719, 1993, 0},
{-747, 1990, 1843},
{-742, 1970, 1750},
{-78, 0, 0},
{-747, 1990, 1845},
{-83, 0, 0},
{-87, 0, 0},
{-105, 0, 0},
{-109, 0, 0},
{-116, 0, 0},
{-120, 1572, 1063},
{-845, 1868, 1695},
{-747, 1965, 1864},
{-747, 1990, 1872},
{-132, 0, 0},
{-133, 0, 0},
{-900, 1592, 1112},
{-135, 0, 0},
{-140, 0, 0},
{-712, 2174, 1981},
{-753, -722, 55},
{-16, 1715, 1650},
{-792, 1669, 1565},
{-752, 1715, 1106},
{-752, 1715, 1113},
{-752, 1715, 1125},
{-752, 1715, 1126},
{-437, 0, 0},
{-64, 0, 0},
{-802, 1109, 1048},
{-526, 0, 0},
{-113, 0, 0},
{-440, 0, 0},
{-878, -722, 55},
{-892, 1866, 0},
{-16, 1715, 1650},
{-712, 1715, 1130},
{-712, 1715, 1132},
{-752, 1715, 1830},
{-16, 1715, 1650},
{-3, -721, 55},
{-4, -725, 55},
{-5, -725, 55},
{-730, -729, 55},
{-736, 0, 0},
{-737, 0, 0},
{-424, 0, 0},
{-742, 1970, 1883},
{-11, 1969, 0},
{-12, 1969, 0},
{-750, 0, 0},
{-761, 1585, 0},
{-764, 1962, 0},
{-768, -767, 55},
{-769, 0, 0},
{-778, 1969, 1853},
{-787, 1669, 1698},
{-794, 1969, 0},
{-795, 1969, 0},
{-712, 1715, 1985},
{-724, 1109, 1048},
{-23, 0, 0},
{-712, 1715, 1988},
{-712, 1715, 1991},
{-712, 1715, 1994},
{-27, -721, 55},
{-747, 1990, 1065},
{-723, 1109, 1069},
{-34, 0, 0},
{-747, 1990, 1675},
{-728, 1974, 1550},
{-36, 1974, 0},
{-37, -729, 55},
{-38, 0, 0},
{-810, -722, 55},
{-39, -722, 55},
{-40, 0, 0},
{-812, -811, 55},
{-521, 0, 0},
{-41, 1828, 0},
{-42, 0, 0},
{-44, 0, 0},
{-813, 0, 0},
{-816, 1955, 1727},
{-820, 0, 0},
{-46, 1960, 0},
{-747, 1990, 1832},
{-825, -751, 55},
{-826, -751, 55},
{-827, -751, 55},
{-828, -751, 55},
{-829, -751, 55},
{-522, 0, 0},
{-523, 0, 0},
{-747, 1965, 1854},
{-53, 0, 0},
{-57, 1934, 1014},
{-428, 1934, 1029},
{-59, 0, 0},
{-834, 0, 0},
{-835, 0, 0},
{-836, 0, 0},
{-837, 0, 0},
{-840, 1109, 1048},
{-800, 1568, 1062},
{-761, 1957, 0},
{-63, 1962, 0},
{-843, -722, 55},
{-66, -767, 55},
{-851, 0, 0},
{-68, 1790, 1730},
{-855, 1790, 1730},
{-856, 1790, 1730},
{-857, 1790, 1730},
{-747, 1965, 1685},
{-70, 0, 0},
{-742, 1970, 1884},
{-72, 1969, 0},
{-747, 1965, 1587},
{-74, 0, 0},
{-75, -861, 55},
{-867, 1955, 1664},
{-79, 1969, 0},
{-80, 0, 0},
{-81, -861, 55},
{-869, 1960, 0},
{-870, 1960, 0},
{-871, 1960, 0},
{-872, 1960, 0},
{-747, 1965, 1766},
{-873, 1960, 0},
{-84, 1969, 0},
{-85, 0, 0},
{-86, -861, 55},
{-874, 1960, 0},
{-88, 1969, 0},
{-89, 0, 0},
{-90, -861, 55},
{-875, 1960, 0},
{-91, -861, 55},
{-92, -861, 55},
{-93, -861, 55},
{-94, -861, 55},
{-95, -861, 55},
{-96, -861, 55},
{-97, -861, 55},
{-98, -861, 55},
{-99, -861, 55},
{-100, -861, 55},
{-101, -861, 55},
{-102, -861, 55},
{-103, -861, 55},
{-104, -861, 55},
{-876, -438, 159},
{-106, 1969, 0},
{-107, 0, 0},
{-108, -861, 55},
{-110, 0, 0},
{-747, 1990, 1056},
{-747, 1965, 1857},
{-747, 1990, 1055},
{-747, 1965, 1860},
{-880, 0, 0},
{-881, 0, 0},
{-882, 0, 0},
{-883, 0, 0},
{-884, 0, 0},
{-800, 1952, 1060},
{-800, 1568, 1739},
{-122, 1572, 1066},
{-123, 1572, 1580},
{-39, -722, 55},
{-124, 0, 0},
{-125, -811, 55},
{-889, 1592, 1741},
{-127, 0, 0},
{-893, 0, 0},
{-782, 1955, 1686},
{-747, 1965, 1795},
{-747, 1990, 1865},
{-896, -722, 55},
{-134, 0, 0},
{-897, 0, 0},
{-898, 0, 0},
{-800, 1568, 1064},
{-39, -722, 55},
{-902, 0, 0},
{-903, 0, 0},
{-904, 0, 0},
{-905, 0, 0},
{-906, 0, 0},
{-136, 1868, 1640},
{-908, 1868, 1640},
{-909, 1868, 1640},
{-910, 1868, 1640},
{-747, 1965, 998},
{-747, 1990, 1104},
{-712, 1715, 1128},
{-913, 0, 0},
{-747, 1965, 1792},
{-747, 1990, 1767},
{-916, 0, 0},
{-916, 1592, 1824},
{-141, 0, 0},
{-800, 1568, 1058},
{-853, 0, 0},
{-142, 0, 0},
{-747, 1965, 1799},
{-747, 1965, 1827},
{-747, 1990, 1078},
{-747, 1965, 1852},
{-747, 1990, 1075},
{-747, 1965, 1856},
};
static struct SXP_item vector[]={
{55, -746},
{55, -746},
{114, -138},
{114, -13},
{11, -15},
{67, -723},
{13, -419},
{11, -47},
{55, -119},
{13, -419},
{55, -746},
{55, -121},
{79, -423},
{80, -423},
{11, -48},
{68, -803},
{13, -419},
{55, -746},
{68, -114},
{72, -803},
{55, -746},
{83, -723},
{72, -114},
{55, -746},
{96, -422},
{97, -422},
{11, -49},
{11, -50},
{13, -419},
{13, -419},
{12, -441},
{13, -514},
{12, -442},
{13, -514},
{12, -531},
{13, -514},
{12, -426},
{13, -514},
{90, -917},
{90, -801},
{97, -19},
{90, -838},
{90, -841},
{84, -33},
{90, -899},
{5, -14},
{144, -30},
{144, -54},
{144, -56},
{55, -746},
{162, -138},
{162, -13},
{107, -112},
{107, -111},
{55, -722},
{141, -755},
{142, -756},
{3, -214},
{144, -756},
{5, -214},
{141, -832},
{142, -756},
{107, -28},
{144, -756},
{10, -214},
{12, 937},
{13, 147},
{14, 148},
{15, 924},
{107, -772},
{17, 149},
{18, 150},
{107, -921},
{3, 501},
{3, 668},
{107, -919},
{3, 577},
{10, 271},
{24, -214},
{11, 586},
{11, 585},
{3, 596},
{3, 673},
{11, 471},
{9, 544},
{11, 459},
{10, 242},
{10, 278},
{3, 573},
{3, -256},
{6, 990},
{2, 701},
{10, 375},
{3, -339},
{3, -254},
{10, 293},
{12, 553},
{10, -299},
{6, 990},
{6, 176},
{10, -339},
{107, -912},
{6, 987},
{9, 562},
{12, 553},
{12, 553},
{3, -341},
{5, -256},
{12, 553},
{9, 575},
{3, 589},
{24, 661},
{10, -256},
{10, -341},
{9, 490},
{3, -260},
{5, -254},
{10, -238},
{9, 549},
{9, 509},
{11, 164},
{10, -254},
{10, 272},
{10, 377},
{40, 991},
{3, 502},
{24, -256},
{6, 146},
{7, 444},
{8, 533},
{12, 553},
{3, 688},
{10, 301},
{12, 445},
{9, 549},
{24, -254},
{11, 164},
{9, 549},
{1, 923},
{39, 151},
{19, 534},
{4, 443},
{21, 925},
{6, 146},
{7, 444},
{8, 533},
{3, -310},
{3, 666},
{5, -310},
{12, 445},
{3, -260},
{10, 182},
{5, -260},
{10, -310},
{10, 308},
{3, 563},
{19, 534},
{10, -260},
{21, 925},
{10, 272},
{42, 223},
{9, 544},
{3, 663},
{3, 601},
{80, 554},
{39, 151},
{5, 397},
{24, -310},
{166, -901},
{11, -215},
{10, 251},
{24, -260},
{80, 554},
{80, 554},
{9, 549},
{11, -340},
{51, 978},
{6, 941},
{53, 979},
{54, 980},
{9, 465},
{9, 465},
{11, 163},
{11, 163},
{93, -211},
{27, -215},
{27, 305},
{29, -215},
{9, 549},
{9, 670},
{11, 164},
{27, -340},
{35, 451},
{29, -340},
{37, 927},
{38, 985},
{39, 986},
{9, 491},
{9, 694},
{38, 989},
{43, 152},
{44, 452},
{45, 453},
{46, 929},
{47, 930},
{48, 454},
{49, 540},
{9, 549},
{29, 165},
{11, 164},
{39, 151},
{39, 151},
{55, 931},
{51, 978},
{9, 509},
{53, 979},
{54, 980},
{121, 154},
{39, 151},
{62, 932},
{63, 933},
{50, 942},
{51, 943},
{52, 944},
{53, 945},
{54, 946},
{9, 576},
{29, 165},
{11, 650},
{9, 576},
{10, 247},
{74, 455},
{75, 934},
{76, 541},
{77, 935},
{78, 542},
{79, 936},
{39, 151},
{6, 941},
{121, 154},
{114, 153},
{9, 549},
{121, 154},
{11, 164},
{24, 587},
{9, 614},
{103, -310},
{104, -310},
{105, -310},
{106, -310},
{9, 549},
{93, -261},
{9, 576},
{10, 285},
{11, 650},
{10, 282},
{99, 543},
{100, 456},
{121, 154},
{101, -215},
{102, -215},
{103, -262},
{104, -262},
{105, -262},
{106, -262},
{101, -340},
{102, -340},
{103, -341},
{104, -341},
{105, -341},
{106, -341},
{103, -258},
{104, -258},
{105, -258},
{106, -258},
{9, 576},
{10, 981},
{9, 590},
{9, 576},
{10, 247},
{101, 166},
{9, 667},
{50, 942},
{51, 943},
{52, 944},
{53, 945},
{54, 946},
{9, 576},
{9, 695},
{9, 490},
{24, 587},
{120, 160},
{120, 160},
{114, 153},
{115, 159},
{116, 167},
{117, 168},
{10, 272},
{10, 283},
{101, 166},
{120, 160},
{12, 553},
{3, -378},
{115, 983},
{116, 167},
{117, 168},
{118, 205},
{119, 206},
{120, 160},
{10, -378},
{3, -333},
{3, -335},
{114, 153},
{115, 159},
{116, 167},
{117, 168},
{10, 284},
{10, -333},
{10, -335},
{10, 505},
{9, 576},
{116, 167},
{117, 168},
{9, 549},
{107, 481},
{11, 164},
{3, -262},
{107, 481},
{5, -262},
{9, 491},
{9, 490},
{9, 465},
{11, 982},
{10, -262},
{9, 667},
{118, 205},
{119, 206},
{120, 160},
{118, 205},
{119, 206},
{120, 160},
{9, 491},
{9, 490},
{107, 481},
{11, 244},
{10, 345},
{12, 553},
{24, -262},
{10, 380},
{81, 487},
{107, 481},
{83, 488},
{84, 591},
{9, 476},
{118, 205},
{119, 206},
{120, 160},
{116, 167},
{117, 168},
{11, 655},
{6, 987},
{118, 205},
{119, 206},
{120, 160},
{6, 146},
{51, 956},
{12, 553},
{53, 957},
{54, 958},
{80, 554},
{12, 553},
{57, 959},
{115, 159},
{107, 481},
{30, 187},
{27, 656},
{107, 481},
{10, 245},
{11, 246},
{107, 504},
{93, -261},
{105, 605},
{106, 606},
{93, -207},
{118, 205},
{119, 206},
{120, 160},
{118, 205},
{119, 206},
{120, 160},
{118, 205},
{119, 206},
{120, 160},
{11, 246},
{40, 988},
{115, 159},
{118, 205},
{119, 206},
{120, 160},
{120, 160},
{105, 686},
{106, 687},
{103, -378},
{104, -378},
{105, -378},
{106, -378},
{51, 960},
{24, 183},
{53, 961},
{54, 962},
{27, 184},
{56, 963},
{29, 165},
{58, 964},
{59, 965},
{60, 966},
{61, 967},
{6, 941},
{107, 481},
{64, 968},
{65, 969},
{66, 970},
{67, 971},
{68, 972},
{69, 973},
{70, 974},
{71, 975},
{72, 976},
{73, 977},
{118, 205},
{119, 206},
{120, 160},
{29, 165},
{29, 657},
{29, 681},
{29, 582},
{115, 159},
{27, 461},
{118, 205},
{119, 206},
{120, 160},
{27, 547},
{120, 160},
{118, 205},
{119, 206},
{120, 160},
{27, 567},
{29, 165},
{115, 159},
{117, 168},
{102, 659},
{94, 592},
{95, 593},
{96, 594},
{97, 595},
{121, 154},
{29, 165},
{39, 151},
{5, 400},
{115, 188},
{120, 160},
{50, 942},
{51, 943},
{52, 944},
{53, 945},
{54, 946},
{39, 151},
{11, -340},
{85, 473},
{86, 474},
{11, -215},
{85, -233},
{89, 938},
{90, 939},
{88, -234},
{121, 154},
{93, 185},
{114, 153},
{115, 158},
{121, 154},
{93, 510},
{98, 940},
{10, 271},
{27, -340},
{101, 166},
{29, -340},
{27, -215},
{51, 947},
{29, -215},
{53, 948},
{54, 949},
{38, 992},
{56, 950},
{57, 951},
{58, 952},
{59, 953},
{60, 954},
{61, 955},
{85, 228},
{91, 231},
{92, 232},
{3, 599},
{89, 229},
{120, 160},
{101, 166},
{101, 658},
{101, 682},
{101, 583},
{10, 250},
{3, 984},
{3, 498},
{3, 499},
{3, 564},
{3, 500},
{3, 653},
{9, 602},
{3, 506},
{10, 273},
{10, 274},
{101, 166},
{10, 275},
{10, 288},
{3, -337},
{10, 322},
{3, -259},
{55, -807},
{3, 697},
{3, 705},
{101, 166},
{10, -337},
{55, -760},
{10, 309},
{114, 153},
{10, 385},
{10, 401},
{84, 485},
{27, 479},
{97, -35},
{87, 588},
{115, 159},
{116, 167},
{114, 153},
{115, 159},
{116, 167},
{117, 168},
{103, 603},
{104, 604},
{103, 684},
{104, 685},
{98, 227},
{24, 183},
{13, -514},
{93, -261},
{27, 184},
{11, 679},
{55, -911},
{16, -17},
{101, -340},
{102, -340},
{89, -808},
{101, -215},
{102, -215},
{13, 147},
{14, 148},
{15, 924},
{93, -211},
{17, 149},
{18, 150},
{39, 151},
{20, 535},
{27, 680},
{22, 446},
{23, 536},
{11, 580},
{25, 447},
{26, 448},
{121, -823},
{28, 449},
{3, -859},
{104, -762},
{31, 926},
{32, 537},
{33, 538},
{34, 450},
{35, 451},
{55, -907},
{37, 927},
{38, 928},
{39, 151},
{27, 581},
{41, 539},
{114, -73},
{43, 152},
{44, 452},
{45, 453},
{46, 929},
{47, 930},
{48, 454},
{49, 540},
{51, 956},
{11, -343},
{53, 957},
{54, 958},
{121, -788},
{55, 931},
{57, 959},
{94, -186},
{95, -186},
{96, -186},
{97, -186},
{98, 225},
{62, 932},
{63, 933},
{11, -216},
{55, -751},
{55, -844},
{27, -343},
{159, -434},
{29, -343},
{93, 185},
{55, -746},
{159, -435},
{122, -891},
{74, 455},
{75, 934},
{76, 541},
{77, 935},
{78, 542},
{79, 936},
{27, -216},
{76, -864},
{29, -216},
{0, 0},
{108, 263},
{109, 264},
{110, 265},
{111, 266},
{112, 267},
{113, 268},
{162, -73},
{55, -890},
{159, -527},
{0, 0},
{114, 153},
{115, 159},
{102, 683},
{55, -746},
{192, -824},
{99, 543},
{100, 456},
{0, 0},
{121, -845},
{122, -891},
{93, -65},
{172, -845},
{0, 0},
{55, -746},
{175, -849},
{176, -845},
{159, -439},
{55, -716},
{107, -865},
{0, 0},
{114, 153},
{102, 584},
{60, -513},
{166, -137},
{167, -891},
{114, -431},
{169, -911},
{0, 0},
{0, 0},
{107, -796},
{173, -137},
{192, -790},
{175, -849},
{122, -864},
{195, -791},
{124, -865},
{133, -744},
{75, -718},
{76, -719},
{122, -846},
{0, 0},
{130, -865},
{3, -914},
{55, -886},
{0, 0},
{3, -859},
{114, -859},
{101, -343},
{102, -343},
{3, -143},
{76, -814},
{140, -864},
{120, -860},
{166, -525},
{167, -891},
{107, -821},
{169, -907},
{71, -885},
{72, -115},
{172, -845},
{101, -216},
{102, -216},
{13, -532},
{176, -845},
{122, -891},
{107, -830},
{121, -788},
{164, -783},
{106, -719},
{55, -915},
{0, 0},
{109, -720},
{124, -821},
{162, -866},
{0, 0},
{164, -868},
{90, -885},
{3, -918},
{130, -821},
{192, -845},
{13, -528},
{119, -421},
{0, 0},
{166, -847},
{167, -846},
{168, -848},
{169, -844},
{165, -797},
{114, -431},
{178, -776},
{13, -528},
{114, -431},
{55, -746},
{76, -10},
{162, -859},
{162, -789},
{122, -814},
{164, -894},
{121, -747},
{182, -848},
{189, -431},
{184, -850},
{3, -920},
{186, -848},
{159, -515},
{108, -76},
{3, -922},
{162, -789},
{166, -525},
{167, -891},
{122, -887},
{169, -890},
{75, -741},
{76, -818},
{140, -814},
{170, -749},
{171, -747},
{172, -747},
{160, -830},
{161, -830},
{3, -754},
{107, -129},
{125, -76},
{114, -431},
{182, -126},
{128, -77},
{55, -900},
{114, -82},
{186, -126},
{187, -126},
{114, -69},
{114, -10},
{57, -733},
{0, 0},
{55, -746},
{60, -734},
{162, -815},
{192, -790},
{164, -817},
{162, -431},
{195, -791},
{164, -854},
{0, 0},
{126, -10},
{130, -130},
{55, -746},
{109, -741},
{55, -746},
{171, -747},
{172, -747},
{55, -746},
{108, -743},
{178, -776},
{114, -914},
{166, -888},
{167, -887},
{114, -859},
{169, -886},
{0, 0},
{122, -818},
{114, -143},
{173, -525},
{120, -895},
{189, -431},
{114, -798},
{116, -144},
{189, -431},
{55, -746},
{125, -743},
{192, -747},
{133, -744},
{162, -431},
{184, -850},
{164, -819},
{55, -746},
{162, -82},
{159, -425},
{140, -818},
{162, -69},
{162, -10},
{164, -858},
{164, -748},
{115, -139},
{116, -139},
{117, -529},
{118, -530},
{107, -822},
{170, -749},
{114, -918},
{180, -45},
{181, -45},
{182, -45},
{115, -145},
{116, -145},
{117, -529},
{118, -530},
{159, -425},
{107, -862},
{189, -431},
{107, -863},
{0, 0},
{162, -914},
{107, -797},
{124, -822},
{162, -859},
{189, -69},
{123, -779},
{170, -749},
{162, -143},
{130, -822},
{127, -780},
{128, -780},
{162, -798},
{114, -920},
{124, -862},
{114, -831},
{124, -863},
{114, -922},
{114, -877},
{107, -129},
{130, -862},
{114, -879},
{130, -863},
{123, -781},
{174, -798},
{114, -128},
{107, -131},
{127, -780},
{128, -780},
{1, -706},
{2, -417},
{114, -754},
{0, 0},
{5, -417},
{121, -823},
{0, 0},
{162, -918},
{166, -901},
{108, -745},
{108, -71},
{169, -900},
{0, 0},
{130, -130},
{11, -22},
{12, -516},
{13, -419},
{11, -24},
{12, -517},
{13, -419},
{11, -25},
{12, -518},
{13, -419},
{11, -26},
{12, -519},
{13, -419},
{125, -745},
{125, -71},
{55, -746},
{18, -67},
{55, -842},
{165, -797},
{162, -920},
{55, -746},
{162, -831},
{55, -763},
{162, -922},
{162, -877},
{55, -751},
{69, -804},
{162, -879},
{71, -805},
{55, -746},
{55, -740},
{162, -128},
{159, -439},
{174, -831},
{55, -726},
{75, -741},
{174, -877},
{162, -754},
{161, -131},
{174, -879},
{75, -741},
{0, 0},
{75, -765},
{0, 0},
{0, 0},
{75, -748},
{173, -525},
{90, -805},
{175, -849},
{75, -741},
{75, -741},
{0, 0},
{0, 0},
{55, -852},
{75, -727},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{122, -427},
{0, 0},
{192, -824},
{0, 0},
{0, 0},
{104, -61},
{0, 0},
{0, 0},
{109, -741},
{75, -741},
{76, -771},
{0, 0},
{75, -718},
{109, -741},
{0, 0},
{109, -765},
{0, 0},
{0, 0},
{109, -748},
{0, 0},
{121, -788},
{0, 0},
{109, -741},
{109, -741},
{146, -429},
{0, 0},
{148, -427},
{109, -727},
{0, 0},
{0, 0},
{0, 0},
{153, -757},
{133, -744},
{155, -758},
{121, -747},
{0, 0},
{0, 0},
{159, -759},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{109, -741},
{0, 0},
{108, -853},
{109, -720},
{133, -744},
{114, -431},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{159, -434},
{122, -771},
{0, 0},
{159, -515},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{133, -744},
{159, -425},
{170, -749},
{171, -747},
{172, -747},
{159, -425},
{164, -748},
{140, -771},
{0, 0},
{0, 0},
{164, -748},
{164, -744},
{170, -749},
{0, 0},
{0, 0},
{0, 0},
{170, -749},
{171, -747},
{172, -747},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{192, -790},
{0, 0},
{159, -425},
{195, -791},
{0, 0},
{162, -773},
{163, -774},
{164, -775},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{170, -749},
{192, -747},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{178, -776},
{0, 0},
{180, -774},
{0, 0},
{182, -774},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{189, -431},
{6, -707},
{7, -708},
{8, -709},
{9, -710},
{10, -711},
{11, -707},
{12, -418},
{13, -419},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{25, -713},
{26, -714},
{27, -715},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{55, -716},
{0, 0},
{57, -717},
{0, 0},
{0, 0},
{60, -420},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{75, -718},
{76, -719},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{106, -719},
{0, 0},
{0, 0},
{109, -720},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{0, 0},
{119, -421},
};
static struct SXP_prdct prdcts[]={
{1, -276},
{-1, -277},
{1, -279},
{-1, -280},
{1, 672},
{-1, 0},
{1, -276},
{-1, -315},
{1, -279},
{-1, -316},
{1, 693},
{-1, 0},
};

static  SXBA_ELT SXPBA_kt5
#if SXBITS_PER_LONG==32
 [20] = {582, 0X0600052E, 0X00008000, 0X00002000, 0X081F00F5, 0X00003900, 0X80000002, 
0X00000000, 0X80000000, 0X40040000, 0X00000FF9, 0X00010000, 0X00000210, 0X00100000, 0X10000000, 
0X80000000, 0X02800000, 0X00000001, 0XB4000000, 0X0000003F, }
#else
 [11] = {582, 0X000080000600052E, 0X081F00F500002000, 0X8000000200003900, 
0X8000000000000000, 0X00000FF940040000, 0X0000021000010000, 0X1000000000100000, 
0X0280000080000000, 0XB400000000000001, 0X000000000000003F, }
#endif
/* End SXPBA_kt5 */;
static SXBA SXPBM_trans[]={NULL,
&SXPBA_kt5[0],
};
static SXINT P_lrgl[]={
5,0,-1,1,2,3,0,0,
5,0,-1,2,3,4,0,0,
4,0,2,3,4,0,0,0,
7,0,-1,-1,1,2,3,4,
5,-1,0,1,2,3,0,0,
5,-1,1,2,3,4,0,0,
4,1,2,3,4,0,0,0,
4,-1,2,3,4,0,0,0,
5,-1,-1,1,2,3,0,0,
};
static SXINT *P_lregle[]={NULL,
&P_lrgl[0],
&P_lrgl[8],
&P_lrgl[16],
&P_lrgl[24],
&P_lrgl[32],
&P_lrgl[40],
&P_lrgl[48],
&P_lrgl[56],
&P_lrgl[64],
};
static SXINT P_right_ctxt_head[]={0,
1,2,2,1,1,1,1,2,1,};
static SXINT P_param_ref[]={
-2,1,
1,-2,
1,
-2,-3,1,
-1,0,1,
0,1,-1,
0,1,
0,1,-1,
0,1,-1,-2,
-1,1,
};
static struct SXP_local_mess SXP_local_mess[]={{0,NULL,NULL},
{2,"%s\"%s\" is inserted before \"%s\".",&P_param_ref[0]},
{2,"%s\"%s\" is replaced by \"%s\".",&P_param_ref[2]},
{1,"%s\"%s\" is deleted.",&P_param_ref[4]},
{3,"%s\"%s %s\" is inserted before \"%s\".",&P_param_ref[5]},
{3,"%s\"%s\" is inserted before \"%s %s\".",&P_param_ref[8]},
{3,"%s\"%s\" before \"%s\" is replaced by \"%s\".",&P_param_ref[11]},
{2,"%s\"%s\" before \"%s\" is deleted.",&P_param_ref[14]},
{3,"%s\"%s %s\" is replaced by \"%s\".",&P_param_ref[16]},
{4,"%s\"%s\" before \"%s\" is replaced by \"%s %s\".",&P_param_ref[19]},
{2,"%s\"%s\" is forced before \"%s\".",&P_param_ref[23]},
};
static SXINT P_no_delete[]={
3,5,6,42};
static SXINT P_no_insert[]={
28,6,34,39,40,44,45,50,51,52,53,54,56,57,58,59,60,61,64,65,66,67,68,69,70,71,72,73,100};
static char *P_global_mess[]={
"%s\"%s\" is expected",
"%s\"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\", \"%s\", \"%s\" is expected",
"%sGlobal recovery.",
"%sParsing resumes on \"%s\"",
"End Of File",
"%sParsing stops on End Of File.",
};
static SXINT PER_tset[]={
1,5};

static char *err_titles[SXSEVERITIES]={
"\000",
"\001Warning:\t",
"\002Error:\t",
};
static char abstract []= "%d errors and %d warnings are reported.";
extern SXINT PARSACT(SXINT what, SXINT action_no);
extern SXBOOLEAN sxprecovery (SXINT what_to_do, SXINT *at_state, SXINT latok_no);

static unsigned char S_char_to_simple_class[]={
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,5,3,3,3,3,6,7,8,9,10,11,12,13,
14,15,15,15,15,15,15,15,15,15,15,16,3,3,17,3,3,3,18,18,18,19,20,18,18,
21,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,3,3,3,3,3,3,
22,22,22,23,24,22,22,25,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,
22,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,};
static SXSTMI SXS_transition[]={0,
0x0,0x9001,0x0,0x9402,0x2c02,0x2c03,0x4409,0x440a,0x2404,0x4465,0x4403,0x441d,
0x2c05,0x2406,0x900c,0x4418,0x4402,0x900f,0x900f,0x900f,0x900f,0x9011,0x9011,0x9011,
0x9011,
0x0,0x0,0x1c02,0x0,0x2c0b,0x1c02,0x1c02,0x1c02,0x1c02,0x1c02,0x1c02,0x1c02,
0x1c02,0x1c02,0x1c02,0x1c02,0x1c02,0x1c02,0x1c02,0x1c02,0x1c02,0x1c02,0x1c02,0x1c02,
0x1c02,
0x0,0x0,0x1c03,0x0,0x1c03,0x2c0c,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,
0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,
0x1c03,
0x0,0x0,0x0,0x400b,0x400b,0x400b,0x400b,0x400b,0x4466,0x400b,0x400b,0x400b,
0x400b,0x0,0x400b,0x0,0x0,0x400b,0x400b,0x400b,0x400b,0x400b,0x400b,0x400b,
0x400b,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x9014,0x0,0x0,0x2c0e,0x2c0e,0x2c0e,0x2c0e,0x9c13,0x9c13,0x9c13,
0x9c13,
0x0,0x0,0x0,0x401b,0x401b,0x401b,0x401b,0x401b,0x0,0x401b,0x401b,0x401b,
0x401b,0x445d,0x401b,0x401b,0x0,0x401b,0x401b,0x401b,0x401b,0x401b,0x401b,0x401b,
0x401b,
0x0,0x0,0x0,0x4073,0x0,0x0,0x4073,0x4073,0x4073,0x4073,0x4073,0x4073,
0x700f,0x4073,0x1c07,0x4073,0x0,0x2c10,0x2c11,0x2c12,0x9c03,0x9c16,0x9c17,0x9c18,
0x9c19,
0x0,0x0,0x0,0x9004,0x9004,0x9004,0x9004,0x9004,0x9004,0x9004,0x9004,0x9004,
0x9004,0x9004,0x901a,0x9004,0x9004,0x901a,0x901a,0x901a,0x901a,0x901c,0x901c,0x901c,
0x901c,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x901e,0x0,0x0,0x9005,0x9005,0x9005,0x9005,0x9005,0x9005,0x9005,
0x9005,
0x0,0x0,0x0,0x0,0x0,0x0,0x4062,0x4062,0x0,0x0,0x4062,0x0,
0x4062,0x4062,0x1c0a,0x4062,0x0,0x4062,0x4062,0x4062,0x9c03,0x4062,0x4062,0x4062,
0x9c19,
0x0,0x0,0x0,0x9006,0x2402,0x0,0x0,0x9006,0x0,0x0,0x9006,0x0,
0x9006,0x9006,0x0,0x9006,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
0x0,0x0,0x0,0x4078,0x0,0x2c03,0x0,0x4078,0x0,0x0,0x4078,0x0,
0x4078,0x4078,0x0,0x4078,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
0x0,0x0,0x0,0x4074,0x0,0x0,0x0,0x4074,0x4074,0x4074,0x4074,0x4074,
0x4074,0x4074,0x1c0d,0x4074,0x0,0x0,0x2c13,0x2c14,0x0,0x0,0x9c20,0x9c21,
0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x3c00,0x0,0x0,0x0,0x0,0x1c0e,0x1c0e,0x1c0e,0x1c0e,0x9c13,0x9c13,0x9c13,
0x9c13,
0x1,0x0,0x0,0x2c0d,0x0,0x0,0x0,0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x2c0d,
0x2c0d,0x2c0d,0x2c0d,0x2c0d,0x0,0x4073,0x8015,0x8015,0x4073,0x4073,0x8015,0x8015,
0x4073,
0x0,0x0,0x0,0x9007,0x0,0x0,0x9007,0x0,0x0,0x0,0x9007,0x0,
0x0,0x0,0x1c10,0x0,0x0,0x1c10,0x1c10,0x1c10,0x1c10,0x9c16,0x9c16,0x9c16,
0x9c16,
0x0,0x0,0x0,0x9007,0x0,0x0,0x9007,0x0,0x0,0x2c16,0x9007,0x2c16,
0x0,0x0,0x2c17,0x0,0x0,0x2c10,0x2c10,0x2c10,0x2c10,0x9c16,0x9c16,0x9c16,
0x9c16,
0x0,0x0,0x0,0x9007,0x0,0x0,0x9007,0x0,0x0,0x2c18,0x9007,0x2c18,
0x0,0x0,0x2c19,0x0,0x0,0x2c10,0x2c10,0x2c10,0x2c10,0x9c16,0x9c16,0x9c16,
0x9c16,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2c1a,0x0,0x2c1a,
0x0,0x0,0x2c1b,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2c1c,0x0,0x2c1c,
0x0,0x0,0x2c1d,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
0x1,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2c0d,0x0,0x2c0d,
0x4073,0x0,0x2c0d,0x0,0x0,0x4073,0x4073,0x4073,0x4073,0x4073,0x4073,0x4073,
0x4073,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x2c1e,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
0x0,0x0,0x0,0x9008,0x0,0x0,0x9007,0x9008,0x9008,0x9008,0x9008,0x9008,
0x9008,0x9008,0x1c17,0x9008,0x0,0x2c10,0x2c10,0x2c10,0x2c10,0x9c16,0x9c16,0x9c16,
0x9c16,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x2c1f,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
0x0,0x0,0x0,0x9009,0x0,0x0,0x9007,0x9009,0x9009,0x9009,0x9009,0x9009,
0x9009,0x9009,0x1c19,0x9009,0x0,0x2c10,0x2c10,0x2c10,0x2c10,0x9c16,0x9c16,0x9c16,
0x9c16,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x2c1b,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
0x0,0x0,0x0,0x4075,0x0,0x0,0x0,0x4075,0x4075,0x4075,0x4075,0x4075,
0x4075,0x4075,0x1c1b,0x4075,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x2c1d,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
0x0,0x0,0x0,0x4074,0x0,0x0,0x0,0x4074,0x4074,0x4074,0x4074,0x4074,
0x4074,0x4074,0x1c1d,0x4074,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
0x0,0x0,0x0,0x9008,0x0,0x0,0x0,0x9008,0x9008,0x9008,0x9008,0x9008,
0x9008,0x9008,0x1c1e,0x9008,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
0x0,0x0,0x0,0x9009,0x0,0x0,0x0,0x9009,0x9009,0x9009,0x9009,0x9009,
0x9009,0x9009,0x1c1f,0x9009,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,
};
static SXSTMI *S_transition_matrix[]={NULL,
&SXS_transition[0],
&SXS_transition[25],
&SXS_transition[50],
&SXS_transition[75],
&SXS_transition[100],
&SXS_transition[125],
&SXS_transition[150],
&SXS_transition[175],
&SXS_transition[200],
&SXS_transition[225],
&SXS_transition[250],
&SXS_transition[275],
&SXS_transition[300],
&SXS_transition[325],
&SXS_transition[350],
&SXS_transition[375],
&SXS_transition[400],
&SXS_transition[425],
&SXS_transition[450],
&SXS_transition[475],
&SXS_transition[500],
&SXS_transition[525],
&SXS_transition[550],
&SXS_transition[575],
&SXS_transition[600],
&SXS_transition[625],
&SXS_transition[650],
&SXS_transition[675],
&SXS_transition[700],
&SXS_transition[725],
&SXS_transition[750],
};
static struct SXS_action_or_prdct_code SXS_action_or_prdct_code[]={{0,0,0,0,0},
{0x607a,7,0,0,0},
{0x6005,3,0,0,0},
{0x6078,4,0,0,0},
{0x5072,1,0,0,0},
{0x6079,0,0,0,0},
{0x6078,2,0,0,0},
{0x601e,5,0,0,0},
{0x6075,5,0,0,0},
{0x6074,5,0,0,0},
{0x2008,6,0,0,0},
{0x3000,6,0,0,0},
{0x2c0a,2,0,1,1},
{0x2c09,0,0,0,1},
{0x2c07,0,0,1,1},
{0x3c00,2,0,1,1},
{0x2c08,0,0,1,1},
{0x9c0b,2,0,1,1},
{0x9c0a,0,0,1,1},
{0x200e,6,0,0,0},
{0x4052,2,0,1,1},
{0x2c0d,0,0,1,1},
{0x2010,6,0,0,0},
{0x2011,6,0,0,0},
{0x2012,6,0,0,0},
{0x9003,6,0,0,0},
{0x9004,2,0,1,1},
{0x2c08,0,0,1,1},
{0x9004,2,0,1,1},
{0x9c0a,0,0,1,1},
{0x2c09,0,0,0,1},
{0x0,0,0,1,1},
{0x2013,6,0,0,0},
{0x2014,6,0,0,0},
};
static char *S_adrp[]={0,
"!DO",
"=",
",",
"!FORMAT",
"%EOL",
"END",
"PROGRAM",
"FUNCTION",
"(",
")",
"*",
"CHARACTER",
"INTEGER",
"REAL",
"DOUBLE",
"PRECISION",
"COMPLEX",
"LOGICAL",
"SUBROUTINE",
"ENTRY",
"BLOCK",
"DATA",
"DIMENSION",
":",
"EQUIVALENCE",
"COMMON",
"/",
"IMPLICIT",
"-",
"%int_id",
"PARAMETER",
"EXTERNAL",
"INTRINSIC",
"SAVE",
"ASSIGN",
"TO",
"GO",
"IF",
"THEN",
"ELSE",
"DO",
"%ENDDO",
"CONTINUE",
"STOP",
"PAUSE",
"WRITE",
"READ",
"%READkw",
"PRINT",
"FMT",
"UNIT",
"REC",
"ERR",
"IOSTAT",
"OPEN",
"FILE",
"STATUS",
"ACCESS",
"FORM",
"RECL",
"BLANK",
"CLOSE",
"INQUIRE",
"EXIST",
"OPENED",
"NUMBER",
"NAMED",
"NAME",
"SEQUENTIAL",
"DIRECT",
"FORMATTED",
"UNFORMATTED",
"NEXTREC",
"%BACKSPACEkw",
"BACKSPACE",
"%ENDFILEkw",
"ENDFILE",
"%REWINDkw",
"REWIND",
"FORMAT",
"I",
".",
"A",
"L",
"P",
"T",
"R",
"X",
"S",
"B",
"N",
"Z",
"//",
"F",
"D",
"E",
"G",
"%repeat_spec",
"CALL",
"RETURN",
"+",
"**",
".AND.",
".OR.",
".EQV.",
".NEQV.",
".NOT.",
".LT.",
".LE.",
".EQ.",
".NE.",
".GT.",
".GE.",
"%symbolic_name",
"%unsigned_int_constant",
"%unsigned_real_constant",
"%unsigned_dp_constant",
".TRUE.",
".FALSE.",
"%character_constant",
"%label",
"End Of File",
};
static SXINT S_is_a_keyword[]={
93,6,7,8,12,13,14,15,16,17,18,19,20,21,22,23,25,26,28,31,32,33,34,35,36,37,38,39,40,41,43,44,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,75,77,79,80,81,83,84,85,86,87,88,89,90,91,92,94,95,96,97,99,100,103,104,105,106,107,108,109,110,111,112,113,118,119};
static SXINT S_is_a_generic_terminal[]={
14,5,30,42,48,74,76,78,98,114,115,116,117,120,121};
static SXINT S_lrgl[]={
4,1,2,3,4,0,
5,-1,1,2,3,4,
5,-1,0,1,2,3,
};
static SXINT *S_lregle[]={NULL,
&S_lrgl[0],
&S_lrgl[6],
&S_lrgl[12],
};
static SXINT S_param_ref[]={
0,
0,-1,
-1,0,
};
static struct SXS_local_mess SXS_local_mess[]={{0,NULL,NULL},
{1,"%sThe invalid character \"%s\" is deleted.",&S_param_ref[0]},
{2,"%sThe invalid character \"%s\" is replaced by \"%s\".",&S_param_ref[1]},
{2,"%sThe character \"%s\" is inserted before \"%s\".",&S_param_ref[3]},
};
static SXINT S_no_delete[]={
1,10};
static SXINT S_no_insert[]={
1,10};
static char *S_global_mess[]={0,
"%s\"%s\" is deleted.",
"%sThis unknown keyword is erased.",
"End Of Line",
"End Of File",
"%sScanning stops on End Of File.",
};
extern SXINT SCANACT(SXINT what, SXINT act_no);
extern SXINT sxscan_it(void);
extern SXBOOLEAN sxsrecovery (SXINT sxsrecovery_what, SXINT state_no, unsigned char *class);
static SXINT check_keyword(char *init_string, SXINT init_length);
static struct SXPP_schema SXPP_schema[]={
{7,7},{6,0},{7,1},{8,0},{6,1},{3,1},{6,2},{3,1},{6,0},{6,3},{8,0},{6,4},
{6,0},{8,0},{6,0},{6,0},{8,0},{6,0},{1,1},{5,0},{6,0},{8,0},{6,0},{8,0},
{6,0},{6,0},{1,1},{5,0},{6,0},{8,0},{6,0},{6,0},{1,1},{5,0},{6,0},{1,1},
{5,0},{6,0},{8,0},{7,1},{6,0},{5,0},{6,6},{1,1},{7,1},{8,0},{6,6},{1,1},
{7,1},{8,0},{6,0},{1,1},{5,0},{6,0},{6,0},{8,0},{7,1},{6,0},{5,0},{6,0},
{8,0},{6,7},{3,1},{6,0},{8,0},{6,0},{3,1},{6,8},{3,1},{6,0},{8,0},{6,8},
{3,1},{6,0},{8,0},{6,0},{3,1},{6,9},{6,10},{8,0},{6,0},{3,1},{6,9},{6,0},
{6,10},{8,0},{6,0},{6,11},{6,0},{8,0},{6,12},{8,0},{6,12},{3,1},{6,11},{6,0},
{8,0},{6,13},{8,0},{6,14},{8,0},{6,15},{3,1},{6,16},{8,0},{6,17},{8,0},{6,18},
{8,0},{6,19},{3,1},{6,0},{8,0},{6,0},{6,3},{3,1},{6,0},{8,0},{6,11},{8,0},
{6,20},{3,1},{6,0},{8,0},{6,21},{3,1},{6,22},{8,0},{6,21},{3,1},{6,22},{3,1},
{6,0},{8,0},{6,23},{3,1},{6,0},{8,0},{6,0},{3,1},{6,24},{3,1},{6,0},{8,0},
{6,25},{3,1},{6,0},{8,0},{6,9},{6,0},{6,10},{8,0},{6,26},{3,1},{6,0},{8,0},
{6,27},{6,0},{6,27},{3,1},{6,0},{6,3},{8,0},{6,27},{6,0},{6,27},{3,1},{6,0},
{8,0},{6,27},{6,27},{3,1},{6,0},{6,3},{8,0},{6,27},{6,27},{3,1},{6,0},{8,0},
{6,0},{3,1},{6,0},{8,0},{6,0},{6,11},{6,0},{3,1},{6,0},{8,0},{6,0},{6,11},
{6,0},{6,3},{3,1},{6,0},{8,0},{6,12},{3,1},{6,0},{8,0},{6,12},{6,11},{6,0},
{3,1},{6,0},{8,0},{6,12},{6,11},{6,0},{6,3},{3,1},{6,0},{8,0},{6,28},{3,1},
{6,0},{8,0},{6,0},{6,29},{6,0},{8,0},{6,9},{6,11},{6,10},{8,0},{6,31},{3,1},
{6,9},{6,0},{6,10},{8,0},{6,0},{3,1},{6,2},{3,1},{6,0},{8,0},{6,32},{3,1},
{6,0},{8,0},{6,33},{3,1},{6,0},{8,0},{6,34},{8,0},{6,34},{3,1},{6,0},{8,0},
{6,27},{6,0},{6,27},{8,0},{6,22},{3,1},{6,0},{8,0},{6,0},{3,1},{6,27},{6,0},
{6,27},{8,0},{6,0},{3,1},{6,11},{3,1},{6,0},{8,0},{6,9},{6,0},{3,1},{6,2},
{3,1},{6,0},{6,3},{3,1},{6,0},{6,10},{8,0},{6,9},{6,0},{3,1},{6,2},{3,1},
{6,0},{6,3},{3,1},{6,0},{6,3},{3,1},{6,0},{6,10},{8,0},{6,35},{3,1},{6,0},
{3,1},{6,36},{3,1},{6,0},{8,0},{6,37},{3,1},{6,36},{3,1},{6,0},{8,0},{6,37},
{3,1},{6,36},{3,1},{6,9},{6,0},{6,10},{6,3},{3,1},{6,0},{8,0},{6,37},{3,1},
{6,36},{3,1},{6,9},{6,0},{6,10},{3,1},{6,0},{8,0},{6,37},{3,1},{6,36},{3,1},
{6,0},{6,3},{3,1},{6,9},{6,0},{6,10},{8,0},{6,37},{3,1},{6,36},{3,1},{6,0},
{3,1},{6,9},{6,0},{6,10},{8,0},{6,38},{3,1},{6,9},{6,0},{6,10},{3,1},{6,0},
{6,3},{3,1},{6,0},{6,3},{3,1},{6,0},{8,0},{6,38},{3,1},{6,9},{6,0},{6,10},
{3,1},{6,0},{8,0},{6,38},{3,1},{6,9},{6,0},{6,10},{3,1},{6,39},{6,0},{1,1},
{5,3},{6,0},{1,1},{5,0},{6,0},{8,0},{6,0},{1,1},{5,3},{6,0},{1,1},{5,0},
{6,0},{8,0},{6,40},{3,1},{6,38},{3,1},{6,9},{6,0},{6,10},{3,1},{6,39},{6,0},
{8,0},{7,1},{6,0},{5,0},{6,40},{3,1},{6,38},{3,1},{6,9},{6,0},{6,10},{3,1},
{6,39},{6,0},{8,0},{6,40},{6,0},{8,0},{7,1},{6,0},{5,0},{6,40},{6,0},{8,0},
{6,6},{3,1},{6,38},{8,0},{7,1},{6,0},{5,0},{6,6},{3,1},{6,38},{8,0},{6,41},
{3,1},{6,0},{6,3},{3,1},{6,0},{3,1},{6,2},{3,1},{6,0},{6,0},{8,0},{6,41},
{3,1},{6,0},{3,1},{6,0},{3,1},{6,2},{3,1},{6,0},{6,0},{8,0},{6,0},{1,1},
{5,3},{6,0},{6,0},{8,0},{6,0},{6,3},{3,1},{6,0},{6,3},{3,1},{6,0},{8,0},
{6,43},{8,0},{6,44},{8,0},{6,44},{3,1},{6,0},{8,0},{6,45},{3,1},{8,0},{6,45},
{3,1},{6,0},{8,0},{6,46},{3,1},{6,9},{6,0},{6,10},{3,1},{6,0},{8,0},{6,46},
{3,1},{6,9},{6,0},{6,10},{8,0},{6,47},{3,1},{6,9},{6,0},{6,10},{3,1},{6,0},
{8,0},{6,47},{3,1},{6,9},{6,0},{6,10},{8,0},{6,0},{3,1},{6,0},{6,3},{3,1},
{6,0},{8,0},{6,49},{3,1},{6,0},{6,3},{3,1},{6,0},{8,0},{6,49},{3,1},{6,0},
{8,0},{6,50},{3,1},{6,2},{3,1},{6,0},{8,0},{6,51},{3,1},{6,2},{3,1},{6,0},
{8,0},{6,52},{3,1},{6,2},{3,1},{6,0},{8,0},{6,6},{3,1},{6,2},{3,1},{6,0},
{8,0},{6,53},{3,1},{6,2},{3,1},{6,0},{8,0},{6,54},{3,1},{6,2},{3,1},{6,0},
{8,0},{6,9},{6,0},{6,3},{3,1},{6,0},{3,1},{6,2},{3,1},{6,0},{6,3},{3,1},
{6,0},{6,3},{3,1},{6,0},{6,10},{8,0},{6,9},{6,0},{6,3},{3,1},{6,0},{3,1},
{6,2},{3,1},{6,0},{6,3},{3,1},{6,0},{6,10},{8,0},{6,55},{3,1},{6,9},{6,0},
{6,10},{8,0},{6,56},{3,1},{6,2},{3,1},{6,0},{8,0},{6,57},{3,1},{6,2},{3,1},
{6,0},{8,0},{6,58},{3,1},{6,2},{3,1},{6,0},{8,0},{6,59},{3,1},{6,2},{3,1},
{6,0},{8,0},{6,60},{3,1},{6,2},{3,1},{6,0},{8,0},{6,61},{3,1},{6,2},{3,1},
{6,0},{8,0},{6,62},{3,1},{6,9},{6,0},{6,10},{8,0},{6,63},{3,1},{6,9},{6,0},
{6,10},{8,0},{6,51},{6,2},{3,2},{6,0},{8,0},{6,64},{3,1},{6,2},{3,1},{6,0},
{8,0},{6,65},{3,1},{6,2},{3,1},{6,0},{8,0},{6,66},{3,1},{6,2},{3,1},{6,0},
{8,0},{6,67},{3,1},{6,2},{3,1},{6,0},{8,0},{6,68},{3,1},{6,2},{3,1},{6,0},
{8,0},{6,69},{3,1},{6,2},{3,1},{6,0},{8,0},{6,70},{3,1},{6,2},{3,1},{6,0},
{8,0},{6,71},{3,1},{6,2},{3,1},{6,0},{8,0},{6,72},{3,1},{6,2},{3,1},{6,0},
{8,0},{6,73},{3,1},{6,2},{3,1},{6,0},{8,0},{6,75},{3,1},{6,9},{6,0},{6,10},
{8,0},{6,77},{3,1},{6,9},{6,0},{6,10},{8,0},{6,79},{3,1},{6,9},{6,0},{6,10},
{8,0},{6,80},{3,1},{6,0},{8,0},{6,9},{6,10},{8,0},{6,0},{6,0},{6,0},{8,0},
{6,81},{6,0},{8,0},{6,81},{6,0},{6,82},{6,0},{8,0},{6,83},{8,0},{6,83},{6,0},
{8,0},{6,84},{6,0},{8,0},{6,0},{6,85},{8,0},{6,0},{6,85},{6,0},{6,0},{8,0},
{6,85},{8,0},{6,85},{6,0},{6,0},{8,0},{6,86},{6,0},{8,0},{6,86},{6,84},{6,0},
{8,0},{6,86},{6,87},{6,0},{8,0},{6,0},{6,88},{8,0},{6,89},{8,0},{6,89},{6,85},
{8,0},{6,89},{6,89},{8,0},{6,90},{6,91},{8,0},{6,90},{6,92},{8,0},{6,27},{8,0},
{6,93},{8,0},{6,24},{8,0},{6,94},{6,0},{6,82},{6,0},{8,0},{6,95},{6,0},{6,82},
{6,0},{8,0},{6,96},{6,0},{6,82},{6,0},{8,0},{6,96},{6,0},{6,82},{6,0},{6,96},
{6,0},{8,0},{6,97},{6,0},{6,82},{6,0},{8,0},{6,97},{6,0},{6,82},{6,0},{6,96},
{6,0},{8,0},{8,0},{6,0},{3,1},{6,9},{6,10},{3,1},{6,2},{3,1},{6,0},{8,0},
{6,99},{3,1},{6,0},{8,0},{6,99},{3,1},{6,0},{3,1},{6,9},{6,10},{8,0},{6,99},
{3,1},{6,0},{3,1},{6,9},{6,0},{6,10},{8,0},{6,11},{6,0},{8,0},{6,100},{8,0},
{6,100},{3,1},{6,0},{8,0},{3,1},{6,9},{6,0},{6,10},{8,0},{6,0},{6,101},{6,0},
{8,0},{6,0},{6,27},{6,0},{8,0},{6,0},{6,102},{6,0},{8,0},{6,0},{6,93},{6,0},
{8,0},{6,0},{3,1},{6,103},{3,1},{6,0},{8,0},{6,0},{3,1},{6,104},{3,1},{6,0},
{8,0},{6,0},{3,1},{6,105},{3,1},{6,0},{8,0},{6,0},{3,1},{6,106},{3,1},{6,0},
{8,0},{6,107},{3,1},{6,0},{8,0},{6,107},{6,0},{8,0},{6,0},{3,1},{6,0},{3,1},
{6,0},{8,0},{6,108},{8,0},{6,109},{8,0},{6,110},{8,0},{6,111},{8,0},{6,112},{8,0},
{6,113},{8,0},{6,0},{3,1},{6,9},{6,0},{3,1},{6,24},{3,1},{6,0},{6,10},{8,0},
{6,0},{3,1},{6,9},{6,24},{3,1},{6,0},{6,10},{8,0},{6,39},{8,0},{6,9},{6,0},
{6,3},{3,1},{6,0},{6,10},{8,0},{6,118},{8,0},{6,119},{8,0},{6,101},{8,0},{6,29},
{8,0},};

static struct SXPP_schema *PP_tables[]={NULL,
&SXPP_schema[0],
&SXPP_schema[4],
&SXPP_schema[11],
&SXPP_schema[14],
&SXPP_schema[14],
&SXPP_schema[14],
&SXPP_schema[14],
&SXPP_schema[17],
&SXPP_schema[22],
&SXPP_schema[24],
&SXPP_schema[22],
&SXPP_schema[30],
&SXPP_schema[17],
&SXPP_schema[39],
&SXPP_schema[46],
&SXPP_schema[50],
&SXPP_schema[14],
&SXPP_schema[56],
&SXPP_schema[56],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[24],
&SXPP_schema[30],
&SXPP_schema[24],
&SXPP_schema[30],
&SXPP_schema[24],
&SXPP_schema[30],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[61],
&SXPP_schema[22],
&SXPP_schema[65],
&SXPP_schema[71],
&SXPP_schema[75],
&SXPP_schema[80],
&SXPP_schema[22],
&SXPP_schema[86],
&SXPP_schema[90],
&SXPP_schema[92],
&SXPP_schema[97],
&SXPP_schema[99],
&SXPP_schema[101],
&SXPP_schema[105],
&SXPP_schema[107],
&SXPP_schema[109],
&SXPP_schema[22],
&SXPP_schema[75],
&SXPP_schema[80],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[118],
&SXPP_schema[120],
&SXPP_schema[124],
&SXPP_schema[128],
&SXPP_schema[134],
&SXPP_schema[80],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[138],
&SXPP_schema[22],
&SXPP_schema[138],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[118],
&SXPP_schema[144],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[148],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[152],
&SXPP_schema[14],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[156],
&SXPP_schema[163],
&SXPP_schema[169],
&SXPP_schema[175],
&SXPP_schema[180],
&SXPP_schema[184],
&SXPP_schema[190],
&SXPP_schema[197],
&SXPP_schema[201],
&SXPP_schema[207],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[86],
&SXPP_schema[22],
&SXPP_schema[214],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[80],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[218],
&SXPP_schema[222],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[148],
&SXPP_schema[226],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[232],
&SXPP_schema[238],
&SXPP_schema[242],
&SXPP_schema[246],
&SXPP_schema[248],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[252],
&SXPP_schema[256],
&SXPP_schema[113],
&SXPP_schema[14],
&SXPP_schema[22],
&SXPP_schema[260],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[266],
&SXPP_schema[266],
&SXPP_schema[266],
&SXPP_schema[266],
&SXPP_schema[272],
&SXPP_schema[283],
&SXPP_schema[113],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[232],
&SXPP_schema[297],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[305],
&SXPP_schema[311],
&SXPP_schema[322],
&SXPP_schema[332],
&SXPP_schema[343],
&SXPP_schema[305],
&SXPP_schema[353],
&SXPP_schema[367],
&SXPP_schema[375],
&SXPP_schema[22],
&SXPP_schema[390],
&SXPP_schema[390],
&SXPP_schema[398],
&SXPP_schema[409],
&SXPP_schema[423],
&SXPP_schema[426],
&SXPP_schema[432],
&SXPP_schema[436],
&SXPP_schema[443],
&SXPP_schema[455],
&SXPP_schema[466],
&SXPP_schema[472],
&SXPP_schema[113],
&SXPP_schema[480],
&SXPP_schema[482],
&SXPP_schema[484],
&SXPP_schema[484],
&SXPP_schema[488],
&SXPP_schema[491],
&SXPP_schema[491],
&SXPP_schema[495],
&SXPP_schema[503],
&SXPP_schema[509],
&SXPP_schema[517],
&SXPP_schema[523],
&SXPP_schema[180],
&SXPP_schema[530],
&SXPP_schema[537],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[113],
&SXPP_schema[113],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[541],
&SXPP_schema[547],
&SXPP_schema[553],
&SXPP_schema[559],
&SXPP_schema[565],
&SXPP_schema[571],
&SXPP_schema[113],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[577],
&SXPP_schema[594],
&SXPP_schema[608],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[547],
&SXPP_schema[565],
&SXPP_schema[614],
&SXPP_schema[620],
&SXPP_schema[626],
&SXPP_schema[632],
&SXPP_schema[638],
&SXPP_schema[644],
&SXPP_schema[571],
&SXPP_schema[650],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[547],
&SXPP_schema[565],
&SXPP_schema[620],
&SXPP_schema[571],
&SXPP_schema[656],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[662],
&SXPP_schema[565],
&SXPP_schema[614],
&SXPP_schema[571],
&SXPP_schema[667],
&SXPP_schema[673],
&SXPP_schema[679],
&SXPP_schema[685],
&SXPP_schema[691],
&SXPP_schema[626],
&SXPP_schema[697],
&SXPP_schema[703],
&SXPP_schema[632],
&SXPP_schema[709],
&SXPP_schema[715],
&SXPP_schema[638],
&SXPP_schema[721],
&SXPP_schema[644],
&SXPP_schema[180],
&SXPP_schema[727],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[547],
&SXPP_schema[565],
&SXPP_schema[571],
&SXPP_schema[180],
&SXPP_schema[733],
&SXPP_schema[180],
&SXPP_schema[739],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[118],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[118],
&SXPP_schema[745],
&SXPP_schema[749],
&SXPP_schema[148],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[113],
&SXPP_schema[14],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[14],
&SXPP_schema[113],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[14],
&SXPP_schema[22],
&SXPP_schema[752],
&SXPP_schema[14],
&SXPP_schema[22],
&SXPP_schema[148],
&SXPP_schema[756],
&SXPP_schema[759],
&SXPP_schema[764],
&SXPP_schema[766],
&SXPP_schema[769],
&SXPP_schema[22],
&SXPP_schema[772],
&SXPP_schema[775],
&SXPP_schema[780],
&SXPP_schema[782],
&SXPP_schema[22],
&SXPP_schema[786],
&SXPP_schema[789],
&SXPP_schema[793],
&SXPP_schema[797],
&SXPP_schema[800],
&SXPP_schema[802],
&SXPP_schema[805],
&SXPP_schema[808],
&SXPP_schema[811],
&SXPP_schema[814],
&SXPP_schema[816],
&SXPP_schema[818],
&SXPP_schema[820],
&SXPP_schema[825],
&SXPP_schema[830],
&SXPP_schema[835],
&SXPP_schema[842],
&SXPP_schema[847],
&SXPP_schema[22],
&SXPP_schema[854],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[14],
&SXPP_schema[855],
&SXPP_schema[864],
&SXPP_schema[868],
&SXPP_schema[875],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[883],
&SXPP_schema[886],
&SXPP_schema[888],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[148],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[892],
&SXPP_schema[14],
&SXPP_schema[22],
&SXPP_schema[897],
&SXPP_schema[218],
&SXPP_schema[86],
&SXPP_schema[901],
&SXPP_schema[905],
&SXPP_schema[22],
&SXPP_schema[148],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[854],
&SXPP_schema[22],
&SXPP_schema[14],
&SXPP_schema[22],
&SXPP_schema[897],
&SXPP_schema[218],
&SXPP_schema[86],
&SXPP_schema[901],
&SXPP_schema[905],
&SXPP_schema[22],
&SXPP_schema[148],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[14],
&SXPP_schema[22],
&SXPP_schema[897],
&SXPP_schema[218],
&SXPP_schema[86],
&SXPP_schema[901],
&SXPP_schema[905],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[148],
&SXPP_schema[22],
&SXPP_schema[909],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[148],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[909],
&SXPP_schema[22],
&SXPP_schema[148],
&SXPP_schema[913],
&SXPP_schema[919],
&SXPP_schema[925],
&SXPP_schema[931],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[937],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[148],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[913],
&SXPP_schema[919],
&SXPP_schema[925],
&SXPP_schema[931],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[941],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[148],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[944],
&SXPP_schema[752],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[950],
&SXPP_schema[952],
&SXPP_schema[954],
&SXPP_schema[956],
&SXPP_schema[958],
&SXPP_schema[960],
&SXPP_schema[80],
&SXPP_schema[22],
&SXPP_schema[75],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[962],
&SXPP_schema[972],
&SXPP_schema[962],
&SXPP_schema[22],
&SXPP_schema[980],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[14],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[982],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[14],
&SXPP_schema[14],
&SXPP_schema[22],
&SXPP_schema[989],
&SXPP_schema[991],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[113],
&SXPP_schema[22],
&SXPP_schema[22],
&SXPP_schema[993],
&SXPP_schema[995],
};
extern SXINT sxscanner(SXINT what_to_do, struct sxtables *arg);
extern SXINT sxparser(SXINT what_to_do, struct sxtables *arg);
extern SXINT sxatcpp(SXINT sxatcpp_what, struct sxtables *arg);

struct sxtables sxtables={
52113, /* magic */
{sxscanner,(PARSER_T) sxparser}, {255, 122, 1, 3, 4, 25, 1, 31, 1, 1, 0, 
S_is_a_keyword,S_is_a_generic_terminal,S_transition_matrix,
SXS_action_or_prdct_code,
S_adrp,
NULL,
SXS_local_mess,
S_char_to_simple_class+128,
S_no_delete,
S_no_insert,
S_global_mess,
S_lregle,
(SCANACT_T) SCANACT,
(RECOVERY_T) sxsrecovery,
check_keyword,
},
{145, 404, 416, 512, 705, 997, 1110, 2293, 122, 196, 517, 518, 581, 290, 0, 9, 4, 7, 1, 5, 11, 5, 4,
reductions,
t_bases,
nt_bases,
vector-1110,
SXPBM_trans,
prdcts-405,
NULL,
NULL,
P_lregle,
P_right_ctxt_head,
SXP_local_mess,
P_no_delete,
P_no_insert,
P_global_mess,PER_tset,sxscan_it,(RECOVERY_T) sxprecovery,
(PARSER_T) PARSACT,
NULL,
(SEMACT_T) sxatcpp},
err_titles,
abstract,
(sxsem_tables*)PP_tables,
NULL,
};

#include	"sxdico.h"

#define KW_NB		93
#define INIT_BASE	1
#define INIT_SUFFIX	64
#define CLASS_MASK	31
#define STOP_MASK	32
#define BASE_SHIFT	7
#define SUFFIX_MASK	64

static SXINT kw_code2t_code [94] = {0,
119, 118, 113, 112, 111, 110, 109, 108, 107, 106, 105, 104, 103, 100, 99, 
97, 96, 95, 94, 92, 91, 90, 89, 88, 87, 86, 85, 84, 83, 81, 80, 
79, 77, 75, 73, 72, 71, 70, 69, 68, 67, 66, 65, 64, 63, 62, 61, 
60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 47, 46, 45, 44, 
43, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 28, 26, 25, 23, 
22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 8, 7, 6, 
};

static SXINT kw_code2lgth [94] = {0,
7, 6, 4, 4, 4, 4, 4, 4, 5, 6, 5, 4, 5, 6, 4, 
1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 6, 
6, 7, 9, 7, 11, 9, 6, 10, 4, 5, 6, 6, 5, 7, 5, 5, 
4, 4, 6, 6, 4, 4, 6, 3, 3, 4, 3, 5, 4, 5, 5, 4, 
8, 2, 4, 4, 2, 2, 2, 6, 4, 9, 8, 9, 8, 6, 11, 9, 
4, 5, 5, 10, 7, 7, 9, 6, 4, 7, 9, 8, 7, 3, 
};

static SXUINT comb_vector [143] = {
0, 0, 12353, 7042, 3459, 2084, 11141, 4870, 1799, 
12545, 0, 9226, 8459, 6284, 2976, 10126, 2863, 9744, 3889, 
7570, 8211, 6567, 13141, 2326, 14999, 10552, 2617, 2208, 6446, 
11170, 3331, 8485, 4262, 5158, 11271, 10025, 6322, 11827, 2720, 
11310, 10146, 6192, 4399, 8336, 5809, 6706, 7987, 7860, 1834, 
8619, 6828, 8354, 9134, 8868, 9904, 2336, 11698, 11059, 11939, 
2464, 9003, 5286, 0, 4648, 3488, 14538, 3360, 5548, 4898, 
5667, 5925, 8103, 3232, 4786, 7336, 7075, 8753, 8236, 5414, 
3744, 0, 10274, 4518, 13841, 13970, 7603, 7210, 3616, 11568, 
11441, 9507, 9651, 10789, 9393, 5031, 0, 10664, 3274, 1698, 
13635, 0, 1443, 9262, 1968, 1318, 809, 1578, 14283, 6054, 
1037, 420, 933, 678, 167, 296, 548, 1061, 3104, 10416, 
4134, 6956, 4012, 0, 1196, 0, 0, 0, 7726, 0, 
0, 9782, 7478, 0, 10928, 0, 0, 0, 0, 0, 
0, 0, 0, 0, 
};

static unsigned char char2class [256] = {
'\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\001', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\016', '\017', '\020', '\002', '\003', '\022', 
'\004', '\000', '\021', '\000', '\025', '\005', '\026', '\006', 
'\f', '\023', '\t', '\n', '\007', '\013', '\b', '\r', 
'\024', '\027', '\030', '\031', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', 
};

#include	"sxcheck_keyword.h"

/* End of sxtables for ppf77 [Tue Feb 13 12:13:06 2007] */
