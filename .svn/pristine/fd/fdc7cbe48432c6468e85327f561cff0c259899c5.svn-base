/* Beginning of sxtables for rcg [Thu Mar  6 12:56:17 2008] */
#define SXP_MAX 112
#include "sxunix.h"
#include "sxba.h"
static struct SXP_reductions reductions[]={{0,0,0,0},
{6, 3, 0, -43},
{2, 2, 1, -43},
{6, 8, 0, 80},
{6, 18, 0, -45},
{2, 10, 1, -44},
{1, 20, 1, 85},
{2, 17, 1, -45},
{2, 7, 2, 80},
{6, 38, 0, -46},
{6, 36, 0, -66},
{1, 4, 4, 76},
{2, 16, 2, -45},
{2, 39, 1, -46},
{2, 35, 2, -66},
{0, 0, 2, -59},
{0, 1, 1, -59},
{6, 11, 0, -44},
{1, 24, 0, -64},
{1, 25, 0, -64},
{1, 26, 0, -64},
{1, 27, 0, -64},
{1, 28, 0, -64},
{1, 29, 0, -64},
{1, 30, 0, -64},
{1, 31, 0, -64},
{1, 32, 0, -64},
{6, 14, 0, -63},
{1, 5, 3, -60},
{5, 12, 0, 83},
{5, 13, 0, 83},
{0, 9, 1, 81},
{1, 6, 3, -60},
{0, 15, 1, -63},
{1, 42, 0, 92},
{6, 33, 0, 87},
{5, 44, 0, -11},
{1, 43, 0, -11},
{1, 21, 3, 86},
{0, 34, 1, 87},
{0, 37, 1, 90},
{1, 22, 3, 86},
{1, 23, 3, 86},
};
static struct SXP_bases t_bases[]={{0,0,0},
{-16, 88, 0},
{-31, 96, 0},
{-33, 97, 89},
{-40, 96, 87},
{-17, 0, 0},
{-27, 97, 91},
{0, 97, 0},
{-35, 96, 87},
{-37, 36, 21},
{0, 97, 91},
{0, 96, 87},
{0, 88, 0},
{-17, 0, 0},
{-17, 0, 0},
{-35, 96, 87},
{-35, 96, 87},
{0, -15, 22},
{0, 48, 1},
{0, 90, 85},
{0, 90, 84},
{0, 51, 2},
{0, 58, 4},
{0, 38, 5},
{-39, 53, 7},
{0, 41, 5},
{0, 42, 5},
{0, 47, 4},
{0, 55, 4},
{0, 50, 4},
{0, 57, 4},
{0, 54, 22},
};
static struct SXP_bases nt_bases[]={{0,0,0},
{-2, -60, 4},
{-5, 0, 0},
{-7, -64, 15},
{-13, 0, 0},
{-44, 94, 80},
{-4, 112, 0},
{-6, -64, 15},
{-9, 102, 74},
{-11, 0, 0},
{-12, -64, 15},
{-9, 104, 0},
{-60, 83, 0},
{-62, 94, 86},
{-8, -44, 9},
{-9, 102, 78},
{-9, 102, 79},
};
static struct SXP_item vector[]={
{1, -59},
{2, -43},
{3, -1},
{7, -61},
{14, -65},
{5, 32},
{5, 28},
{3, 69},
{14, -67},
{14, -68},
{6, 70},
{9, -44},
{7, 52},
{7, 56},
{0, 0},
{10, 49},
{3, 71},
{10, 49},
{8, -3},
{6, 72},
{8, 29},
{9, 30},
{0, 0},
{20, 34},
{11, 18},
{12, 19},
{13, 20},
{14, 21},
{15, 22},
{16, 23},
{17, 24},
{18, 25},
{19, 26},
{5, -63},
{16, -66},
{17, -10},
{18, -46},
{17, -14},
{18, -46},
{11, -45},
{0, 0},
{0, 0},
{0, 0},
{15, -64},
};

static  SXBA_ELT SXPBA_kt2
#if SXBITS_PER_LONG==32
 [2] = {32, 0X80241042, }
#else
 [2] = {32, 0X0000000080241042, }
#endif
/* End SXPBA_kt2 */;
static SXBA SXPBM_trans[]={NULL,
&SXPBA_kt2[0],
};
static SXINT P_lrgl[]={
5,0,-1,1,2,3,0,0,
5,0,-1,2,3,4,0,0,
4,0,2,3,4,0,0,0,
7,0,-1,-1,1,2,3,4,
5,-1,0,1,2,3,0,0,
5,-1,1,2,3,4,0,0,
4,1,2,3,4,0,0,0,
4,-1,2,3,4,0,0,0,
5,-1,-1,1,2,3,0,0,
};
static SXINT *P_lregle[]={NULL,
&P_lrgl[0],
&P_lrgl[8],
&P_lrgl[16],
&P_lrgl[24],
&P_lrgl[32],
&P_lrgl[40],
&P_lrgl[48],
&P_lrgl[56],
&P_lrgl[64],
};
static SXINT P_right_ctxt_head[]={0,
1,2,2,1,1,1,1,2,1,};
static SXINT P_param_ref[]={
-2,1,
1,-2,
1,
-2,-3,1,
-1,0,1,
0,1,-1,
0,1,
0,1,-1,
0,1,-1,-2,
-1,1,
};
static struct SXP_local_mess SXP_local_mess[]={{0,NULL,NULL},
{2,"%s\"%s\" is inserted before \"%s\".",&P_param_ref[0]},
{2,"%s\"%s\" is replaced by \"%s\".",&P_param_ref[2]},
{1,"%s\"%s\" is deleted.",&P_param_ref[4]},
{3,"%s\"%s %s\" is inserted before \"%s\".",&P_param_ref[5]},
{3,"%s\"%s\" is inserted before \"%s %s\".",&P_param_ref[8]},
{3,"%s\"%s\" before \"%s\" is replaced by \"%s\".",&P_param_ref[11]},
{2,"%s\"%s\" before \"%s\" is deleted.",&P_param_ref[14]},
{3,"%s\"%s %s\" is replaced by \"%s\".",&P_param_ref[16]},
{4,"%s\"%s\" before \"%s\" is replaced by \"%s %s\".",&P_param_ref[19]},
{2,"%s\"%s\" is forced before \"%s\".",&P_param_ref[23]},
};
static SXINT P_no_delete[]={
0};
static SXINT P_no_insert[]={
0};
static char *P_global_mess[]={
"%s\"%s\" is expected",
"%s\"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\", \"%s\" is expected",
"%s\"%s\", \"%s\", \"%s\", \"%s\", \"%s\" is expected",
"%sGlobal recovery.",
"%sParsing resumes on \"%s\"",
"End Of File",
"%sParsing stops on End Of File.",
};
static SXINT PER_tset[]={
1,2};

static char *err_titles[SXSEVERITIES]={
"\000",
"\001Warning:\t",
"\002Error:\t",
};
static char abstract []= "%d warnings and %d errors are reported.";
extern SXBOOLEAN sxprecovery (SXINT what_to_do, SXINT *at_state, SXINT latok_no);

static unsigned char S_char_to_simple_class[]={
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,28,3,28,3,3,3,3,28,28,28,28,
28,3,3,28,28,3,3,3,3,28,3,3,3,3,28,3,28,28,3,3,3,29,3,29,3,
3,3,3,29,29,29,29,29,3,3,29,29,3,3,3,3,29,3,3,3,3,29,3,29,29,
3,3,3,3,3,3,3,3,3,3,3,3,4,5,4,4,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,4,6,7,3,3,8,9,3,10,11,12,3,13,14,15,
16,17,17,17,17,17,17,17,17,17,17,3,18,3,19,20,3,21,22,22,22,22,22,22,22,
22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,3,23,3,3,24,3,
25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,
25,26,3,27,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,
3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,28,3,28,3,3,
3,3,28,28,28,28,28,3,3,28,28,3,3,3,3,28,3,3,3,3,28,3,28,28,3,
3,3,29,3,29,3,3,3,3,29,29,29,29,29,3,3,29,29,3,3,3,3,29,3,3,
3,3,29,3,29,29,3,3,3,};
static SXSTMI SXS_transition[]={0,
0x0,0x4016,0x0,0x2402,0x2402,0x9c02,0x2403,0x2404,0x9006,0x9008,0x900a,0x0,
0x4407,0x2c05,0x2406,0x2407,0x900c,0x4402,0x9c03,0x0,0x900e,0x9010,0x2408,0x0,
0x9012,0x2409,0x0,0x9014,0x9016,
0x0,0x4000,0x0,0x1402,0x1402,0x4000,0x4000,0x2404,0x4000,0x9018,0x4000,0x0,
0x4000,0x4000,0x4000,0x2407,0x4000,0x4000,0x4000,0x0,0x4000,0x4000,0x4000,0x0,
0x4000,0x2409,0x0,0x4000,0x4000,
0x0,0x0,0x1c03,0x1c03,0x1c03,0x1c03,0x4409,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,
0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,0x2411,0x1c03,
0x1c03,0x1c03,0x1c03,0x1c03,0x1c03,
0x0,0x0,0x1404,0x1404,0x2402,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,
0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,0x1404,
0x1404,0x1404,0x1404,0x1404,0x1404,
0x0,0x0,0x0,0x9002,0x9002,0x0,0x0,0x9002,0x9002,0x9002,0x0,0x0,
0x0,0x2c12,0x0,0x9002,0x0,0x0,0x0,0x0,0x0,0x9002,0x0,0x0,
0x9002,0x9002,0x0,0x0,0x0,
0x0,0x4002,0x0,0x4002,0x4002,0x0,0x0,0x4002,0x4002,0x4002,0x0,0x0,
0x0,0x0,0x2413,0x4002,0x0,0x0,0x0,0x0,0x4002,0x4002,0x0,0x0,
0x4002,0x4002,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x2414,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,
0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,
0x4c09,0x4c09,0x4c09,0x4c09,0x4c09,
0x0,0x0,0x1409,0x1409,0x1409,0x1409,0x2415,0x2416,0x1409,0x1409,0x1409,0x1409,
0x1409,0x1409,0x1409,0x2417,0x1409,0x1409,0x1409,0x1409,0x1409,0x1409,0x2418,0x1409,
0x1409,0x941a,0x901c,0x1409,0x1409,
0x0,0x0,0x140a,0x140a,0x140a,0x140a,0x2419,0x241a,0x140a,0x941e,0x9021,0x140a,
0x140a,0x140a,0x140a,0x241b,0x140a,0x140a,0x140a,0x140a,0x140a,0x140a,0x241c,0x140a,
0x140a,0x140a,0x140a,0x140a,0x140a,
0x0,0x0,0x0,0x9023,0x9023,0x0,0x0,0x9023,0x0,0x9023,0x0,0x0,
0x0,0x0,0x0,0x9023,0x1c0b,0x0,0x0,0x0,0x0,0x1c0b,0x0,0x1c0b,
0x1c0b,0x9023,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x9024,0x0,0x0,
0x9024,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x4008,0x4008,0x0,0x4008,0x4008,0x0,0x4008,0x4008,0x0,
0x4008,0x0,0x4008,0x4008,0x1c0d,0x0,0x0,0x0,0x0,0x1c0d,0x4008,0x1c0d,
0x1c0d,0x4008,0x0,0x1c0d,0x1c0d,
0x0,0x0,0x0,0x4009,0x4009,0x0,0x4009,0x4009,0x0,0x4009,0x4009,0x0,
0x4009,0x0,0x4009,0x4009,0x1c0e,0x0,0x0,0x0,0x0,0x1c0e,0x4009,0x1c0e,
0x1c0e,0x4009,0x0,0x1c0e,0x1c0e,
0x0,0x0,0x0,0x4009,0x4009,0x0,0x4009,0x4009,0x0,0x4009,0x4009,0x0,
0x4009,0x0,0x4009,0x4009,0x1c0f,0x0,0x0,0x0,0x0,0x4009,0x4009,0x0,
0x4009,0x4009,0x0,0x4009,0x4009,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x9027,0x0,0x0,
0x9027,0x0,0x0,0x0,0x0,
0x0,0x0,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,
0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,
0x2c03,0x2c03,0x2c03,0x2c03,0x2c03,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x9c03,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x4414,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x0,0x0,0x0,
0x0,0x0,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x241f,
0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,0x1414,
0x1414,0x1414,0x1414,0x1414,0x1414,
0x0,0x0,0x2420,0x2420,0x2420,0x2420,0x0,0x2420,0x2420,0x2420,0x2420,0x2420,
0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2421,0x2420,
0x2420,0x2420,0x2420,0x2420,0x2420,
0x0,0x0,0x1416,0x1416,0x2409,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,
0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,0x1416,
0x1416,0x1416,0x1416,0x1416,0x1416,
0x0,0x0,0x2409,0x2409,0x2409,0x2409,0x2415,0x2416,0x2409,0x2409,0x2409,0x2422,
0x2409,0x2409,0x2409,0x1417,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,0x2418,0x2409,
0x2409,0x941a,0x901c,0x2409,0x2409,
0x0,0x0,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,
0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,0x2409,
0x2409,0x2409,0x2409,0x2409,0x2409,
0x0,0x0,0x2423,0x2423,0x2423,0x2423,0x0,0x2423,0x2423,0x2423,0x2423,0x2423,
0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2424,0x2423,
0x2423,0x2423,0x2423,0x2423,0x2423,
0x0,0x0,0x141a,0x141a,0x240a,0x141a,0x141a,0x141a,0x141a,0x141a,0x141a,0x141a,
0x141a,0x141a,0x141a,0x141a,0x141a,0x141a,0x141a,0x141a,0x141a,0x141a,0x141a,0x141a,
0x141a,0x141a,0x141a,0x141a,0x141a,
0x0,0x0,0x240a,0x240a,0x240a,0x240a,0x2419,0x241a,0x240a,0x941e,0x9021,0x2425,
0x240a,0x240a,0x240a,0x141b,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,0x241c,0x240a,
0x240a,0x240a,0x240a,0x240a,0x240a,
0x0,0x0,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,
0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,0x240a,
0x240a,0x240a,0x240a,0x240a,0x240a,
0x0,0x0,0x0,0x9029,0x9029,0x0,0x0,0x9029,0x0,0x9029,0x0,0x0,
0x0,0x0,0x0,0x9029,0x1c1d,0x0,0x0,0x0,0x0,0x1c1d,0x0,0x1c1d,
0x1c1d,0x9029,0x0,0x0,0x0,
0x0,0x902a,0x0,0x902a,0x902a,0x0,0x0,0x902a,0x902a,0x902a,0x0,0x0,
0x0,0x0,0x0,0x902a,0x1c1e,0x0,0x0,0x0,0x0,0x1c1e,0x0,0x1c1e,
0x1c1e,0x902a,0x0,0x0,0x0,
0x0,0x0,0x2414,0x2414,0x2414,0x2414,0x2414,0x2414,0x2414,0x2414,0x2414,0x141f,
0x2414,0x2414,0x2414,0x2402,0x2414,0x2414,0x2414,0x2414,0x2414,0x2414,0x2414,0x2414,
0x2414,0x2414,0x2414,0x2414,0x2414,
0x0,0x0,0x1420,0x1420,0x1420,0x1420,0x2409,0x1420,0x1420,0x1420,0x1420,0x1420,
0x1420,0x1420,0x1420,0x1420,0x1420,0x1420,0x1420,0x1420,0x1420,0x1420,0x2421,0x1420,
0x1420,0x1420,0x1420,0x1420,0x1420,
0x0,0x0,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,
0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,0x2420,
0x2420,0x2420,0x2420,0x2420,0x2420,
0x0,0x0,0x1422,0x1422,0x1422,0x1422,0x1422,0x1422,0x1422,0x1422,0x1422,0x2426,
0x1422,0x1422,0x1422,0x1422,0x1422,0x1422,0x1422,0x1422,0x1422,0x1422,0x1422,0x1422,
0x1422,0x1422,0x1422,0x1422,0x1422,
0x0,0x0,0x1423,0x1423,0x1423,0x1423,0x240a,0x1423,0x1423,0x1423,0x1423,0x1423,
0x1423,0x1423,0x1423,0x1423,0x1423,0x1423,0x1423,0x1423,0x1423,0x1423,0x2424,0x1423,
0x1423,0x1423,0x1423,0x1423,0x1423,
0x0,0x0,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,
0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,0x2423,
0x2423,0x2423,0x2423,0x2423,0x2423,
0x0,0x0,0x1425,0x1425,0x1425,0x1425,0x1425,0x1425,0x1425,0x1425,0x1425,0x2427,
0x1425,0x1425,0x1425,0x1425,0x1425,0x1425,0x1425,0x1425,0x1425,0x1425,0x1425,0x1425,
0x1425,0x1425,0x1425,0x1425,0x1425,
0x0,0x0,0x2422,0x2422,0x2422,0x2422,0x2422,0x2422,0x2422,0x2422,0x2422,0x1426,
0x2422,0x2422,0x2422,0x2409,0x2422,0x2422,0x2422,0x2422,0x2422,0x2422,0x2422,0x2422,
0x2422,0x2422,0x2422,0x2422,0x2422,
0x0,0x0,0x2425,0x2425,0x2425,0x2425,0x2425,0x2425,0x2425,0x2425,0x2425,0x1427,
0x2425,0x2425,0x2425,0x240a,0x2425,0x2425,0x2425,0x2425,0x2425,0x2425,0x2425,0x2425,
0x2425,0x2425,0x2425,0x2425,0x2425,
};
static SXSTMI *S_transition_matrix[]={NULL,
&SXS_transition[0],
&SXS_transition[29],
&SXS_transition[58],
&SXS_transition[87],
&SXS_transition[116],
&SXS_transition[145],
&SXS_transition[174],
&SXS_transition[203],
&SXS_transition[232],
&SXS_transition[261],
&SXS_transition[290],
&SXS_transition[319],
&SXS_transition[348],
&SXS_transition[377],
&SXS_transition[406],
&SXS_transition[435],
&SXS_transition[464],
&SXS_transition[493],
&SXS_transition[522],
&SXS_transition[551],
&SXS_transition[580],
&SXS_transition[609],
&SXS_transition[638],
&SXS_transition[667],
&SXS_transition[696],
&SXS_transition[725],
&SXS_transition[754],
&SXS_transition[783],
&SXS_transition[812],
&SXS_transition[841],
&SXS_transition[870],
&SXS_transition[899],
&SXS_transition[928],
&SXS_transition[957],
&SXS_transition[986],
&SXS_transition[1015],
&SXS_transition[1044],
&SXS_transition[1073],
&SXS_transition[1102],
};
static struct SXS_action_or_prdct_code SXS_action_or_prdct_code[]={{0,0,0,0,0},
{0x5006,1,0,0,0},
{0x400a,5,0,1,0},
{0x4001,5,0,1,0},
{0x4004,3,2,1,0},
{0x9026,3,0,1,0},
{0x240c,3,2,1,1},
{0x0,0,0,1,1},
{0x9404,3,0,1,1},
{0x240a,0,0,1,1},
{0x9405,3,0,1,1},
{0x0,0,0,1,1},
{0x2c0f,2,2,1,1},
{0x0,0,0,1,1},
{0x2410,3,2,1,1},
{0x0,0,0,1,1},
{0x2c0d,2,2,1,1},
{0x2c0b,0,2,1,1},
{0x2c0e,2,2,1,1},
{0x2c0b,0,2,1,1},
{0x2c0d,2,2,1,1},
{0x0,0,0,1,1},
{0x2c0e,2,2,1,1},
{0x0,0,0,1,1},
{0x4000,3,0,1,1},
{0x240a,0,0,1,1},
{0x2009,12,1,1,0},
{0x2009,13,1,1,0},
{0x2402,3,1,1,1},
{0x941b,0,0,1,1},
{0x200a,12,1,1,0},
{0x200a,13,1,1,0},
{0x2002,4,0,1,0},
{0x9420,3,1,1,1},
{0x941f,0,0,1,1},
{0x4003,4,0,1,0},
{0x2c1d,3,2,1,1},
{0x0,0,0,1,1},
{0x4005,4,2,1,0},
{0x2c1e,3,2,1,1},
{0x0,0,0,1,1},
{0x9001,4,0,1,0},
{0x4015,4,0,1,0},
};
static char *S_adrp[]={0,
"-->",
".",
"%internal_predicate",
"(",
")",
"%external_predicate",
",",
"%variable",
"%terminal",
"!",
"streq",
"streqlen",
"strlen",
"first",
"last",
"false",
"cut",
"true",
"lex",
"...",
"%external_action",
"End Of File",
};
static SXINT S_is_a_keyword[]={
9,11,12,13,14,15,16,17,18,19};
static SXINT S_is_a_generic_terminal[]={
5,3,6,8,9,21};
static SXINT S_lrgl[]={
4,1,2,3,4,0,
5,-1,1,2,3,4,
5,-1,0,1,2,3,
};
static SXINT *S_lregle[]={NULL,
&S_lrgl[0],
&S_lrgl[6],
&S_lrgl[12],
};
static SXINT S_param_ref[]={
0,
0,-1,
-1,0,
};
static struct SXS_local_mess SXS_local_mess[]={{0,NULL,NULL},
{1,"%sThe invalid character \"%s\" is deleted.",&S_param_ref[0]},
{2,"%sThe invalid character \"%s\" is replaced by \"%s\".",&S_param_ref[1]},
{2,"%sThe character \"%s\" is inserted before \"%s\".",&S_param_ref[3]},
};
static SXINT S_no_delete[]={
0};
static SXINT S_no_insert[]={
0};
static char *S_global_mess[]={0,
"%s\"%s\" is deleted.",
"%sThis unknown keyword is erased.",
"End Of Line",
"End Of File",
"%sScanning stops on End Of File.",
};
extern SXINT SCANACT(SXINT what, SXINT act_no);
extern SXINT sxscan_it(void);
extern SXBOOLEAN sxsrecovery (SXINT sxsrecovery_what, SXINT state_no, unsigned char *class);
static SXINT check_keyword(char *init_string, SXINT init_length);
static struct SXT_node_info SXT_node_info[]={{0,0},
{0,1},{0,2},{4,4},{3,5},{7,8},{7,10},{0,12},{2,14},{0,15},{0,16},{9,18},{15,18},
{14,19},{8,20},{0,20},{0,21},{0,23},{8,25},{0,26},{6,27},{7,28},{7,30},{7,32},{10,34},
{10,34},{10,34},{10,34},{10,34},{10,34},{10,34},{10,34},{10,34},{2,34},{0,34},{0,35},{2,37},
{0,38},{9,39},{0,40},{0,42},{0,43},{5,44},{10,44},{11,44},{0,45},};
static SXINT T_ter_to_node_name[]={
0,0,0,13,0,0,12,};
static char *T_node_name[]={NULL,
"ERROR",
"ARGUMENT_S",
"CLAUSE",
"CLAUSE_S",
"ETC",
"NOT",
"PREDICATE",
"PREDICATE_S",
"STRING_S",
"VOID",
"external_action",
"external_predicate",
"internal_predicate",
"terminal",
"variable",
};
extern SXINT sempass(SXINT what, struct sxtables *sxtables_ptr);
static char T_stack_schema[]={0,
0,0,1,0,0,2,4,1,3,1,3,0,2,0,0,0,1,0,0,0,0,2,0,1,0,
0,0,1,3,1,3,1,3,0,0,2,0,0,0,0,1,0,0,0,0,};

static struct SXT_tables SXT_tables=
{SXT_node_info, T_ter_to_node_name, T_stack_schema, sempass, T_node_name};
extern SXINT sxscanner(SXINT what_to_do, struct sxtables *arg);
extern SXINT sxparser(SXINT what_to_do, struct sxtables *arg);
extern SXINT sxatc(SXINT what, ...);

struct sxtables sxtables={
52113, /* magic */
{sxscanner,(PARSER_T) sxparser}, {255, 22, 1, 3, 4, 29, 3, 39, 1, 1, 0, 
S_is_a_keyword,S_is_a_generic_terminal,S_transition_matrix,
SXS_action_or_prdct_code,
S_adrp,
NULL,
SXS_local_mess,
S_char_to_simple_class+128,
S_no_delete,
S_no_insert,
S_global_mess,
S_lregle,
(SCANACT_T) SCANACT,
(RECOVERY_T) sxsrecovery,
check_keyword,
},
{14, 42, 42, 54, 58, 73, 84, 127, 22, 20, 44, 44, 31, 17, 0, 9, 4, 7, 2, 5, 11, 5, 4,
reductions,
t_bases,
nt_bases,
vector-84,
SXPBM_trans,
NULL,
NULL,
NULL,
P_lregle,
P_right_ctxt_head,
SXP_local_mess,
P_no_delete,
P_no_insert,
P_global_mess,PER_tset,sxscan_it,(RECOVERY_T) sxprecovery,
NULL,
NULL,
(SEMACT_T) sxatc},
err_titles,
abstract,
(sxsem_tables*)&SXT_tables,
NULL,
};

#include	"sxdico.h"

#define KW_NB		9
#define INIT_BASE	1
#define INIT_SUFFIX	0
#define CLASS_MASK	15
#define STOP_MASK	16
#define BASE_SHIFT	6
#define SUFFIX_MASK	32

static SXINT kw_code2t_code [10] = {0,
19, 18, 17, 16, 15, 14, 13, 12, 11, 
};

static SXINT kw_code2lgth [10] = {0,
3, 4, 3, 5, 4, 5, 6, 8, 5, 
};

static SXUINT comb_vector [27] = {
0, 0, 209, 962, 0, 0, 709, 0, 359, 
0, 153, 469, 534, 776, 339, 0, 603, 86, 275, 
404, 394, 649, 0, 0, 0, 0, 0, 
};

static unsigned char char2class [256] = {
'\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\003', '\000', '\001', '\000', '\006', '\002', 
'\000', '\000', '\004', '\000', '\000', '\005', '\000', '\b', 
'\000', '\000', '\013', '\n', '\007', '\t', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', '\000', '\000', '\000', '\000', '\000', '\000', '\000', 
'\000', 
};

#include	"sxcheck_keyword.h"

/* End of sxtables for rcg [Thu Mar  6 12:56:17 2008] */
